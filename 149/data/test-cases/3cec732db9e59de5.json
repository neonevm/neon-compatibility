{
  "uid" : "3cec732db9e59de5",
  "name" : "test_transfer_zero_tokens",
  "fullName" : "tests.brownie.token.tests.test_transfer#test_transfer_zero_tokens",
  "historyId" : "11077ef1115b1ee4997c2c5409243af5",
  "time" : {
    "start" : 1638414587785,
    "stop" : 1638414587785,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='test3-solana', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fbe4fe07c70>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
  "statusTrace" : "brownie_project = <Project 'TokenProject'>\naccounts = <brownie.network.account.Accounts object at 0x7fe280d0b370>\n\n    @pytest.fixture(scope=\"module\")\n    def token(brownie_project, accounts):\n>       return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n\ntests/brownie/token/tests/conftest.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:600: in __call__\n    return tx[\"from\"].deploy(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:508: in deploy\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:725: in _make_transaction\n    raise VirtualMachineError(e) from None\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError(\"Gas estimation failed: 'HTTPConnectionPool(host='test3-solana', port=8899): Max retrie... resolution'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\"))\nexc = \"Gas estimation failed: 'HTTPConnectionPool(host='test3-solana', port=8899): Max retries exceeded with url: / (Caused ...me resolution'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\"\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.message: str = exc[\"message\"].rstrip(\".\")\n    \n            if isinstance(exc[\"data\"], str):\n                # handle parity exceptions - this logic probably is not perfect\n                if \"0x08c379a0\" in exc[\"data\"]:\n                    revert_type, err_msg = [i.strip() for i in exc[\"data\"].split(\"0x08c379a0\", 1)]\n                    err_msg = eth_abi.decode_abi([\"string\"], HexBytes(err_msg))\n                    err_msg = f\"{revert_type} '{err_msg}'\"\n                elif exc[\"data\"].endswith(\"0x\"):\n                    err_msg = exc[\"data\"][:-2].strip()\n                else:\n                    err_msg = exc[\"data\"]\n                raise ValueError(f\"{self.message}: {err_msg}\") from None\n    \n            try:\n                txid, data = next((k, v) for k, v in exc[\"data\"].items() if k.startswith(\"0x\"))\n            except StopIteration:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.txid: str = txid\n            self.source: str = \"\"\n            self.revert_type: str = data[\"error\"]\n            self.pc: Optional[str] = data.get(\"program_counter\")\n            if self.pc and self.revert_type == \"revert\":\n                self.pc -= 1\n    \n            self.revert_msg: Optional[str] = data.get(\"reason\")\n            self.dev_revert_msg = brownie.project.build._get_dev_revert(self.pc)\n            if self.revert_msg is None and self.revert_type in (\"revert\", \"invalid opcode\"):\n                self.revert_msg = self.dev_revert_msg\n            elif self.revert_msg == \"Failed assertion\":\n                self.revert_msg = self.dev_revert_msg or self.revert_msg\n    \n        else:\n>           raise ValueError(str(exc)) from None\nE           ValueError: Gas estimation failed: 'HTTPConnectionPool(host='test3-solana', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fbe4fe07c70>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:121: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : true,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1638414565014,
      "stop" : 1638414565015,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1638414566601,
      "stop" : 1638414584930,
      "duration" : 18329
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1638414585447,
      "stop" : 1638414585723,
      "duration" : 276
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1638414585447,
      "stop" : 1638414585447,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1638414587075,
      "stop" : 1638414587414,
      "duration" : 339
    },
    "status" : "broken",
    "statusMessage" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='test3-solana', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fbe4fe07c70>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\n",
    "statusTrace" : "  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 932, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/neon-compatibility/neon-compatibility/tests/brownie/token/tests/conftest.py\", line 49, in token\n    return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py\", line 600, in __call__\n    return tx[\"from\"].deploy(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 508, in deploy\n    receipt, exc = self._make_transaction(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 725, in _make_transaction\n    raise VirtualMachineError(e) from None\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py\", line 121, in __init__\n    raise ValueError(str(exc)) from None\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1638414589948,
      "stop" : 1638414589948,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_transfer"
  }, {
    "name" : "host",
    "value" : "fv-az123-322"
  }, {
    "name" : "thread",
    "value" : "3469-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_transfer"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 5,
        "skipped" : 0,
        "passed" : 12,
        "unknown" : 0,
        "total" : 17
      },
      "items" : [ {
        "uid" : "b66d17a49d7e6c99",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/147//#testresult/b66d17a49d7e6c99",
        "status" : "passed",
        "time" : {
          "start" : 1638399309456,
          "stop" : 1638399311952,
          "duration" : 2496
        }
      }, {
        "uid" : "ccabfbb6b2a5bd61",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/2//#testresult/ccabfbb6b2a5bd61",
        "status" : "passed",
        "time" : {
          "start" : 1638375952245,
          "stop" : 1638375954341,
          "duration" : 2096
        }
      }, {
        "uid" : "4c6062b527fb02dc",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/146//#testresult/4c6062b527fb02dc",
        "status" : "passed",
        "time" : {
          "start" : 1638363600542,
          "stop" : 1638363603039,
          "duration" : 2497
        }
      }, {
        "uid" : "cfe42d5837e8c707",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/145//#testresult/cfe42d5837e8c707",
        "status" : "passed",
        "time" : {
          "start" : 1638328186495,
          "stop" : 1638328188540,
          "duration" : 2045
        }
      }, {
        "uid" : "afc6f4126b49322c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/143//#testresult/afc6f4126b49322c",
        "status" : "passed",
        "time" : {
          "start" : 1638318639026,
          "stop" : 1638318642014,
          "duration" : 2988
        }
      }, {
        "uid" : "bb4ed13ef6eb26f",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/141//#testresult/bb4ed13ef6eb26f",
        "status" : "passed",
        "time" : {
          "start" : 1638285811989,
          "stop" : 1638285814897,
          "duration" : 2908
        }
      }, {
        "uid" : "6c3df434ce38fcd",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/137//#testresult/6c3df434ce38fcd",
        "status" : "passed",
        "time" : {
          "start" : 1638265752279,
          "stop" : 1638265754857,
          "duration" : 2578
        }
      }, {
        "uid" : "33515924eb4c088b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/140//#testresult/33515924eb4c088b",
        "status" : "broken",
        "statusDetails" : "ValueError: Transaction simulation failed: Error processing Instruction 0: insufficient funds for instruction",
        "time" : {
          "start" : 1638269191643,
          "stop" : 1638269191643,
          "duration" : 0
        }
      }, {
        "uid" : "c04258500fa5022b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/138//#testresult/c04258500fa5022b",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='test3-solana', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f4107a65ca0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1638265725535,
          "stop" : 1638265725535,
          "duration" : 0
        }
      }, {
        "uid" : "4a9ead9a217dc0a4",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/136//#testresult/4a9ead9a217dc0a4",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1638246925909,
          "stop" : 1638246925909,
          "duration" : 0
        }
      }, {
        "uid" : "d655b813b5f0916a",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/135//#testresult/d655b813b5f0916a",
        "status" : "passed",
        "time" : {
          "start" : 1638241782152,
          "stop" : 1638241785116,
          "duration" : 2964
        }
      }, {
        "uid" : "16e935cfb09d7fd5",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/134//#testresult/16e935cfb09d7fd5",
        "status" : "passed",
        "time" : {
          "start" : 1638232142525,
          "stop" : 1638232144924,
          "duration" : 2399
        }
      }, {
        "uid" : "d3f0f6836b27eabe",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/133//#testresult/d3f0f6836b27eabe",
        "status" : "passed",
        "time" : {
          "start" : 1638219630339,
          "stop" : 1638219632799,
          "duration" : 2460
        }
      }, {
        "uid" : "ac65490eea3d1b08",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/131//#testresult/ac65490eea3d1b08",
        "status" : "passed",
        "time" : {
          "start" : 1638203509635,
          "stop" : 1638203511713,
          "duration" : 2078
        }
      }, {
        "uid" : "38a0f2e26e8d5592",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/129//#testresult/38a0f2e26e8d5592",
        "status" : "passed",
        "time" : {
          "start" : 1638200009579,
          "stop" : 1638200012146,
          "duration" : 2567
        }
      }, {
        "uid" : "91068821507b3299",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/128//#testresult/91068821507b3299",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Error processing Instruction 1: invalid account data for instruction'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1638198571691,
          "stop" : 1638198571691,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "3cec732db9e59de5.json",
  "parameterValues" : [ ]
}