{
  "uid" : "3d1e46461f95c17c",
  "name" : "returns true for a valid Merkle proof",
  "fullName" : "returns true for a valid Merkle proof",
  "historyId" : "30a89c59ae77b16b69dd9ab73b8db905",
  "time" : {
    "start" : 1643368009534,
    "stop" : 1643368024322,
    "duration" : 14788
  },
  "status" : "broken",
  "statusMessage" : "Returned error: Transaction simulation failed: Error processing Instruction 0: custom program error: 0x4",
  "statusTrace" : "Error: Returned error: Transaction simulation failed: Error processing Instruction 0: custom program error: 0x4\n    at Context.<anonymous> (test/utils/cryptography/MerkleProof.test.js:12:52)\n    at processImmediate (node:internal/timers:464:21)",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "time" : { },
    "status" : "broken",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "time" : { },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "Contract: MerkleProof"
  }, {
    "name" : "suite",
    "value" : "verify"
  }, {
    "name" : "epic",
    "value" : "OpenZeppelin contracts"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 4,
        "skipped" : 0,
        "passed" : 7,
        "unknown" : 0,
        "total" : 11
      },
      "items" : [ {
        "uid" : "9f8e5aefffe8c3a3",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/testnet/438//#testresult/9f8e5aefffe8c3a3",
        "status" : "broken",
        "statusDetails" : "Returned error: Failed trying 10 times to get Blockhash for transaction {'fee_payer': None, 'instructions': [TransactionInstruction(keys=[AccountMeta(pubkey=CoyL7Q83ZYfBARgHvFch3yfB5e8wXt2EPG4QyGJVpfcQ, is_signer=False, is_writable=True), AccountMeta(pubkey=EJUKLLjBMhFnkonfn7wcThnHyDewmhVmG9sEuVP9cvF8, is_signer=True, is_writable=True), AccountMeta(pubkey=7CRvHTYiioSbAKkTwERQdTm5mJUAvvVYU51ETgfaxjuK, is_signer=False, is_writable=True), AccountMeta(pubkey=9KSE4TzEeaGTTmChbG4T2bpn5D9TgXJtDfgAbQjGpxWq, is_signer=False, is_writable=True), AccountMeta(pubkey='1nc1nerator11111111111111111111111111111111', is_signer=False, is_writable=True), AccountMeta(pubkey=11111111111111111111111111111111, is_signer=False, is_writable=False), AccountMeta(pubkey=7H6DdB5rG3vHdcm97wS6Rfb8Z59TVeJW8C7wENXjLSjY, is_signer=False, is_writable=True), AccountMeta(pubkey=4mwj6Nx7FcHy7aFd1o1r9Bt21MCRN9Zyxk5qzdmCQEM2, is_signer=False, is_writable=True), AccountMeta(pubkey=6WKJZwqqYLjcDBzoBrTLrEj8fdLb1MrgqjpNYdLyTaAA, is_signer=False, is_writable=True), AccountMeta(pubkey='Sysvar1nstructions1111111111111111111111111', is_signer=False, is_writable=False), AccountMeta(pubkey='eeLSJgWzzxrqKv1UxtRVVH8FX3qCQWUs9QuAjJpETGU', is_signer=False, is_writable=False), AccountMeta(pubkey=TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA, is_signer=False, is_writable=False)], program_id='eeLSJgWzzxrqKv1UxtRVVH8FX3qCQWUs9QuAjJpETGU', data=bytearray(b'\\x15\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'))], 'signatures': [SigPubkeyPair(pubkey=EJUKLLjBMhFnkonfn7wcThnHyDewmhVmG9sEuVP9cvF8, signature=b'T\\xfc\\xbf\\x0fE@\\xd6E\\x96\\x84\\xda\\x05\\xc6\\x01\\x80!\\x13\\x1c\\xe1<7;\\xe7\\x01\\xf6\\x10w\\xff{\\x1e\\x08M\\xb8\\x90\\xe5\\xaaF\\xd3=`+\\xa5\\xb9\\x92\\x83\\xc9v\\x1e1\\xf9\\x15\\x19\\x18\\xf8\\xa1\\xc0u\\nx\\xba\\xf1-*\\x08')], 'recent_blockhash': 'E173j53bAniA2A36jSPCHzDY9kX8FgE9ZvD6dUDPob28', 'nonce_info': None}",
        "time" : {
          "start" : 1641480178487,
          "stop" : 1641480394643,
          "duration" : 216156
        }
      }, {
        "uid" : "92f202a83dab5b24",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/testnet/435//#testresult/92f202a83dab5b24",
        "status" : "passed",
        "time" : {
          "start" : 1641448689906,
          "stop" : 1641449168816,
          "duration" : 478910
        }
      }, {
        "uid" : "eae09bcc90cc40e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/testnet/435//#testresult/eae09bcc90cc40e",
        "status" : "broken",
        "statusDetails" : "Failed to check for transaction receipt:\n{\n  \"name\": \"HardhatError\",\n  \"errorDescriptor\": {\n    \"number\": 110,\n    \"message\": \"Invalid JSON-RPC response received: %response%\",\n    \"title\": \"Invalid JSON-RPC response\",\n    \"description\": \"One of your JSON-RPC requests received an invalid response. \\n\\nPlease make sure your node is running, and check your internet connection and networks config.\",\n    \"shouldBeReported\": false\n  },\n  \"number\": 110,\n  \"messageArguments\": {\n    \"response\": \"<html>\\r\\n<head><title>500 Internal Server Error</title></head>\\r\\n<body>\\r\\n<center><h1>500 Internal Server Error</h1></center>\\r\\n<hr><center>nginx/1.18.0 (Ubuntu)</center>\\r\\n</body>\\r\\n</html>\\r\\n\"\n  },\n  \"_isHardhatError\": true\n}",
        "time" : {
          "start" : 1641440459533,
          "stop" : 1641440554652,
          "duration" : 95119
        }
      }, {
        "uid" : "649ac66e2ff96b7d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/testnet/430//#testresult/649ac66e2ff96b7d",
        "status" : "passed",
        "time" : {
          "start" : 1641391361723,
          "stop" : 1641391398579,
          "duration" : 36856
        }
      }, {
        "uid" : "d690d7bbdd8315ce",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/testnet/425//#testresult/d690d7bbdd8315ce",
        "status" : "passed",
        "time" : {
          "start" : 1641373237183,
          "stop" : 1641373249175,
          "duration" : 11992
        }
      }, {
        "uid" : "4bd353705d8fd38",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/testnet/423//#testresult/4bd353705d8fd38",
        "status" : "passed",
        "time" : {
          "start" : 1641350485494,
          "stop" : 1641350503342,
          "duration" : 17848
        }
      }, {
        "uid" : "9fe229fb8fc4c8",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/testnet/421//#testresult/9fe229fb8fc4c8",
        "status" : "broken",
        "statusDetails" : "Returned error: Transaction simulation failed: Error processing Instruction 0: custom program error: 0x4",
        "time" : {
          "start" : 1641342980607,
          "stop" : 1641343004683,
          "duration" : 24076
        }
      }, {
        "uid" : "c3d879383ec536f6",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/testnet/269//#testresult/c3d879383ec536f6",
        "status" : "passed",
        "time" : {
          "start" : 1639973113945,
          "stop" : 1639973123806,
          "duration" : 9861
        }
      }, {
        "uid" : "1a4c56fe747919a4",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/testnet/265//#testresult/1a4c56fe747919a4",
        "status" : "passed",
        "time" : {
          "start" : 1639933176295,
          "stop" : 1639933200061,
          "duration" : 23766
        }
      }, {
        "uid" : "965403bc0bf059c2",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/testnet/261//#testresult/965403bc0bf059c2",
        "status" : "passed",
        "time" : {
          "start" : 1639828090971,
          "stop" : 1639828099763,
          "duration" : 8792
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "3d1e46461f95c17c.json",
  "parameterValues" : [ ]
}