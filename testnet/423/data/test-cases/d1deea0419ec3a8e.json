{
  "uid" : "d1deea0419ec3a8e",
  "name" : "test_issue_364_self_destruct_contract",
  "fullName" : "tests.truffle.test_truffle#test_issue_364_self_destruct_contract",
  "historyId" : "9b9a0ac6c1438da1dd6a59ac61d1506c",
  "time" : {
    "start" : 1641349222239,
    "stop" : 1641349237979,
    "duration" : 15740
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: \n  Compiling your contracts...\n  ===========================\n  > Compiling ./contracts/ERC20Test.sol\n  > Compiling ./contracts/Migrations.sol\n  > Compiling ./contracts/SelfDestructTest.sol\n  > Compiling @openzeppelin/contracts/access/Ownable.sol\n  > Compiling @openzeppelin/contracts/token/ERC20/ERC20.sol\n  > Compiling @openzeppelin/contracts/token/ERC20/IERC20.sol\n  > Compiling @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n  > Compiling @openzeppelin/contracts/utils/Context.sol\n  > Compilation warnings encountered:\n  \n      Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n  --> project:/contracts/SelfDestructTest.sol\n  \n  ,Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\n   --> project:/contracts/SelfDestructTest.sol:5:1:\n    |\n  5 | contract SelfDestructTest is Ownable{\n    | ^ (Relevant source part starts here and spans across multiple lines).\n  Note: The payable fallback function is defined here.\n    --> project:/contracts/SelfDestructTest.sol:20:5:\n     |\n  20 |     fallback() external payable {}\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  \n  ,Warning: Function state mutability can be restricted to pure\n    --> project:/contracts/SelfDestructTest.sol:12:5:\n     |\n  12 |     function staticData() public view returns(string memory) {\n     |     ^ (Relevant source part starts here and spans across multiple lines).\n  \n  \n  > Artifacts written to /home/runner/work/neon-compatibility/neon-compatibility/issues/364/build/contracts\n  > Compiled successfully using:\n     - solc: 0.8.4+commit.c7e474f2.Emscripten.clang\n  \n  UnhandledRejections detected\n  Promise {\n    <rejected> {\n      code: -32603,\n      message: 'Client network socket disconnected before secure TLS connection was established',\n      data: { originalError: [Object] },\n      stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\n        '    at connResetException (node:internal/errors:691:14)\\n' +\n        '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\n        '    at TLSSocket.emit (node:events:402:35)\\n' +\n        '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\n        '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\n    }\n  } {\n    code: -32603,\n    message: 'Client network socket disconnected before secure TLS connection was established',\n    data: {\n      originalError: {\n        code: 'ECONNRESET',\n        path: null,\n        host: 'proxy.testnet.neonlabs.org',\n        port: 443,\n        localAddress: undefined\n      }\n    },\n    stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\n      '    at connResetException (node:internal/errors:691:14)\\n' +\n      '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\n      '    at TLSSocket.emit (node:events:402:35)\\n' +\n      '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\n      '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\n  }\n  Promise {\n    <rejected> {\n      code: -32603,\n      message: 'Client network socket disconnected before secure TLS connection was established',\n      data: { originalError: [Object] },\n      stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\n        '    at connResetException (node:internal/errors:691:14)\\n' +\n        '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\n        '    at TLSSocket.emit (node:events:402:35)\\n' +\n        '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\n        '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\n    }\n  } {\n    code: -32603,\n    message: 'Client network socket disconnected before secure TLS connection was established',\n    data: {\n      originalError: {\n        code: 'ECONNRESET',\n        path: null,\n        host: 'proxy.testnet.neonlabs.org',\n        port: 443,\n        localAddress: undefined\n      }\n    },\n    stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\n      '    at connResetException (node:internal/errors:691:14)\\n' +\n      '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\n      '    at TLSSocket.emit (node:events:402:35)\\n' +\n      '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\n      '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\n  }\n  Promise {\n    <rejected> {\n      code: -32603,\n      message: 'Client network socket disconnected before secure TLS connection was established',\n      data: { originalError: [Object] },\n      stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\n        '    at connResetException (node:internal/errors:691:14)\\n' +\n        '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\n        '    at TLSSocket.emit (node:events:402:35)\\n' +\n        '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\n        '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\n    }\n  } {\n    code: -32603,\n    message: 'Client network socket disconnected before secure TLS connection was established',\n    data: {\n      originalError: {\n        code: 'ECONNRESET',\n        path: null,\n        host: 'proxy.testnet.neonlabs.org',\n        port: 443,\n        localAddress: undefined\n      }\n    },\n    stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\n      '    at connResetException (node:internal/errors:691:14)\\n' +\n      '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\n      '    at TLSSocket.emit (node:events:402:35)\\n' +\n      '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\n      '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\n  }\n  Promise {\n    <rejected> {\n      code: -32603,\n      message: 'Client network socket disconnected before secure TLS connection was established',\n      data: { originalError: [Object] },\n      stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\n        '    at connResetException (node:internal/errors:691:14)\\n' +\n        '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\n        '    at TLSSocket.emit (node:events:402:35)\\n' +\n        '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\n        '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\n    }\n  } {\n    code: -32603,\n    message: 'Client network socket disconnected before secure TLS connection was established',\n    data: {\n      originalError: {\n        code: 'ECONNRESET',\n        path: null,\n        host: 'proxy.testnet.neonlabs.org',\n        port: 443,\n        localAddress: undefined\n      }\n    },\n    stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\n      '    at connResetException (node:internal/errors:691:14)\\n' +\n      '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\n      '    at TLSSocket.emit (node:events:402:35)\\n' +\n      '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\n      '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\n  }\n  Promise {\n    <rejected> {\n      code: -32603,\n      message: 'Client network socket disconnected before secure TLS connection was established',\n      data: { originalError: [Object] },\n      stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\n        '    at connResetException (node:internal/errors:691:14)\\n' +\n        '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\n        '    at TLSSocket.emit (node:events:402:35)\\n' +\n        '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\n        '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\n    }\n  } {\n    code: -32603,\n    message: 'Client network socket disconnected before secure TLS connection was established',\n    data: {\n      originalError: {\n        code: 'ECONNRESET',\n        path: null,\n        host: 'proxy.testnet.neonlabs.org',\n        port: 443,\n        localAddress: undefined\n      }\n    },\n    stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\n      '    at connResetException (node:internal/errors:691:14)\\n' +\n      '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\n      '    at TLSSocket.emit (node:events:402:35)\\n' +\n      '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\n      '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\n  }\n  Error: PollingBlockTracker - encountered an error while attempting to update latest block:\n  Error: Client network socket disconnected before secure TLS connection was established\n      at connResetException (node:internal/errors:691:14)\n      at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\n      at TLSSocket.emit (node:events:402:35)\n      at endReadableNT (node:internal/streams/readable:1343:12)\n      at processTicksAndRejections (node:internal/process/task_queues:83:21)\n      at PollingBlockTracker._performSync (/home/runner/work/neon-compatibility/neon-compatibility/node_modules/eth-block-tracker/src/polling.js:51:24)\n      at processTicksAndRejections (node:internal/process/task_queues:96:5)\n  \nassert 1 == 0\n +  where 1 = CompletedProcess(args='cd issues/364; ../../node_modules/.bin/truffle --network neonlabs migrate -f 3 --to 3', returnc.../eth-block-tracker/src/polling.js:51:24)\\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\\n').returncode",
  "statusTrace" : "@allure.feature(FEATURE)\n    def test_issue_364_self_destruct_contract():\n        cmd_res = run_command_line(\n            f\"cd issues/364; ../{RunCommand.TRUFFLE} \"\n            f\"--network {NETWORK_NAME} migrate -f 3 --to 3\"\n        )\n        actual_result = cmd_res.stdout.decode() + cmd_res.stderr.decode()\n>       assert cmd_res.returncode == 0, actual_result\nE       AssertionError: \nE         Compiling your contracts...\nE         ===========================\nE         > Compiling ./contracts/ERC20Test.sol\nE         > Compiling ./contracts/Migrations.sol\nE         > Compiling ./contracts/SelfDestructTest.sol\nE         > Compiling @openzeppelin/contracts/access/Ownable.sol\nE         > Compiling @openzeppelin/contracts/token/ERC20/ERC20.sol\nE         > Compiling @openzeppelin/contracts/token/ERC20/IERC20.sol\nE         > Compiling @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\nE         > Compiling @openzeppelin/contracts/utils/Context.sol\nE         > Compilation warnings encountered:\nE         \nE             Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\nE         --> project:/contracts/SelfDestructTest.sol\nE         \nE         ,Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\nE          --> project:/contracts/SelfDestructTest.sol:5:1:\nE           |\nE         5 | contract SelfDestructTest is Ownable{\nE           | ^ (Relevant source part starts here and spans across multiple lines).\nE         Note: The payable fallback function is defined here.\nE           --> project:/contracts/SelfDestructTest.sol:20:5:\nE            |\nE         20 |     fallback() external payable {}\nE            |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE         \nE         ,Warning: Function state mutability can be restricted to pure\nE           --> project:/contracts/SelfDestructTest.sol:12:5:\nE            |\nE         12 |     function staticData() public view returns(string memory) {\nE            |     ^ (Relevant source part starts here and spans across multiple lines).\nE         \nE         \nE         > Artifacts written to /home/runner/work/neon-compatibility/neon-compatibility/issues/364/build/contracts\nE         > Compiled successfully using:\nE            - solc: 0.8.4+commit.c7e474f2.Emscripten.clang\nE         \nE         UnhandledRejections detected\nE         Promise {\nE           <rejected> {\nE             code: -32603,\nE             message: 'Client network socket disconnected before secure TLS connection was established',\nE             data: { originalError: [Object] },\nE             stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\nE               '    at connResetException (node:internal/errors:691:14)\\n' +\nE               '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\nE               '    at TLSSocket.emit (node:events:402:35)\\n' +\nE               '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\nE               '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\nE           }\nE         } {\nE           code: -32603,\nE           message: 'Client network socket disconnected before secure TLS connection was established',\nE           data: {\nE             originalError: {\nE               code: 'ECONNRESET',\nE               path: null,\nE               host: 'proxy.testnet.neonlabs.org',\nE               port: 443,\nE               localAddress: undefined\nE             }\nE           },\nE           stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\nE             '    at connResetException (node:internal/errors:691:14)\\n' +\nE             '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\nE             '    at TLSSocket.emit (node:events:402:35)\\n' +\nE             '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\nE             '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\nE         }\nE         Promise {\nE           <rejected> {\nE             code: -32603,\nE             message: 'Client network socket disconnected before secure TLS connection was established',\nE             data: { originalError: [Object] },\nE             stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\nE               '    at connResetException (node:internal/errors:691:14)\\n' +\nE               '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\nE               '    at TLSSocket.emit (node:events:402:35)\\n' +\nE               '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\nE               '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\nE           }\nE         } {\nE           code: -32603,\nE           message: 'Client network socket disconnected before secure TLS connection was established',\nE           data: {\nE             originalError: {\nE               code: 'ECONNRESET',\nE               path: null,\nE               host: 'proxy.testnet.neonlabs.org',\nE               port: 443,\nE               localAddress: undefined\nE             }\nE           },\nE           stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\nE             '    at connResetException (node:internal/errors:691:14)\\n' +\nE             '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\nE             '    at TLSSocket.emit (node:events:402:35)\\n' +\nE             '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\nE             '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\nE         }\nE         Promise {\nE           <rejected> {\nE             code: -32603,\nE             message: 'Client network socket disconnected before secure TLS connection was established',\nE             data: { originalError: [Object] },\nE             stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\nE               '    at connResetException (node:internal/errors:691:14)\\n' +\nE               '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\nE               '    at TLSSocket.emit (node:events:402:35)\\n' +\nE               '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\nE               '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\nE           }\nE         } {\nE           code: -32603,\nE           message: 'Client network socket disconnected before secure TLS connection was established',\nE           data: {\nE             originalError: {\nE               code: 'ECONNRESET',\nE               path: null,\nE               host: 'proxy.testnet.neonlabs.org',\nE               port: 443,\nE               localAddress: undefined\nE             }\nE           },\nE           stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\nE             '    at connResetException (node:internal/errors:691:14)\\n' +\nE             '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\nE             '    at TLSSocket.emit (node:events:402:35)\\n' +\nE             '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\nE             '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\nE         }\nE         Promise {\nE           <rejected> {\nE             code: -32603,\nE             message: 'Client network socket disconnected before secure TLS connection was established',\nE             data: { originalError: [Object] },\nE             stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\nE               '    at connResetException (node:internal/errors:691:14)\\n' +\nE               '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\nE               '    at TLSSocket.emit (node:events:402:35)\\n' +\nE               '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\nE               '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\nE           }\nE         } {\nE           code: -32603,\nE           message: 'Client network socket disconnected before secure TLS connection was established',\nE           data: {\nE             originalError: {\nE               code: 'ECONNRESET',\nE               path: null,\nE               host: 'proxy.testnet.neonlabs.org',\nE               port: 443,\nE               localAddress: undefined\nE             }\nE           },\nE           stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\nE             '    at connResetException (node:internal/errors:691:14)\\n' +\nE             '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\nE             '    at TLSSocket.emit (node:events:402:35)\\n' +\nE             '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\nE             '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\nE         }\nE         Promise {\nE           <rejected> {\nE             code: -32603,\nE             message: 'Client network socket disconnected before secure TLS connection was established',\nE             data: { originalError: [Object] },\nE             stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\nE               '    at connResetException (node:internal/errors:691:14)\\n' +\nE               '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\nE               '    at TLSSocket.emit (node:events:402:35)\\n' +\nE               '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\nE               '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\nE           }\nE         } {\nE           code: -32603,\nE           message: 'Client network socket disconnected before secure TLS connection was established',\nE           data: {\nE             originalError: {\nE               code: 'ECONNRESET',\nE               path: null,\nE               host: 'proxy.testnet.neonlabs.org',\nE               port: 443,\nE               localAddress: undefined\nE             }\nE           },\nE           stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\nE             '    at connResetException (node:internal/errors:691:14)\\n' +\nE             '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\nE             '    at TLSSocket.emit (node:events:402:35)\\n' +\nE             '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\nE             '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\nE         }\nE         Error: PollingBlockTracker - encountered an error while attempting to update latest block:\nE         Error: Client network socket disconnected before secure TLS connection was established\nE             at connResetException (node:internal/errors:691:14)\nE             at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\nE             at TLSSocket.emit (node:events:402:35)\nE             at endReadableNT (node:internal/streams/readable:1343:12)\nE             at processTicksAndRejections (node:internal/process/task_queues:83:21)\nE             at PollingBlockTracker._performSync (/home/runner/work/neon-compatibility/neon-compatibility/node_modules/eth-block-tracker/src/polling.js:51:24)\nE             at processTicksAndRejections (node:internal/process/task_queues:96:5)\nE         \nE       assert 1 == 0\nE        +  where 1 = CompletedProcess(args='cd issues/364; ../../node_modules/.bin/truffle --network neonlabs migrate -f 3 --to 3', returnc.../eth-block-tracker/src/polling.js:51:24)\\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\\n').returncode\n\ntests/truffle/test_truffle.py:76: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "prepare_truffle_config",
    "time" : {
      "start" : 1641349222227,
      "stop" : 1641349222238,
      "duration" : 11
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "Preset variables",
      "time" : {
        "start" : 1641349222227,
        "stop" : 1641349222238,
        "duration" : 11
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Clean up folder \"'/home/runner/work/neon-compatibility/neon-compatibility/Metacoin/build/contracts'\"",
      "time" : {
        "start" : 1641349222238,
        "stop" : 1641349222238,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "folder",
        "value" : "'/home/runner/work/neon-compatibility/neon-compatibility/Metacoin/build/contracts'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: \n  Compiling your contracts...\n  ===========================\n  > Compiling ./contracts/ERC20Test.sol\n  > Compiling ./contracts/Migrations.sol\n  > Compiling ./contracts/SelfDestructTest.sol\n  > Compiling @openzeppelin/contracts/access/Ownable.sol\n  > Compiling @openzeppelin/contracts/token/ERC20/ERC20.sol\n  > Compiling @openzeppelin/contracts/token/ERC20/IERC20.sol\n  > Compiling @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n  > Compiling @openzeppelin/contracts/utils/Context.sol\n  > Compilation warnings encountered:\n  \n      Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n  --> project:/contracts/SelfDestructTest.sol\n  \n  ,Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\n   --> project:/contracts/SelfDestructTest.sol:5:1:\n    |\n  5 | contract SelfDestructTest is Ownable{\n    | ^ (Relevant source part starts here and spans across multiple lines).\n  Note: The payable fallback function is defined here.\n    --> project:/contracts/SelfDestructTest.sol:20:5:\n     |\n  20 |     fallback() external payable {}\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  \n  ,Warning: Function state mutability can be restricted to pure\n    --> project:/contracts/SelfDestructTest.sol:12:5:\n     |\n  12 |     function staticData() public view returns(string memory) {\n     |     ^ (Relevant source part starts here and spans across multiple lines).\n  \n  \n  > Artifacts written to /home/runner/work/neon-compatibility/neon-compatibility/issues/364/build/contracts\n  > Compiled successfully using:\n     - solc: 0.8.4+commit.c7e474f2.Emscripten.clang\n  \n  UnhandledRejections detected\n  Promise {\n    <rejected> {\n      code: -32603,\n      message: 'Client network socket disconnected before secure TLS connection was established',\n      data: { originalError: [Object] },\n      stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\n        '    at connResetException (node:internal/errors:691:14)\\n' +\n        '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\n        '    at TLSSocket.emit (node:events:402:35)\\n' +\n        '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\n        '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\n    }\n  } {\n    code: -32603,\n    message: 'Client network socket disconnected before secure TLS connection was established',\n    data: {\n      originalError: {\n        code: 'ECONNRESET',\n        path: null,\n        host: 'proxy.testnet.neonlabs.org',\n        port: 443,\n        localAddress: undefined\n      }\n    },\n    stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\n      '    at connResetException (node:internal/errors:691:14)\\n' +\n      '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\n      '    at TLSSocket.emit (node:events:402:35)\\n' +\n      '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\n      '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\n  }\n  Promise {\n    <rejected> {\n      code: -32603,\n      message: 'Client network socket disconnected before secure TLS connection was established',\n      data: { originalError: [Object] },\n      stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\n        '    at connResetException (node:internal/errors:691:14)\\n' +\n        '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\n        '    at TLSSocket.emit (node:events:402:35)\\n' +\n        '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\n        '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\n    }\n  } {\n    code: -32603,\n    message: 'Client network socket disconnected before secure TLS connection was established',\n    data: {\n      originalError: {\n        code: 'ECONNRESET',\n        path: null,\n        host: 'proxy.testnet.neonlabs.org',\n        port: 443,\n        localAddress: undefined\n      }\n    },\n    stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\n      '    at connResetException (node:internal/errors:691:14)\\n' +\n      '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\n      '    at TLSSocket.emit (node:events:402:35)\\n' +\n      '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\n      '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\n  }\n  Promise {\n    <rejected> {\n      code: -32603,\n      message: 'Client network socket disconnected before secure TLS connection was established',\n      data: { originalError: [Object] },\n      stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\n        '    at connResetException (node:internal/errors:691:14)\\n' +\n        '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\n        '    at TLSSocket.emit (node:events:402:35)\\n' +\n        '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\n        '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\n    }\n  } {\n    code: -32603,\n    message: 'Client network socket disconnected before secure TLS connection was established',\n    data: {\n      originalError: {\n        code: 'ECONNRESET',\n        path: null,\n        host: 'proxy.testnet.neonlabs.org',\n        port: 443,\n        localAddress: undefined\n      }\n    },\n    stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\n      '    at connResetException (node:internal/errors:691:14)\\n' +\n      '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\n      '    at TLSSocket.emit (node:events:402:35)\\n' +\n      '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\n      '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\n  }\n  Promise {\n    <rejected> {\n      code: -32603,\n      message: 'Client network socket disconnected before secure TLS connection was established',\n      data: { originalError: [Object] },\n      stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\n        '    at connResetException (node:internal/errors:691:14)\\n' +\n        '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\n        '    at TLSSocket.emit (node:events:402:35)\\n' +\n        '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\n        '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\n    }\n  } {\n    code: -32603,\n    message: 'Client network socket disconnected before secure TLS connection was established',\n    data: {\n      originalError: {\n        code: 'ECONNRESET',\n        path: null,\n        host: 'proxy.testnet.neonlabs.org',\n        port: 443,\n        localAddress: undefined\n      }\n    },\n    stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\n      '    at connResetException (node:internal/errors:691:14)\\n' +\n      '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\n      '    at TLSSocket.emit (node:events:402:35)\\n' +\n      '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\n      '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\n  }\n  Promise {\n    <rejected> {\n      code: -32603,\n      message: 'Client network socket disconnected before secure TLS connection was established',\n      data: { originalError: [Object] },\n      stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\n        '    at connResetException (node:internal/errors:691:14)\\n' +\n        '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\n        '    at TLSSocket.emit (node:events:402:35)\\n' +\n        '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\n        '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\n    }\n  } {\n    code: -32603,\n    message: 'Client network socket disconnected before secure TLS connection was established',\n    data: {\n      originalError: {\n        code: 'ECONNRESET',\n        path: null,\n        host: 'proxy.testnet.neonlabs.org',\n        port: 443,\n        localAddress: undefined\n      }\n    },\n    stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\n      '    at connResetException (node:internal/errors:691:14)\\n' +\n      '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\n      '    at TLSSocket.emit (node:events:402:35)\\n' +\n      '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\n      '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\n  }\n  Error: PollingBlockTracker - encountered an error while attempting to update latest block:\n  Error: Client network socket disconnected before secure TLS connection was established\n      at connResetException (node:internal/errors:691:14)\n      at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\n      at TLSSocket.emit (node:events:402:35)\n      at endReadableNT (node:internal/streams/readable:1343:12)\n      at processTicksAndRejections (node:internal/process/task_queues:83:21)\n      at PollingBlockTracker._performSync (/home/runner/work/neon-compatibility/neon-compatibility/node_modules/eth-block-tracker/src/polling.js:51:24)\n      at processTicksAndRejections (node:internal/process/task_queues:96:5)\n  \nassert 1 == 0\n +  where 1 = CompletedProcess(args='cd issues/364; ../../node_modules/.bin/truffle --network neonlabs migrate -f 3 --to 3', returnc.../eth-block-tracker/src/polling.js:51:24)\\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\\n').returncode",
    "statusTrace" : "@allure.feature(FEATURE)\n    def test_issue_364_self_destruct_contract():\n        cmd_res = run_command_line(\n            f\"cd issues/364; ../{RunCommand.TRUFFLE} \"\n            f\"--network {NETWORK_NAME} migrate -f 3 --to 3\"\n        )\n        actual_result = cmd_res.stdout.decode() + cmd_res.stderr.decode()\n>       assert cmd_res.returncode == 0, actual_result\nE       AssertionError: \nE         Compiling your contracts...\nE         ===========================\nE         > Compiling ./contracts/ERC20Test.sol\nE         > Compiling ./contracts/Migrations.sol\nE         > Compiling ./contracts/SelfDestructTest.sol\nE         > Compiling @openzeppelin/contracts/access/Ownable.sol\nE         > Compiling @openzeppelin/contracts/token/ERC20/ERC20.sol\nE         > Compiling @openzeppelin/contracts/token/ERC20/IERC20.sol\nE         > Compiling @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\nE         > Compiling @openzeppelin/contracts/utils/Context.sol\nE         > Compilation warnings encountered:\nE         \nE             Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\nE         --> project:/contracts/SelfDestructTest.sol\nE         \nE         ,Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\nE          --> project:/contracts/SelfDestructTest.sol:5:1:\nE           |\nE         5 | contract SelfDestructTest is Ownable{\nE           | ^ (Relevant source part starts here and spans across multiple lines).\nE         Note: The payable fallback function is defined here.\nE           --> project:/contracts/SelfDestructTest.sol:20:5:\nE            |\nE         20 |     fallback() external payable {}\nE            |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE         \nE         ,Warning: Function state mutability can be restricted to pure\nE           --> project:/contracts/SelfDestructTest.sol:12:5:\nE            |\nE         12 |     function staticData() public view returns(string memory) {\nE            |     ^ (Relevant source part starts here and spans across multiple lines).\nE         \nE         \nE         > Artifacts written to /home/runner/work/neon-compatibility/neon-compatibility/issues/364/build/contracts\nE         > Compiled successfully using:\nE            - solc: 0.8.4+commit.c7e474f2.Emscripten.clang\nE         \nE         UnhandledRejections detected\nE         Promise {\nE           <rejected> {\nE             code: -32603,\nE             message: 'Client network socket disconnected before secure TLS connection was established',\nE             data: { originalError: [Object] },\nE             stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\nE               '    at connResetException (node:internal/errors:691:14)\\n' +\nE               '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\nE               '    at TLSSocket.emit (node:events:402:35)\\n' +\nE               '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\nE               '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\nE           }\nE         } {\nE           code: -32603,\nE           message: 'Client network socket disconnected before secure TLS connection was established',\nE           data: {\nE             originalError: {\nE               code: 'ECONNRESET',\nE               path: null,\nE               host: 'proxy.testnet.neonlabs.org',\nE               port: 443,\nE               localAddress: undefined\nE             }\nE           },\nE           stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\nE             '    at connResetException (node:internal/errors:691:14)\\n' +\nE             '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\nE             '    at TLSSocket.emit (node:events:402:35)\\n' +\nE             '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\nE             '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\nE         }\nE         Promise {\nE           <rejected> {\nE             code: -32603,\nE             message: 'Client network socket disconnected before secure TLS connection was established',\nE             data: { originalError: [Object] },\nE             stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\nE               '    at connResetException (node:internal/errors:691:14)\\n' +\nE               '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\nE               '    at TLSSocket.emit (node:events:402:35)\\n' +\nE               '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\nE               '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\nE           }\nE         } {\nE           code: -32603,\nE           message: 'Client network socket disconnected before secure TLS connection was established',\nE           data: {\nE             originalError: {\nE               code: 'ECONNRESET',\nE               path: null,\nE               host: 'proxy.testnet.neonlabs.org',\nE               port: 443,\nE               localAddress: undefined\nE             }\nE           },\nE           stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\nE             '    at connResetException (node:internal/errors:691:14)\\n' +\nE             '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\nE             '    at TLSSocket.emit (node:events:402:35)\\n' +\nE             '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\nE             '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\nE         }\nE         Promise {\nE           <rejected> {\nE             code: -32603,\nE             message: 'Client network socket disconnected before secure TLS connection was established',\nE             data: { originalError: [Object] },\nE             stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\nE               '    at connResetException (node:internal/errors:691:14)\\n' +\nE               '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\nE               '    at TLSSocket.emit (node:events:402:35)\\n' +\nE               '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\nE               '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\nE           }\nE         } {\nE           code: -32603,\nE           message: 'Client network socket disconnected before secure TLS connection was established',\nE           data: {\nE             originalError: {\nE               code: 'ECONNRESET',\nE               path: null,\nE               host: 'proxy.testnet.neonlabs.org',\nE               port: 443,\nE               localAddress: undefined\nE             }\nE           },\nE           stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\nE             '    at connResetException (node:internal/errors:691:14)\\n' +\nE             '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\nE             '    at TLSSocket.emit (node:events:402:35)\\n' +\nE             '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\nE             '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\nE         }\nE         Promise {\nE           <rejected> {\nE             code: -32603,\nE             message: 'Client network socket disconnected before secure TLS connection was established',\nE             data: { originalError: [Object] },\nE             stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\nE               '    at connResetException (node:internal/errors:691:14)\\n' +\nE               '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\nE               '    at TLSSocket.emit (node:events:402:35)\\n' +\nE               '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\nE               '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\nE           }\nE         } {\nE           code: -32603,\nE           message: 'Client network socket disconnected before secure TLS connection was established',\nE           data: {\nE             originalError: {\nE               code: 'ECONNRESET',\nE               path: null,\nE               host: 'proxy.testnet.neonlabs.org',\nE               port: 443,\nE               localAddress: undefined\nE             }\nE           },\nE           stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\nE             '    at connResetException (node:internal/errors:691:14)\\n' +\nE             '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\nE             '    at TLSSocket.emit (node:events:402:35)\\n' +\nE             '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\nE             '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\nE         }\nE         Promise {\nE           <rejected> {\nE             code: -32603,\nE             message: 'Client network socket disconnected before secure TLS connection was established',\nE             data: { originalError: [Object] },\nE             stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\nE               '    at connResetException (node:internal/errors:691:14)\\n' +\nE               '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\nE               '    at TLSSocket.emit (node:events:402:35)\\n' +\nE               '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\nE               '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\nE           }\nE         } {\nE           code: -32603,\nE           message: 'Client network socket disconnected before secure TLS connection was established',\nE           data: {\nE             originalError: {\nE               code: 'ECONNRESET',\nE               path: null,\nE               host: 'proxy.testnet.neonlabs.org',\nE               port: 443,\nE               localAddress: undefined\nE             }\nE           },\nE           stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\nE             '    at connResetException (node:internal/errors:691:14)\\n' +\nE             '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\nE             '    at TLSSocket.emit (node:events:402:35)\\n' +\nE             '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\nE             '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\nE         }\nE         Error: PollingBlockTracker - encountered an error while attempting to update latest block:\nE         Error: Client network socket disconnected before secure TLS connection was established\nE             at connResetException (node:internal/errors:691:14)\nE             at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\nE             at TLSSocket.emit (node:events:402:35)\nE             at endReadableNT (node:internal/streams/readable:1343:12)\nE             at processTicksAndRejections (node:internal/process/task_queues:83:21)\nE             at PollingBlockTracker._performSync (/home/runner/work/neon-compatibility/neon-compatibility/node_modules/eth-block-tracker/src/polling.js:51:24)\nE             at processTicksAndRejections (node:internal/process/task_queues:96:5)\nE         \nE       assert 1 == 0\nE        +  where 1 = CompletedProcess(args='cd issues/364; ../../node_modules/.bin/truffle --network neonlabs migrate -f 3 --to 3', returnc.../eth-block-tracker/src/polling.js:51:24)\\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\\n').returncode\n\ntests/truffle/test_truffle.py:76: AssertionError",
    "steps" : [ {
      "name" : "Run command: \"'cd issues/364; ../../node_modules/.bin/truffle --network neonlabs migrate -f 3 --to 3'\"",
      "time" : {
        "start" : 1641349222239,
        "stop" : 1641349237978,
        "duration" : 15739
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "command",
        "value" : "'cd issues/364; ../../node_modules/.bin/truffle --network neonlabs migrate -f 3 --to 3'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "831217cdf0042012",
      "name" : "stdout",
      "source" : "831217cdf0042012.txt",
      "type" : "text/plain",
      "size" : 9566
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "prepare_truffle_config::0",
    "time" : {
      "start" : 1641349237985,
      "stop" : 1641349237985,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Truffle"
  }, {
    "name" : "parentSuite",
    "value" : "tests.truffle"
  }, {
    "name" : "suite",
    "value" : "test_truffle"
  }, {
    "name" : "host",
    "value" : "fv-az124-903"
  }, {
    "name" : "thread",
    "value" : "3699-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.truffle.test_truffle"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Connection problem",
      "messageRegex" : ".*Error: ETIMEDOUT.*|.*ESOCKETTIMEDOUT.*|.*ECONNRESET.*|.*Client network socket disconnected before secure TLS connection was established.*|.*500 Internal Server Error.*nginx.*|.*Error: socket hang up.*",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 3,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 2,
        "unknown" : 0,
        "total" : 5
      },
      "items" : [ {
        "uid" : "dd1ef7f618271715",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/testnet/421//#testresult/dd1ef7f618271715",
        "status" : "failed",
        "statusDetails" : "AssertionError: \n  Compiling your contracts...\n  ===========================\n  > Compiling ./contracts/ERC20Test.sol\n  > Compiling ./contracts/Migrations.sol\n  > Compiling ./contracts/SelfDestructTest.sol\n  > Compiling @openzeppelin/contracts/access/Ownable.sol\n  > Compiling @openzeppelin/contracts/token/ERC20/ERC20.sol\n  > Compiling @openzeppelin/contracts/token/ERC20/IERC20.sol\n  > Compiling @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n  > Compiling @openzeppelin/contracts/utils/Context.sol\n  > Compilation warnings encountered:\n  \n      Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n  --> project:/contracts/SelfDestructTest.sol\n  \n  ,Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\n   --> project:/contracts/SelfDestructTest.sol:5:1:\n    |\n  5 | contract SelfDestructTest is Ownable{\n    | ^ (Relevant source part starts here and spans across multiple lines).\n  Note: The payable fallback function is defined here.\n    --> project:/contracts/SelfDestructTest.sol:20:5:\n     |\n  20 |     fallback() external payable {}\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  \n  ,Warning: Function state mutability can be restricted to pure\n    --> project:/contracts/SelfDestructTest.sol:12:5:\n     |\n  12 |     function staticData() public view returns(string memory) {\n     |     ^ (Relevant source part starts here and spans across multiple lines).\n  \n  \n  > Artifacts written to /home/runner/work/neon-compatibility/neon-compatibility/issues/364/build/contracts\n  > Compiled successfully using:\n     - solc: 0.8.4+commit.c7e474f2.Emscripten.clang\n  \n  UnhandledRejections detected\n  Promise {\n    <rejected> {\n      code: -32603,\n      message: 'Client network socket disconnected before secure TLS connection was established',\n      data: { originalError: [Object] },\n      stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\n        '    at connResetException (node:internal/errors:691:14)\\n' +\n        '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\n        '    at TLSSocket.emit (node:events:402:35)\\n' +\n        '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\n        '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\n    }\n  } {\n    code: -32603,\n    message: 'Client network socket disconnected before secure TLS connection was established',\n    data: {\n      originalError: {\n        code: 'ECONNRESET',\n        path: null,\n        host: 'proxy.testnet.neonlabs.org',\n        port: 443,\n        localAddress: undefined\n      }\n    },\n    stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\n      '    at connResetException (node:internal/errors:691:14)\\n' +\n      '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\n      '    at TLSSocket.emit (node:events:402:35)\\n' +\n      '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\n      '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\n  }\n  Promise {\n    <rejected> {\n      code: -32603,\n      message: 'Client network socket disconnected before secure TLS connection was established',\n      data: { originalError: [Object] },\n      stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\n        '    at connResetException (node:internal/errors:691:14)\\n' +\n        '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\n        '    at TLSSocket.emit (node:events:402:35)\\n' +\n        '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\n        '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\n    }\n  } {\n    code: -32603,\n    message: 'Client network socket disconnected before secure TLS connection was established',\n    data: {\n      originalError: {\n        code: 'ECONNRESET',\n        path: null,\n        host: 'proxy.testnet.neonlabs.org',\n        port: 443,\n        localAddress: undefined\n      }\n    },\n    stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\n      '    at connResetException (node:internal/errors:691:14)\\n' +\n      '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\n      '    at TLSSocket.emit (node:events:402:35)\\n' +\n      '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\n      '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\n  }\n  Promise {\n    <rejected> {\n      code: -32603,\n      message: 'Client network socket disconnected before secure TLS connection was established',\n      data: { originalError: [Object] },\n      stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\n        '    at connResetException (node:internal/errors:691:14)\\n' +\n        '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\n        '    at TLSSocket.emit (node:events:402:35)\\n' +\n        '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\n        '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\n    }\n  } {\n    code: -32603,\n    message: 'Client network socket disconnected before secure TLS connection was established',\n    data: {\n      originalError: {\n        code: 'ECONNRESET',\n        path: null,\n        host: 'proxy.testnet.neonlabs.org',\n        port: 443,\n        localAddress: undefined\n      }\n    },\n    stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\n      '    at connResetException (node:internal/errors:691:14)\\n' +\n      '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\n      '    at TLSSocket.emit (node:events:402:35)\\n' +\n      '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\n      '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\n  }\n  Promise {\n    <rejected> {\n      code: -32603,\n      message: 'Client network socket disconnected before secure TLS connection was established',\n      data: { originalError: [Object] },\n      stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\n        '    at connResetException (node:internal/errors:691:14)\\n' +\n        '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\n        '    at TLSSocket.emit (node:events:402:35)\\n' +\n        '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\n        '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\n    }\n  } {\n    code: -32603,\n    message: 'Client network socket disconnected before secure TLS connection was established',\n    data: {\n      originalError: {\n        code: 'ECONNRESET',\n        path: null,\n        host: 'proxy.testnet.neonlabs.org',\n        port: 443,\n        localAddress: undefined\n      }\n    },\n    stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\n      '    at connResetException (node:internal/errors:691:14)\\n' +\n      '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\n      '    at TLSSocket.emit (node:events:402:35)\\n' +\n      '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\n      '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\n  }\n  Promise {\n    <rejected> {\n      code: -32603,\n      message: 'Client network socket disconnected before secure TLS connection was established',\n      data: { originalError: [Object] },\n      stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\n        '    at connResetException (node:internal/errors:691:14)\\n' +\n        '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\n        '    at TLSSocket.emit (node:events:402:35)\\n' +\n        '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\n        '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\n    }\n  } {\n    code: -32603,\n    message: 'Client network socket disconnected before secure TLS connection was established',\n    data: {\n      originalError: {\n        code: 'ECONNRESET',\n        path: null,\n        host: 'proxy.testnet.neonlabs.org',\n        port: 443,\n        localAddress: undefined\n      }\n    },\n    stack: 'Error: Client network socket disconnected before secure TLS connection was established\\n' +\n      '    at connResetException (node:internal/errors:691:14)\\n' +\n      '    at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\\n' +\n      '    at TLSSocket.emit (node:events:402:35)\\n' +\n      '    at endReadableNT (node:internal/streams/readable:1343:12)\\n' +\n      '    at processTicksAndRejections (node:internal/process/task_queues:83:21)'\n  }\n  Error: PollingBlockTracker - encountered an error while attempting to update latest block:\n  Error: Client network socket disconnected before secure TLS connection was established\n      at connResetException (node:internal/errors:691:14)\n      at TLSSocket.onConnectEnd (node:_tls_wrap:1585:19)\n      at TLSSocket.emit (node:events:402:35)\n      at endReadableNT (node:internal/streams/readable:1343:12)\n      at processTicksAndRejections (node:internal/process/task_queues:83:21)\n      at PollingBlockTracker._performSync (/home/runner/work/neon-compatibility/neon-compatibility/node_modules/eth-block-tracker/src/polling.js:51:24)\n      at processTicksAndRejections (node:internal/process/task_queues:96:5)\n  \nassert 1 == 0\n +  where 1 = CompletedProcess(args='cd issues/364; ../../node_modules/.bin/truffle --network neonlabs migrate -f 3 --to 3', returnc.../eth-block-tracker/src/polling.js:51:24)\\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\\n').returncode",
        "time" : {
          "start" : 1641342728843,
          "stop" : 1641342747030,
          "duration" : 18187
        }
      }, {
        "uid" : "80e9487d735894dd",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/testnet/269//#testresult/80e9487d735894dd",
        "status" : "failed",
        "statusDetails" : "AssertionError: \n  Compiling your contracts...\n  ===========================\n  > Compiling ./contracts/ERC20Test.sol\n  > Compiling ./contracts/Migrations.sol\n  > Compiling ./contracts/SelfDestructTest.sol\n  > Compiling @openzeppelin/contracts/access/Ownable.sol\n  > Compiling @openzeppelin/contracts/token/ERC20/ERC20.sol\n  > Compiling @openzeppelin/contracts/token/ERC20/IERC20.sol\n  > Compiling @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n  > Compiling @openzeppelin/contracts/utils/Context.sol\n  > Compilation warnings encountered:\n  \n      Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n  --> project:/contracts/SelfDestructTest.sol\n  \n  ,Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\n   --> project:/contracts/SelfDestructTest.sol:5:1:\n    |\n  5 | contract SelfDestructTest is Ownable{\n    | ^ (Relevant source part starts here and spans across multiple lines).\n  Note: The payable fallback function is defined here.\n    --> project:/contracts/SelfDestructTest.sol:20:5:\n     |\n  20 |     fallback() external payable {}\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  \n  ,Warning: Function state mutability can be restricted to pure\n    --> project:/contracts/SelfDestructTest.sol:12:5:\n     |\n  12 |     function staticData() public view returns(string memory) {\n     |     ^ (Relevant source part starts here and spans across multiple lines).\n  \n  \n  > Artifacts written to /home/runner/work/neon-compatibility/neon-compatibility/issues/364/build/contracts\n  > Compiled successfully using:\n     - solc: 0.8.4+commit.c7e474f2.Emscripten.clang\n  \n  \n  \n  Starting migrations...\n  ======================\n  > Network name:    'neonlabs'\n  > Network id:      245022940\n  > Block gas limit: 6721975 (0x6691b7)\n  \n  \n  3_selfDestructTest.js\n  =====================\n  \n     Deploying 'SelfDestructTest'\n     ----------------------------\n  \n  Error:  *** Deployment Failed ***\n  \n  \"SelfDestructTest\" -- ESOCKETTIMEDOUT\n  {\n    \"originalError\": {\n      \"code\": \"ESOCKETTIMEDOUT\",\n      \"connect\": false\n    }\n  }.\n  \n      at /home/runner/work/neon-compatibility/neon-compatibility/node_modules/truffle/build/webpack:/packages/deployer/src/deployment.js:365:1\n      at runMicrotasks (<anonymous>)\n      at processTicksAndRejections (node:internal/process/task_queues:96:5)\n      at module.exports (/home/runner/work/neon-compatibility/neon-compatibility/issues/364/migrations/3_selfDestructTest.js:6:5)\n      at Migration._deploy (/home/runner/work/neon-compatibility/neon-compatibility/node_modules/truffle/build/webpack:/packages/migrate/Migration.js:75:1)\n      at Migration._load (/home/runner/work/neon-compatibility/neon-compatibility/node_modules/truffle/build/webpack:/packages/migrate/Migration.js:56:1)\n      at Migration.run (/home/runner/work/neon-compatibility/neon-compatibility/node_modules/truffle/build/webpack:/packages/migrate/Migration.js:217:1)\n      at Object.runMigrations (/home/runner/work/neon-compatibility/neon-compatibility/node_modules/truffle/build/webpack:/packages/migrate/index.js:150:1)\n      at Object.runFrom (/home/runner/work/neon-compatibility/neon-compatibility/node_modules/truffle/build/webpack:/packages/migrate/index.js:110:1)\n      at runMigrations (/home/runner/work/neon-compatibility/neon-compatibility/node_modules/truffle/build/webpack:/packages/core/lib/commands/migrate.js:253:1)\n      at Object.run (/home/runner/work/neon-compatibility/neon-compatibility/node_modules/truffle/build/webpack:/packages/core/lib/commands/migrate.js:223:1)\n      at Command.run (/home/runner/work/neon-compatibility/neon-compatibility/node_modules/truffle/build/webpack:/packages/core/lib/command.js:183:1)\n  Truffle v5.4.14 (core: 5.4.14)\n  Node v16.13.1\n  \nassert 1 == 0\n +  where 1 = CompletedProcess(args='cd issues/364; ../../node_modules/.bin/truffle --network neonlabs migrate -f 3 --to 3', returnc...uffle/build/webpack:/packages/core/lib/command.js:183:1)\\nTruffle v5.4.14 (core: 5.4.14)\\nNode v16.13.1\\n', stderr=b'').returncode",
        "time" : {
          "start" : 1639951679190,
          "stop" : 1639951720676,
          "duration" : 41486
        }
      }, {
        "uid" : "18df9811f0e607f4",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/testnet/265//#testresult/18df9811f0e607f4",
        "status" : "passed",
        "time" : {
          "start" : 1639911424041,
          "stop" : 1639911479870,
          "duration" : 55829
        }
      }, {
        "uid" : "32c0a4b00edf2ef5",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/testnet/261//#testresult/32c0a4b00edf2ef5",
        "status" : "passed",
        "time" : {
          "start" : 1639820359080,
          "stop" : 1639820417176,
          "duration" : 58096
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "d1deea0419ec3a8e.json",
  "parameterValues" : [ ]
}