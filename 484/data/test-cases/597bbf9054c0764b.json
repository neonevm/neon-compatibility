{
  "uid" : "597bbf9054c0764b",
  "name" : "test_modify_approve",
  "fullName" : "tests.brownie.token.tests.test_approve#test_modify_approve",
  "historyId" : "955e3f6226713de80a392f10c503148c",
  "time" : {
    "start" : 1642073999554,
    "stop" : 1642073999554,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='10.2.0.2', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f11670e35e0>: Failed to establish a new connection: [Errno 111] Connection refused'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
  "statusTrace" : "brownie_project = <Project 'TokenProject'>\naccounts = <brownie.network.account.Accounts object at 0x7f405705bdc0>\n\n    @pytest.fixture(scope=\"module\")\n    def token(brownie_project, accounts):\n>       return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n\ntests/brownie/token/tests/conftest.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:600: in __call__\n    return tx[\"from\"].deploy(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:508: in deploy\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:725: in _make_transaction\n    raise VirtualMachineError(e) from None\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError(\"Gas estimation failed: 'HTTPConnectionPool(host='10.2.0.2', port=8899): Max retries ex...ion refused'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\"))\nexc = \"Gas estimation failed: 'HTTPConnectionPool(host='10.2.0.2', port=8899): Max retries exceeded with url: / (Caused by N...ction refused'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\"\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.message: str = exc[\"message\"].rstrip(\".\")\n    \n            if isinstance(exc[\"data\"], str):\n                # handle parity exceptions - this logic probably is not perfect\n                if \"0x08c379a0\" in exc[\"data\"]:\n                    revert_type, err_msg = [i.strip() for i in exc[\"data\"].split(\"0x08c379a0\", 1)]\n                    err_msg = eth_abi.decode_abi([\"string\"], HexBytes(err_msg))\n                    err_msg = f\"{revert_type} '{err_msg}'\"\n                elif exc[\"data\"].endswith(\"0x\"):\n                    err_msg = exc[\"data\"][:-2].strip()\n                else:\n                    err_msg = exc[\"data\"]\n                raise ValueError(f\"{self.message}: {err_msg}\") from None\n    \n            try:\n                txid, data = next((k, v) for k, v in exc[\"data\"].items() if k.startswith(\"0x\"))\n            except StopIteration:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.txid: str = txid\n            self.source: str = \"\"\n            self.revert_type: str = data[\"error\"]\n            self.pc: Optional[str] = data.get(\"program_counter\")\n            if self.pc and self.revert_type == \"revert\":\n                self.pc -= 1\n    \n            self.revert_msg: Optional[str] = data.get(\"reason\")\n            self.dev_revert_msg = brownie.project.build._get_dev_revert(self.pc)\n            if self.revert_msg is None and self.revert_type in (\"revert\", \"invalid opcode\"):\n                self.revert_msg = self.dev_revert_msg\n            elif self.revert_msg == \"Failed assertion\":\n                self.revert_msg = self.dev_revert_msg or self.revert_msg\n    \n        else:\n>           raise ValueError(str(exc)) from None\nE           ValueError: Gas estimation failed: 'HTTPConnectionPool(host='10.2.0.2', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f11670e35e0>: Failed to establish a new connection: [Errno 111] Connection refused'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:121: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : true,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1642073985866,
      "stop" : 1642073985866,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1642073987038,
      "stop" : 1642073998129,
      "duration" : 11091
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1642073998589,
      "stop" : 1642073998857,
      "duration" : 268
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1642073998589,
      "stop" : 1642073998589,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1642073998857,
      "stop" : 1642073999148,
      "duration" : 291
    },
    "status" : "broken",
    "statusMessage" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='10.2.0.2', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f11670e35e0>: Failed to establish a new connection: [Errno 111] Connection refused'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\n",
    "statusTrace" : "  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 932, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/neon-compatibility/neon-compatibility/tests/brownie/token/tests/conftest.py\", line 49, in token\n    return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py\", line 600, in __call__\n    return tx[\"from\"].deploy(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 508, in deploy\n    receipt, exc = self._make_transaction(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 725, in _make_transaction\n    raise VirtualMachineError(e) from None\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py\", line 121, in __init__\n    raise ValueError(str(exc)) from None\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1642074028414,
      "stop" : 1642074028414,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_approve"
  }, {
    "name" : "host",
    "value" : "fv-az128-463"
  }, {
    "name" : "thread",
    "value" : "3767-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_approve"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 24,
        "skipped" : 0,
        "passed" : 72,
        "unknown" : 0,
        "total" : 96
      },
      "items" : [ {
        "uid" : "e28d6259791bb228",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/483//#testresult/e28d6259791bb228",
        "status" : "passed",
        "time" : {
          "start" : 1642059393469,
          "stop" : 1642059397166,
          "duration" : 3697
        }
      }, {
        "uid" : "8995ed67e4bcd181",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/482//#testresult/8995ed67e4bcd181",
        "status" : "passed",
        "time" : {
          "start" : 1642043715841,
          "stop" : 1642043718340,
          "duration" : 2499
        }
      }, {
        "uid" : "7027b7725b8075ae",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/481//#testresult/7027b7725b8075ae",
        "status" : "passed",
        "time" : {
          "start" : 1642034799365,
          "stop" : 1642034803525,
          "duration" : 4160
        }
      }, {
        "uid" : "47de5e2b64f940bb",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/479//#testresult/47de5e2b64f940bb",
        "status" : "passed",
        "time" : {
          "start" : 1642032964600,
          "stop" : 1642032968340,
          "duration" : 3740
        }
      }, {
        "uid" : "47bc76d57704b4e9",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/478//#testresult/47bc76d57704b4e9",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: http://proxy.night.stand.neontest.xyz/solana",
        "time" : {
          "start" : 1642032070846,
          "stop" : 1642032070846,
          "duration" : 0
        }
      }, {
        "uid" : "92d7343d00bf4913",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/477//#testresult/92d7343d00bf4913",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1642031186673,
          "stop" : 1642031186673,
          "duration" : 0
        }
      }, {
        "uid" : "50093d1fd9313bd6",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/476//#testresult/50093d1fd9313bd6",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1642028348641,
          "stop" : 1642028348641,
          "duration" : 0
        }
      }, {
        "uid" : "ac1350237b1979e8",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/474//#testresult/ac1350237b1979e8",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1642025670929,
          "stop" : 1642025670929,
          "duration" : 0
        }
      }, {
        "uid" : "1aeb009c0e9d97b3",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/472//#testresult/1aeb009c0e9d97b3",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1642018235533,
          "stop" : 1642018235533,
          "duration" : 0
        }
      }, {
        "uid" : "6ab41cfc97ab6c15",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/471//#testresult/6ab41cfc97ab6c15",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1642015602745,
          "stop" : 1642015602745,
          "duration" : 0
        }
      }, {
        "uid" : "ebf22e9bddb6d0d2",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/470//#testresult/ebf22e9bddb6d0d2",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1642014228556,
          "stop" : 1642014228556,
          "duration" : 0
        }
      }, {
        "uid" : "bda6fb1f1907e380",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/469//#testresult/bda6fb1f1907e380",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1642012910200,
          "stop" : 1642012910201,
          "duration" : 1
        }
      }, {
        "uid" : "f917c61f35464b3b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/468//#testresult/f917c61f35464b3b",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1642011420253,
          "stop" : 1642011420253,
          "duration" : 0
        }
      }, {
        "uid" : "758330ca02c6abd5",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/467//#testresult/758330ca02c6abd5",
        "status" : "passed",
        "time" : {
          "start" : 1642008711544,
          "stop" : 1642008715720,
          "duration" : 4176
        }
      }, {
        "uid" : "25ef400ec189b828",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/466//#testresult/25ef400ec189b828",
        "status" : "passed",
        "time" : {
          "start" : 1641997944016,
          "stop" : 1641997947673,
          "duration" : 3657
        }
      }, {
        "uid" : "c6a11ef9d7835994",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/465//#testresult/c6a11ef9d7835994",
        "status" : "passed",
        "time" : {
          "start" : 1641993705358,
          "stop" : 1641993709919,
          "duration" : 4561
        }
      }, {
        "uid" : "8f91d35b743a9151",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/464//#testresult/8f91d35b743a9151",
        "status" : "passed",
        "time" : {
          "start" : 1641990966414,
          "stop" : 1641990970171,
          "duration" : 3757
        }
      }, {
        "uid" : "f27b6f1898a2f48e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/463//#testresult/f27b6f1898a2f48e",
        "status" : "passed",
        "time" : {
          "start" : 1641986329848,
          "stop" : 1641986332721,
          "duration" : 2873
        }
      }, {
        "uid" : "5ad361a7b02ad4ea",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/461//#testresult/5ad361a7b02ad4ea",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='10.2.0.2', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f18961e3b80>: Failed to establish a new connection: [Errno 111] Connection refused'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1641982476906,
          "stop" : 1641982476906,
          "duration" : 0
        }
      }, {
        "uid" : "f02986cd03d8d09a",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/460//#testresult/f02986cd03d8d09a",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='10.2.0.2', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f189611ea30>: Failed to establish a new connection: [Errno 111] Connection refused'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1641980265770,
          "stop" : 1641980265770,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "597bbf9054c0764b.json",
  "parameterValues" : [ ]
}