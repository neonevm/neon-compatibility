{
  "uid" : "f88da1bfa34d69de",
  "name" : "test_initial_approval_is_zero[1]",
  "fullName" : "tests.brownie.token.tests.test_approve#test_initial_approval_is_zero",
  "historyId" : "ef6bb165912f8f1bbcdec75a57b32c85",
  "time" : {
    "start" : 1639269424964,
    "stop" : 1639269424964,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://proxy.teststand2.neontest.xyz/solana",
  "statusTrace" : "brownie_project = <Project 'TokenProject'>\naccounts = <brownie.network.account.Accounts object at 0x7fef428c5100>\n\n    @pytest.fixture(scope=\"module\")\n    def token(brownie_project, accounts):\n>       return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n\ntests/brownie/token/tests/conftest.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:600: in __call__\n    return tx[\"from\"].deploy(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:508: in deploy\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:740: in _make_transaction\n    txid = self._transact(tx, allow_revert)  # type: ignore\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:927: in _transact\n    return web3.eth.send_raw_transaction(signed_tx)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/module.py:57: in caller\n    result = w3.manager.request_blocking(method_str,\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/manager.py:186: in request_blocking\n    response = self._make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/manager.py:147: in _make_request\n    return request_func(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:76: in apply_formatters\n    response = make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/gas_price_strategy.py:90: in middleware\n    return make_request(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:74: in apply_formatters\n    response = make_request(method, formatted_params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/attrdict.py:33: in middleware\n    response = make_request(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:76: in apply_formatters\n    response = make_request(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:76: in apply_formatters\n    response = make_request(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:74: in apply_formatters\n    response = make_request(method, formatted_params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/buffered_gas_estimate.py:40: in middleware\n    return make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/middlewares/catch_tx_revert.py:24: in process_request\n    result = make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/exception_retry_request.py:105: in middleware\n    return make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/providers/rpc.py:88: in make_request\n    raw_response = make_post_request(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/_utils/request.py:49: in make_post_request\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = ''\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode('utf-8')\n            except UnicodeDecodeError:\n                reason = self.reason.decode('iso-8859-1')\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = u'%s Client Error: %s for url: %s' % (self.status_code, reason, self.url)\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = u'%s Server Error: %s for url: %s' % (self.status_code, reason, self.url)\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://proxy.teststand2.neontest.xyz/solana\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/requests/models.py:953: HTTPError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : true,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1639269299390,
      "stop" : 1639269299390,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1639269301167,
      "stop" : 1639269319362,
      "duration" : 18195
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1639269362056,
      "stop" : 1639269362056,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1639269362056,
      "stop" : 1639269362412,
      "duration" : 356
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "token",
    "time" : {
      "start" : 1639269362412,
      "stop" : 1639269424610,
      "duration" : 62198
    },
    "status" : "broken",
    "statusMessage" : "requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://proxy.teststand2.neontest.xyz/solana\n",
    "statusTrace" : "  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 932, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/neon-compatibility/neon-compatibility/tests/brownie/token/tests/conftest.py\", line 49, in token\n    return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py\", line 600, in __call__\n    return tx[\"from\"].deploy(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 508, in deploy\n    receipt, exc = self._make_transaction(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 740, in _make_transaction\n    txid = self._transact(tx, allow_revert)  # type: ignore\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 927, in _transact\n    return web3.eth.send_raw_transaction(signed_tx)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/module.py\", line 57, in caller\n    result = w3.manager.request_blocking(method_str,\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/manager.py\", line 186, in request_blocking\n    response = self._make_request(method, params)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/manager.py\", line 147, in _make_request\n    return request_func(method, params)\n  File \"cytoolz/functoolz.pyx\", line 250, in cytoolz.functoolz.curry.__call__\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py\", line 76, in apply_formatters\n    response = make_request(method, params)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/gas_price_strategy.py\", line 90, in middleware\n    return make_request(method, params)\n  File \"cytoolz/functoolz.pyx\", line 250, in cytoolz.functoolz.curry.__call__\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py\", line 74, in apply_formatters\n    response = make_request(method, formatted_params)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/attrdict.py\", line 33, in middleware\n    response = make_request(method, params)\n  File \"cytoolz/functoolz.pyx\", line 250, in cytoolz.functoolz.curry.__call__\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py\", line 76, in apply_formatters\n    response = make_request(method, params)\n  File \"cytoolz/functoolz.pyx\", line 250, in cytoolz.functoolz.curry.__call__\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py\", line 76, in apply_formatters\n    response = make_request(method, params)\n  File \"cytoolz/functoolz.pyx\", line 250, in cytoolz.functoolz.curry.__call__\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py\", line 74, in apply_formatters\n    response = make_request(method, formatted_params)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/buffered_gas_estimate.py\", line 40, in middleware\n    return make_request(method, params)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/middlewares/catch_tx_revert.py\", line 24, in process_request\n    result = make_request(method, params)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/exception_retry_request.py\", line 105, in middleware\n    return make_request(method, params)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/providers/rpc.py\", line 88, in make_request\n    raw_response = make_post_request(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/_utils/request.py\", line 49, in make_post_request\n    response.raise_for_status()\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/requests/models.py\", line 953, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 0
  } ],
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1639269632424,
      "stop" : 1639269632424,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_approve"
  }, {
    "name" : "host",
    "value" : "fv-az81-402"
  }, {
    "name" : "thread",
    "value" : "4913-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_approve"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "idx",
    "value" : "1"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 15,
        "skipped" : 0,
        "passed" : 54,
        "unknown" : 0,
        "total" : 69
      },
      "items" : [ {
        "uid" : "91dfaa82399f1323",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/203//#testresult/91dfaa82399f1323",
        "status" : "passed",
        "time" : {
          "start" : 1639254080874,
          "stop" : 1639254081192,
          "duration" : 318
        }
      }, {
        "uid" : "3ea7ebbe6ef7c64",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/202//#testresult/3ea7ebbe6ef7c64",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Blockhash not found'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639232340299,
          "stop" : 1639232340299,
          "duration" : 0
        }
      }, {
        "uid" : "fee86b8ca5e62a61",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/201//#testresult/fee86b8ca5e62a61",
        "status" : "passed",
        "time" : {
          "start" : 1639231009356,
          "stop" : 1639231009653,
          "duration" : 297
        }
      }, {
        "uid" : "a150d7d01d30b115",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/199//#testresult/a150d7d01d30b115",
        "status" : "passed",
        "time" : {
          "start" : 1639223472411,
          "stop" : 1639223472673,
          "duration" : 262
        }
      }, {
        "uid" : "351d0da7b8473007",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/199//#testresult/351d0da7b8473007",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: '429 Client Error: Too Many Requests for url: https://neonevm.testnet.rpcpool.com/e7efde89606821742be8ba4a7ced'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639222186818,
          "stop" : 1639222186818,
          "duration" : 0
        }
      }, {
        "uid" : "f07c70d149b8427c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/198//#testresult/f07c70d149b8427c",
        "status" : "passed",
        "time" : {
          "start" : 1639192393637,
          "stop" : 1639192393769,
          "duration" : 132
        }
      }, {
        "uid" : "1371a899951917f3",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/197//#testresult/1371a899951917f3",
        "status" : "passed",
        "time" : {
          "start" : 1639182633404,
          "stop" : 1639182633604,
          "duration" : 200
        }
      }, {
        "uid" : "e16e142b9ec30b42",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/196//#testresult/e16e142b9ec30b42",
        "status" : "passed",
        "time" : {
          "start" : 1639152796470,
          "stop" : 1639152797547,
          "duration" : 1077
        }
      }, {
        "uid" : "6df7f5356d49e510",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/195//#testresult/6df7f5356d49e510",
        "status" : "passed",
        "time" : {
          "start" : 1639128472004,
          "stop" : 1639128472201,
          "duration" : 197
        }
      }, {
        "uid" : "7d07e5b3e7944e6d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/194//#testresult/7d07e5b3e7944e6d",
        "status" : "passed",
        "time" : {
          "start" : 1639106079889,
          "stop" : 1639106080097,
          "duration" : 208
        }
      }, {
        "uid" : "9842ff84776f87af",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/193//#testresult/9842ff84776f87af",
        "status" : "passed",
        "time" : {
          "start" : 1639096355020,
          "stop" : 1639096355206,
          "duration" : 186
        }
      }, {
        "uid" : "55630dd8f64b8a32",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/192//#testresult/55630dd8f64b8a32",
        "status" : "passed",
        "time" : {
          "start" : 1639085269502,
          "stop" : 1639085269667,
          "duration" : 165
        }
      }, {
        "uid" : "e650da1a91155b53",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/189//#testresult/e650da1a91155b53",
        "status" : "passed",
        "time" : {
          "start" : 1639070215263,
          "stop" : 1639070216326,
          "duration" : 1063
        }
      }, {
        "uid" : "9990df6597e60385",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/190//#testresult/9990df6597e60385",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Error processing Instruction 1: invalid account data for instruction'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639074282723,
          "stop" : 1639074282723,
          "duration" : 0
        }
      }, {
        "uid" : "58914a4478f4242d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/187//#testresult/58914a4478f4242d",
        "status" : "passed",
        "time" : {
          "start" : 1639053138268,
          "stop" : 1639053138619,
          "duration" : 351
        }
      }, {
        "uid" : "a19b6f096d5368cb",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/188//#testresult/a19b6f096d5368cb",
        "status" : "passed",
        "time" : {
          "start" : 1639056712478,
          "stop" : 1639056712682,
          "duration" : 204
        }
      }, {
        "uid" : "cb3cc50476354380",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/186//#testresult/cb3cc50476354380",
        "status" : "passed",
        "time" : {
          "start" : 1639045788576,
          "stop" : 1639045788761,
          "duration" : 185
        }
      }, {
        "uid" : "2000bd4dec72acfa",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/184//#testresult/2000bd4dec72acfa",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1639019771251,
          "stop" : 1639019771251,
          "duration" : 0
        }
      }, {
        "uid" : "c4b580b3db929f63",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/183//#testresult/c4b580b3db929f63",
        "status" : "passed",
        "time" : {
          "start" : 1639010034987,
          "stop" : 1639010035158,
          "duration" : 171
        }
      }, {
        "uid" : "338e641b1e12a4f0",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/182//#testresult/338e641b1e12a4f0",
        "status" : "passed",
        "time" : {
          "start" : 1638990620702,
          "stop" : 1638990620908,
          "duration" : 206
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "f88da1bfa34d69de.json",
  "parameterValues" : [ "1" ]
}