{
  "uid" : "26153c19cacd2b68",
  "name" : "test_total_supply_not_affected",
  "fullName" : "tests.brownie.token.tests.test_transfer#test_total_supply_not_affected",
  "historyId" : "566bd132ff9238a0f2fd966c46f05eb0",
  "time" : {
    "start" : 1639231075658,
    "stop" : 1639231075658,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "ValueError: Transaction simulation failed: Error processing Instruction 2: custom program error: 0x1",
  "statusTrace" : "brownie_project = <Project 'TokenProject'>\naccounts = <brownie.network.account.Accounts object at 0x7fc196dc35e0>\n\n    @pytest.fixture(scope=\"module\")\n    def token(brownie_project, accounts):\n>       return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n\ntests/brownie/token/tests/conftest.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:600: in __call__\n    return tx[\"from\"].deploy(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:508: in deploy\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:743: in _make_transaction\n    exc = VirtualMachineError(e)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError({'code': -32002, 'message': 'Transaction simulation failed: Error processing Instructio... of 200000 compute units', 'Program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA failed: custom program error: 0x1']}}))\nexc = {'code': -32002, 'data': {'accounts': None, 'err': {'InstructionError': [2, {'Custom': 1}]}, 'logs': ['Program 1111111...oke [2]', ...]}, 'message': 'Transaction simulation failed: Error processing Instruction 2: custom program error: 0x1'}\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.message: str = exc[\"message\"].rstrip(\".\")\n    \n            if isinstance(exc[\"data\"], str):\n                # handle parity exceptions - this logic probably is not perfect\n                if \"0x08c379a0\" in exc[\"data\"]:\n                    revert_type, err_msg = [i.strip() for i in exc[\"data\"].split(\"0x08c379a0\", 1)]\n                    err_msg = eth_abi.decode_abi([\"string\"], HexBytes(err_msg))\n                    err_msg = f\"{revert_type} '{err_msg}'\"\n                elif exc[\"data\"].endswith(\"0x\"):\n                    err_msg = exc[\"data\"][:-2].strip()\n                else:\n                    err_msg = exc[\"data\"]\n                raise ValueError(f\"{self.message}: {err_msg}\") from None\n    \n            try:\n                txid, data = next((k, v) for k, v in exc[\"data\"].items() if k.startswith(\"0x\"))\n            except StopIteration:\n>               raise ValueError(exc[\"message\"]) from None\nE               ValueError: Transaction simulation failed: Error processing Instruction 2: custom program error: 0x1\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:104: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : true,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1639230962746,
      "stop" : 1639230962746,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1639230965010,
      "stop" : 1639230976257,
      "duration" : 11247
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1639230997441,
      "stop" : 1639230997441,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1639230997441,
      "stop" : 1639230997707,
      "duration" : 266
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1639231068689,
      "stop" : 1639231075503,
      "duration" : 6814
    },
    "status" : "broken",
    "statusMessage" : "ValueError: Transaction simulation failed: Error processing Instruction 2: custom program error: 0x1\n",
    "statusTrace" : "  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 932, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/neon-compatibility/neon-compatibility/tests/brownie/token/tests/conftest.py\", line 49, in token\n    return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py\", line 600, in __call__\n    return tx[\"from\"].deploy(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 508, in deploy\n    receipt, exc = self._make_transaction(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 743, in _make_transaction\n    exc = VirtualMachineError(e)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py\", line 104, in __init__\n    raise ValueError(exc[\"message\"]) from None\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1639231273424,
      "stop" : 1639231273424,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_transfer"
  }, {
    "name" : "host",
    "value" : "fv-az135-383"
  }, {
    "name" : "thread",
    "value" : "4518-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_transfer"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 18,
        "skipped" : 0,
        "passed" : 48,
        "unknown" : 0,
        "total" : 66
      },
      "items" : [ {
        "uid" : "70520aaf51ed841c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/199//#testresult/70520aaf51ed841c",
        "status" : "passed",
        "time" : {
          "start" : 1639223546465,
          "stop" : 1639223552396,
          "duration" : 5931
        }
      }, {
        "uid" : "4b3284b19973aad0",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/199//#testresult/4b3284b19973aad0",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: '429 Client Error: Too Many Requests for url: https://neonevm.testnet.rpcpool.com/e7efde89606821742be8ba4a7ced'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639222188135,
          "stop" : 1639222188135,
          "duration" : 0
        }
      }, {
        "uid" : "d1873d965930a410",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/198//#testresult/d1873d965930a410",
        "status" : "passed",
        "time" : {
          "start" : 1639192706833,
          "stop" : 1639192708813,
          "duration" : 1980
        }
      }, {
        "uid" : "b59a0185b78d627f",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/197//#testresult/b59a0185b78d627f",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='proxy.teststand2.neontest.xyz', port=443): Read timed out. (read timeout=30)",
        "time" : {
          "start" : 1639182979586,
          "stop" : 1639182979586,
          "duration" : 0
        }
      }, {
        "uid" : "86b8f0127ad6b7e4",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/196//#testresult/86b8f0127ad6b7e4",
        "status" : "passed",
        "time" : {
          "start" : 1639152951591,
          "stop" : 1639152964897,
          "duration" : 13306
        }
      }, {
        "uid" : "35ee38d97f876b69",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/195//#testresult/35ee38d97f876b69",
        "status" : "passed",
        "time" : {
          "start" : 1639128500898,
          "stop" : 1639128503404,
          "duration" : 2506
        }
      }, {
        "uid" : "3f0368bd37746c3e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/194//#testresult/3f0368bd37746c3e",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='proxy.teststand2.neontest.xyz', port=443): Read timed out. (read timeout=30)",
        "time" : {
          "start" : 1639106362253,
          "stop" : 1639106362253,
          "duration" : 0
        }
      }, {
        "uid" : "913f38da2b6f5ac4",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/193//#testresult/913f38da2b6f5ac4",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://proxy.teststand2.neontest.xyz/solana",
        "time" : {
          "start" : 1639096524017,
          "stop" : 1639096524017,
          "duration" : 0
        }
      }, {
        "uid" : "b1f931399def182d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/192//#testresult/b1f931399def182d",
        "status" : "passed",
        "time" : {
          "start" : 1639085293317,
          "stop" : 1639085295462,
          "duration" : 2145
        }
      }, {
        "uid" : "790c90095ab59672",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/189//#testresult/790c90095ab59672",
        "status" : "passed",
        "time" : {
          "start" : 1639070378545,
          "stop" : 1639070391797,
          "duration" : 13252
        }
      }, {
        "uid" : "6da750f489007e8d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/190//#testresult/6da750f489007e8d",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Error processing Instruction 1: invalid account data for instruction'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639074284432,
          "stop" : 1639074284432,
          "duration" : 0
        }
      }, {
        "uid" : "935e485b74e3bd0e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/187//#testresult/935e485b74e3bd0e",
        "status" : "passed",
        "time" : {
          "start" : 1639053221323,
          "stop" : 1639053227385,
          "duration" : 6062
        }
      }, {
        "uid" : "3279f4a17dac3d6c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/188//#testresult/3279f4a17dac3d6c",
        "status" : "passed",
        "time" : {
          "start" : 1639056742235,
          "stop" : 1639056744834,
          "duration" : 2599
        }
      }, {
        "uid" : "af61661dbfeb8ed0",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/186//#testresult/af61661dbfeb8ed0",
        "status" : "passed",
        "time" : {
          "start" : 1639045819104,
          "stop" : 1639045821540,
          "duration" : 2436
        }
      }, {
        "uid" : "f57004ac7337fa40",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/184//#testresult/f57004ac7337fa40",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='proxy.teststand2.neontest.xyz', port=443): Read timed out. (read timeout=30)",
        "time" : {
          "start" : 1639019925278,
          "stop" : 1639019925278,
          "duration" : 0
        }
      }, {
        "uid" : "384dc02ec6a48274",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/183//#testresult/384dc02ec6a48274",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1639010322897,
          "stop" : 1639010354526,
          "duration" : 31629
        }
      }, {
        "uid" : "706ccfed1a2532ef",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/182//#testresult/706ccfed1a2532ef",
        "status" : "passed",
        "time" : {
          "start" : 1638990649938,
          "stop" : 1638990652448,
          "duration" : 2510
        }
      }, {
        "uid" : "1e3a6cf74056e2a4",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/177//#testresult/1e3a6cf74056e2a4",
        "status" : "passed",
        "time" : {
          "start" : 1638969781434,
          "stop" : 1638969790997,
          "duration" : 9563
        }
      }, {
        "uid" : "3808750d969d6c18",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/181//#testresult/3808750d969d6c18",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1638981014156,
          "stop" : 1638981014156,
          "duration" : 0
        }
      }, {
        "uid" : "df0007831ed595af",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/180//#testresult/df0007831ed595af",
        "status" : "passed",
        "time" : {
          "start" : 1638975770985,
          "stop" : 1638975772660,
          "duration" : 1675
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "26153c19cacd2b68.json",
  "parameterValues" : [ ]
}