{
  "uid" : "9efb6ef0407a6e88",
  "name" : "test_only_affects_target",
  "fullName" : "tests.brownie.token.tests.test_approve#test_only_affects_target",
  "historyId" : "35e636b401a70496879a6cd10541a94f",
  "time" : {
    "start" : 1638891849684,
    "stop" : 1638891849684,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Error processing Instruction 1: invalid account data for instruction'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
  "statusTrace" : "brownie_project = <Project 'TokenProject'>\naccounts = <brownie.network.account.Accounts object at 0x7f8936b9a220>\n\n    @pytest.fixture(scope=\"module\")\n    def token(brownie_project, accounts):\n>       return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n\ntests/brownie/token/tests/conftest.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:600: in __call__\n    return tx[\"from\"].deploy(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:508: in deploy\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:725: in _make_transaction\n    raise VirtualMachineError(e) from None\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError(\"Gas estimation failed: 'Transaction simulation failed: Error processing Instruction 1:...or instruction'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\"))\nexc = \"Gas estimation failed: 'Transaction simulation failed: Error processing Instruction 1: invalid account data for instruction'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\"\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.message: str = exc[\"message\"].rstrip(\".\")\n    \n            if isinstance(exc[\"data\"], str):\n                # handle parity exceptions - this logic probably is not perfect\n                if \"0x08c379a0\" in exc[\"data\"]:\n                    revert_type, err_msg = [i.strip() for i in exc[\"data\"].split(\"0x08c379a0\", 1)]\n                    err_msg = eth_abi.decode_abi([\"string\"], HexBytes(err_msg))\n                    err_msg = f\"{revert_type} '{err_msg}'\"\n                elif exc[\"data\"].endswith(\"0x\"):\n                    err_msg = exc[\"data\"][:-2].strip()\n                else:\n                    err_msg = exc[\"data\"]\n                raise ValueError(f\"{self.message}: {err_msg}\") from None\n    \n            try:\n                txid, data = next((k, v) for k, v in exc[\"data\"].items() if k.startswith(\"0x\"))\n            except StopIteration:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.txid: str = txid\n            self.source: str = \"\"\n            self.revert_type: str = data[\"error\"]\n            self.pc: Optional[str] = data.get(\"program_counter\")\n            if self.pc and self.revert_type == \"revert\":\n                self.pc -= 1\n    \n            self.revert_msg: Optional[str] = data.get(\"reason\")\n            self.dev_revert_msg = brownie.project.build._get_dev_revert(self.pc)\n            if self.revert_msg is None and self.revert_type in (\"revert\", \"invalid opcode\"):\n                self.revert_msg = self.dev_revert_msg\n            elif self.revert_msg == \"Failed assertion\":\n                self.revert_msg = self.dev_revert_msg or self.revert_msg\n    \n        else:\n>           raise ValueError(str(exc)) from None\nE           ValueError: Gas estimation failed: 'Transaction simulation failed: Error processing Instruction 1: invalid account data for instruction'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:121: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : true,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1638891832230,
      "stop" : 1638891832230,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1638891833911,
      "stop" : 1638891847577,
      "duration" : 13666
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1638891848176,
      "stop" : 1638891848444,
      "duration" : 268
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1638891848176,
      "stop" : 1638891848176,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1638891848444,
      "stop" : 1638891849009,
      "duration" : 565
    },
    "status" : "broken",
    "statusMessage" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Error processing Instruction 1: invalid account data for instruction'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\n",
    "statusTrace" : "  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 932, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/neon-compatibility/neon-compatibility/tests/brownie/token/tests/conftest.py\", line 49, in token\n    return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py\", line 600, in __call__\n    return tx[\"from\"].deploy(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 508, in deploy\n    receipt, exc = self._make_transaction(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 725, in _make_transaction\n    raise VirtualMachineError(e) from None\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py\", line 121, in __init__\n    raise ValueError(str(exc)) from None\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1638891852735,
      "stop" : 1638891852735,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_approve"
  }, {
    "name" : "host",
    "value" : "fv-az28-363"
  }, {
    "name" : "thread",
    "value" : "3200-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_approve"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 6,
        "skipped" : 0,
        "passed" : 30,
        "unknown" : 0,
        "total" : 36
      },
      "items" : [ {
        "uid" : "298b422117f800e8",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/167//#testresult/298b422117f800e8",
        "status" : "passed",
        "time" : {
          "start" : 1638863126376,
          "stop" : 1638863128486,
          "duration" : 2110
        }
      }, {
        "uid" : "f31e493278063c47",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/166//#testresult/f31e493278063c47",
        "status" : "passed",
        "time" : {
          "start" : 1638846649528,
          "stop" : 1638846651156,
          "duration" : 1628
        }
      }, {
        "uid" : "f8d7ba527f73533f",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/165//#testresult/f8d7ba527f73533f",
        "status" : "passed",
        "time" : {
          "start" : 1638837027611,
          "stop" : 1638837029710,
          "duration" : 2099
        }
      }, {
        "uid" : "46be1cb770b4089",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/164//#testresult/46be1cb770b4089",
        "status" : "passed",
        "time" : {
          "start" : 1638818163373,
          "stop" : 1638818171368,
          "duration" : 7995
        }
      }, {
        "uid" : "f7133579a35eee01",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/163//#testresult/f7133579a35eee01",
        "status" : "passed",
        "time" : {
          "start" : 1638794708889,
          "stop" : 1638794716543,
          "duration" : 7654
        }
      }, {
        "uid" : "cdb1b36f3fc7e593",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/162//#testresult/cdb1b36f3fc7e593",
        "status" : "passed",
        "time" : {
          "start" : 1638760230573,
          "stop" : 1638760233565,
          "duration" : 2992
        }
      }, {
        "uid" : "9cec6093709f16db",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/161//#testresult/9cec6093709f16db",
        "status" : "passed",
        "time" : {
          "start" : 1638750585838,
          "stop" : 1638750587921,
          "duration" : 2083
        }
      }, {
        "uid" : "cb08f47ae4a4d901",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/160//#testresult/cb08f47ae4a4d901",
        "status" : "passed",
        "time" : {
          "start" : 1638695755518,
          "stop" : 1638695757729,
          "duration" : 2211
        }
      }, {
        "uid" : "4d1bd26b4a8acc32",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/159//#testresult/4d1bd26b4a8acc32",
        "status" : "passed",
        "time" : {
          "start" : 1638673811023,
          "stop" : 1638673813129,
          "duration" : 2106
        }
      }, {
        "uid" : "390096090d4955cb",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/158//#testresult/390096090d4955cb",
        "status" : "passed",
        "time" : {
          "start" : 1638664252457,
          "stop" : 1638664254497,
          "duration" : 2040
        }
      }, {
        "uid" : "4876752f29862d7e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/157//#testresult/4876752f29862d7e",
        "status" : "passed",
        "time" : {
          "start" : 1638643358489,
          "stop" : 1638643360562,
          "duration" : 2073
        }
      }, {
        "uid" : "a13b12f9784920ec",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/156//#testresult/a13b12f9784920ec",
        "status" : "passed",
        "time" : {
          "start" : 1638587399481,
          "stop" : 1638587401625,
          "duration" : 2144
        }
      }, {
        "uid" : "54f10b7edee4f8ff",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/155//#testresult/54f10b7edee4f8ff",
        "status" : "passed",
        "time" : {
          "start" : 1638577741944,
          "stop" : 1638577743991,
          "duration" : 2047
        }
      }, {
        "uid" : "ca8aeef24c6822e9",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/154//#testresult/ca8aeef24c6822e9",
        "status" : "passed",
        "time" : {
          "start" : 1638501009189,
          "stop" : 1638501011333,
          "duration" : 2144
        }
      }, {
        "uid" : "a0c3469afa976b62",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/153//#testresult/a0c3469afa976b62",
        "status" : "passed",
        "time" : {
          "start" : 1638491366508,
          "stop" : 1638491369042,
          "duration" : 2534
        }
      }, {
        "uid" : "c26672d64362d45c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/152//#testresult/c26672d64362d45c",
        "status" : "passed",
        "time" : {
          "start" : 1638477626755,
          "stop" : 1638477629311,
          "duration" : 2556
        }
      }, {
        "uid" : "d1fd02a19fe113b7",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/151//#testresult/d1fd02a19fe113b7",
        "status" : "passed",
        "time" : {
          "start" : 1638466513675,
          "stop" : 1638466516609,
          "duration" : 2934
        }
      }, {
        "uid" : "c467216897d4df34",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/150//#testresult/c467216897d4df34",
        "status" : "passed",
        "time" : {
          "start" : 1638453869980,
          "stop" : 1638453872484,
          "duration" : 2504
        }
      }, {
        "uid" : "eae02d38a4bb2c40",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/149//#testresult/eae02d38a4bb2c40",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='test3-solana', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fbe4c55ccd0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1638414586824,
          "stop" : 1638414586824,
          "duration" : 0
        }
      }, {
        "uid" : "94d5048aa02431be",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/147//#testresult/94d5048aa02431be",
        "status" : "passed",
        "time" : {
          "start" : 1638399285689,
          "stop" : 1638399287751,
          "duration" : 2062
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "9efb6ef0407a6e88.json",
  "parameterValues" : [ ]
}