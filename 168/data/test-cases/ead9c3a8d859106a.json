{
  "uid" : "ead9c3a8d859106a",
  "name" : "test_transfer_to_self",
  "fullName" : "tests.brownie.token.tests.test_transfer#test_transfer_to_self",
  "historyId" : "cce1f431a8610d0d4bb26f30bb566f26",
  "time" : {
    "start" : 1638891850770,
    "stop" : 1638891850770,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Error processing Instruction 1: invalid account data for instruction'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
  "statusTrace" : "brownie_project = <Project 'TokenProject'>\naccounts = <brownie.network.account.Accounts object at 0x7f8936b9a220>\n\n    @pytest.fixture(scope=\"module\")\n    def token(brownie_project, accounts):\n>       return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n\ntests/brownie/token/tests/conftest.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:600: in __call__\n    return tx[\"from\"].deploy(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:508: in deploy\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:725: in _make_transaction\n    raise VirtualMachineError(e) from None\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError(\"Gas estimation failed: 'Transaction simulation failed: Error processing Instruction 1:...or instruction'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\"))\nexc = \"Gas estimation failed: 'Transaction simulation failed: Error processing Instruction 1: invalid account data for instruction'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\"\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.message: str = exc[\"message\"].rstrip(\".\")\n    \n            if isinstance(exc[\"data\"], str):\n                # handle parity exceptions - this logic probably is not perfect\n                if \"0x08c379a0\" in exc[\"data\"]:\n                    revert_type, err_msg = [i.strip() for i in exc[\"data\"].split(\"0x08c379a0\", 1)]\n                    err_msg = eth_abi.decode_abi([\"string\"], HexBytes(err_msg))\n                    err_msg = f\"{revert_type} '{err_msg}'\"\n                elif exc[\"data\"].endswith(\"0x\"):\n                    err_msg = exc[\"data\"][:-2].strip()\n                else:\n                    err_msg = exc[\"data\"]\n                raise ValueError(f\"{self.message}: {err_msg}\") from None\n    \n            try:\n                txid, data = next((k, v) for k, v in exc[\"data\"].items() if k.startswith(\"0x\"))\n            except StopIteration:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.txid: str = txid\n            self.source: str = \"\"\n            self.revert_type: str = data[\"error\"]\n            self.pc: Optional[str] = data.get(\"program_counter\")\n            if self.pc and self.revert_type == \"revert\":\n                self.pc -= 1\n    \n            self.revert_msg: Optional[str] = data.get(\"reason\")\n            self.dev_revert_msg = brownie.project.build._get_dev_revert(self.pc)\n            if self.revert_msg is None and self.revert_type in (\"revert\", \"invalid opcode\"):\n                self.revert_msg = self.dev_revert_msg\n            elif self.revert_msg == \"Failed assertion\":\n                self.revert_msg = self.dev_revert_msg or self.revert_msg\n    \n        else:\n>           raise ValueError(str(exc)) from None\nE           ValueError: Gas estimation failed: 'Transaction simulation failed: Error processing Instruction 1: invalid account data for instruction'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:121: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : true,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1638891832230,
      "stop" : 1638891832230,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1638891833911,
      "stop" : 1638891847577,
      "duration" : 13666
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1638891848176,
      "stop" : 1638891848444,
      "duration" : 268
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1638891848176,
      "stop" : 1638891848176,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1638891849905,
      "stop" : 1638891850333,
      "duration" : 428
    },
    "status" : "broken",
    "statusMessage" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Error processing Instruction 1: invalid account data for instruction'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\n",
    "statusTrace" : "  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 932, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/neon-compatibility/neon-compatibility/tests/brownie/token/tests/conftest.py\", line 49, in token\n    return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py\", line 600, in __call__\n    return tx[\"from\"].deploy(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 508, in deploy\n    receipt, exc = self._make_transaction(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 725, in _make_transaction\n    raise VirtualMachineError(e) from None\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py\", line 121, in __init__\n    raise ValueError(str(exc)) from None\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1638891852735,
      "stop" : 1638891852735,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_transfer"
  }, {
    "name" : "host",
    "value" : "fv-az28-363"
  }, {
    "name" : "thread",
    "value" : "3200-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_transfer"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 6,
        "skipped" : 0,
        "passed" : 30,
        "unknown" : 0,
        "total" : 36
      },
      "items" : [ {
        "uid" : "a9e0d350d670abad",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/167//#testresult/a9e0d350d670abad",
        "status" : "passed",
        "time" : {
          "start" : 1638863152997,
          "stop" : 1638863155590,
          "duration" : 2593
        }
      }, {
        "uid" : "85bffd993484314a",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/166//#testresult/85bffd993484314a",
        "status" : "passed",
        "time" : {
          "start" : 1638846669571,
          "stop" : 1638846671308,
          "duration" : 1737
        }
      }, {
        "uid" : "4b42ae7f350dfac0",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/165//#testresult/4b42ae7f350dfac0",
        "status" : "passed",
        "time" : {
          "start" : 1638837055969,
          "stop" : 1638837058529,
          "duration" : 2560
        }
      }, {
        "uid" : "ae2f91dc3adcdf34",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/164//#testresult/ae2f91dc3adcdf34",
        "status" : "passed",
        "time" : {
          "start" : 1638818265034,
          "stop" : 1638818273925,
          "duration" : 8891
        }
      }, {
        "uid" : "4928b87e7cfd2ee3",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/163//#testresult/4928b87e7cfd2ee3",
        "status" : "passed",
        "time" : {
          "start" : 1638794812076,
          "stop" : 1638794821498,
          "duration" : 9422
        }
      }, {
        "uid" : "9244523c5736750d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/162//#testresult/9244523c5736750d",
        "status" : "passed",
        "time" : {
          "start" : 1638760258749,
          "stop" : 1638760261429,
          "duration" : 2680
        }
      }, {
        "uid" : "232bc5abb3bde043",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/161//#testresult/232bc5abb3bde043",
        "status" : "passed",
        "time" : {
          "start" : 1638750616806,
          "stop" : 1638750619824,
          "duration" : 3018
        }
      }, {
        "uid" : "2c929c6ac9f918c7",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/160//#testresult/2c929c6ac9f918c7",
        "status" : "passed",
        "time" : {
          "start" : 1638695783025,
          "stop" : 1638695785563,
          "duration" : 2538
        }
      }, {
        "uid" : "5b90368d00fa6ed8",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/159//#testresult/5b90368d00fa6ed8",
        "status" : "passed",
        "time" : {
          "start" : 1638673836885,
          "stop" : 1638673839478,
          "duration" : 2593
        }
      }, {
        "uid" : "8b37fac3b3d8b464",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/158//#testresult/8b37fac3b3d8b464",
        "status" : "passed",
        "time" : {
          "start" : 1638664280223,
          "stop" : 1638664282811,
          "duration" : 2588
        }
      }, {
        "uid" : "2bf49b9ecd0ad154",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/157//#testresult/2bf49b9ecd0ad154",
        "status" : "passed",
        "time" : {
          "start" : 1638643386614,
          "stop" : 1638643389193,
          "duration" : 2579
        }
      }, {
        "uid" : "c24b62d0b946f7bf",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/156//#testresult/c24b62d0b946f7bf",
        "status" : "passed",
        "time" : {
          "start" : 1638587428069,
          "stop" : 1638587430683,
          "duration" : 2614
        }
      }, {
        "uid" : "f37e9a517e4f89af",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/155//#testresult/f37e9a517e4f89af",
        "status" : "passed",
        "time" : {
          "start" : 1638577769912,
          "stop" : 1638577772460,
          "duration" : 2548
        }
      }, {
        "uid" : "21c9b00bd472a754",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/154//#testresult/21c9b00bd472a754",
        "status" : "passed",
        "time" : {
          "start" : 1638501037852,
          "stop" : 1638501040441,
          "duration" : 2589
        }
      }, {
        "uid" : "1447574cec6fd5ee",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/153//#testresult/1447574cec6fd5ee",
        "status" : "passed",
        "time" : {
          "start" : 1638491397557,
          "stop" : 1638491400349,
          "duration" : 2792
        }
      }, {
        "uid" : "90465807c4020ce4",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/152//#testresult/90465807c4020ce4",
        "status" : "passed",
        "time" : {
          "start" : 1638477654723,
          "stop" : 1638477657045,
          "duration" : 2322
        }
      }, {
        "uid" : "3f087349b3ce3e7b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/151//#testresult/3f087349b3ce3e7b",
        "status" : "passed",
        "time" : {
          "start" : 1638466544370,
          "stop" : 1638466547097,
          "duration" : 2727
        }
      }, {
        "uid" : "16078801daa7304d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/150//#testresult/16078801daa7304d",
        "status" : "passed",
        "time" : {
          "start" : 1638453898569,
          "stop" : 1638453901264,
          "duration" : 2695
        }
      }, {
        "uid" : "b9c4c75b5f55aded",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/149//#testresult/b9c4c75b5f55aded",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='test3-solana', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fbe4fe07c70>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1638414587912,
          "stop" : 1638414587912,
          "duration" : 0
        }
      }, {
        "uid" : "f5a492cc56b1f7fc",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/147//#testresult/f5a492cc56b1f7fc",
        "status" : "passed",
        "time" : {
          "start" : 1638399311954,
          "stop" : 1638399314593,
          "duration" : 2639
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "ead9c3a8d859106a.json",
  "parameterValues" : [ ]
}