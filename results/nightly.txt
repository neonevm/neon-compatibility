https://docs.neon-labs.org/neon-compatibility/300/data/suites.csv
passed Contract AccessControl Contract interface AccessControl ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract AccessControl Contract interface AccessControl ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract AccessControl Contract interface AccessControl getRoleAdmin bytes32 has to be implemented 
passed Contract AccessControl Contract interface AccessControl grantRole bytes32 address has to be implemented 
passed Contract AccessControl Contract interface AccessControl hasRole bytes32 address has to be implemented 
passed Contract AccessControl Contract interface AccessControl renounceRole bytes32 address has to be implemented 
passed Contract AccessControl Contract interface AccessControl revokeRole bytes32 address has to be implemented 
passed Contract AccessControl default admin default admin role s admin is itself 
passed Contract AccessControl default admin deployer has default admin role 
passed Contract AccessControl default admin other roles s admin is the default admin role 
passed Contract AccessControl granting accounts can be granted a role multiple times 
passed Contract AccessControl granting non admin cannot grant role to other accounts 
passed Contract AccessControl onlyRole modifier do not revert if sender has role 
passed Contract AccessControl onlyRole modifier revert if sender doesn t have role 1 
passed Contract AccessControl onlyRole modifier revert if sender doesn t have role 2 
passed Contract AccessControl renouncing roles that are not had can be renounced 
passed Contract AccessControl renouncing with granted role a role can be renounced multiple times 
passed Contract AccessControl renouncing with granted role bearer can renounce role 
passed Contract AccessControl renouncing with granted role only the sender can renounce their roles 
passed Contract AccessControl revoking roles that are not had can be revoked 
passed Contract AccessControl revoking with granted role a role can be revoked multiple times 
passed Contract AccessControl revoking with granted role admin can revoke role 
passed Contract AccessControl revoking with granted role non admin cannot revoke role 
passed Contract AccessControl setting role admin a role s admin role can be changed 
passed Contract AccessControl setting role admin a role s previous admins no longer grant roles 
passed Contract AccessControl setting role admin a role s previous admins no longer revoke roles 
passed Contract AccessControl setting role admin the new admin can grant roles 
passed Contract AccessControl setting role admin the new admin can revoke roles 
broken Contract Address functionCall with valid contract receiver reverts when the called function throws 
passed Contract Address functionCall with valid contract receiver calls the requested function 
passed Contract Address functionCall with valid contract receiver reverts when the called function reverts bubbling up the revert reason 
passed Contract Address functionCall with valid contract receiver reverts when the called function reverts with no reason 
passed Contract Address functionCall with valid contract receiver reverts when the called function runs out of gas 
broken Contract Address functionCallWithValue with zero value calls the requested function 
passed Contract Address isContract returns false for account address 
passed Contract Address isContract returns true for contract address 
failed Contract Address sendValue when sender contract has funds reverts when sending more than the balance 
failed Contract Address sendValue when sender contract has funds sends non zero amounts 
failed Contract Address sendValue when sender contract has funds sends the whole balance 
failed Contract Address sendValue when sender contract has no funds reverts when sending non zero amounts 
passed Contract Address sendValue when sender contract has funds sends 0 wei 
passed Contract Address sendValue when sender contract has funds with contract recipient reverts on recipient revert 
passed Contract Address sendValue when sender contract has funds with contract recipient sends funds 
passed Contract Address sendValue when sender contract has no funds sends 0 wei 
passed Contract Arrays findUpperBound Array with gap returns index of first element in next filled range 
passed Contract Arrays findUpperBound Empty array always returns 0 for empty array 
passed Contract Arrays findUpperBound Even number of elements returns 0 for the element under the lower boundary 
passed Contract Arrays findUpperBound Even number of elements returns 0 for the first element 
passed Contract Arrays findUpperBound Even number of elements returns correct index for the basic case 
passed Contract Arrays findUpperBound Even number of elements returns first index after last element if searched value is over the upper boundary
passed Contract Arrays findUpperBound Even number of elements returns index of the last element 
passed Contract Arrays findUpperBound Odd number of elements returns 0 for the element under the lower boundary 
passed Contract Arrays findUpperBound Odd number of elements returns 0 for the first element 
passed Contract Arrays findUpperBound Odd number of elements returns correct index for the basic case 
passed Contract Arrays findUpperBound Odd number of elements returns first index after last element if searched value is over the upper boundary
passed Contract Arrays findUpperBound Odd number of elements returns index of the last element 
failed Contract BeaconProxy bad beacon is not accepted non compliant beacon 
passed Contract BeaconProxy bad beacon is not accepted non contract beacon 
passed Contract BeaconProxy bad beacon is not accepted non contract implementation 
failed Contract BeaconProxy initialization no initialization 
failed Contract BeaconProxy initialization non payable initialization 
failed Contract BeaconProxy initialization payable initialization 
passed Contract BeaconProxy initialization reverting initialization 
passed Contract BeaconProxy upgrade 2 proxies by upgrading shared beacon 
passed Contract BeaconProxy upgrade a proxy by upgrading its beacon 
passed Contract BitMap set adds a key 
passed Contract BitMap set adds several consecutive keys 
passed Contract BitMap set adds several keys 
passed Contract BitMap setTo set a key to false 
passed Contract BitMap setTo set a key to true 
passed Contract BitMap setTo set several consecutive keys 
passed Contract BitMap starts empty 
passed Contract BitMap unset adds and removes multiple keys 
passed Contract BitMap unset removes added keys 
passed Contract BitMap unset removes consecutive added keys 
passed Contract Clones cloneDeterministic address already used 
passed Contract Clones cloneDeterministic address prediction 
failed Contract Clones cloneDeterministic initialization without parameters non payable when not sending balance has expected balance 
failed Contract Clones cloneDeterministic initialization without parameters non payable when sending some balance reverts 
passed Contract Clones cloneDeterministic initialization without parameters non payable when not sending balance initializes the proxy 
failed Contract Clones cloneDeterministic initialization without parameters payable when not sending balance has expected balance 
failed Contract Clones cloneDeterministic initialization without parameters payable when sending some balance has expected balance 
passed Contract Clones cloneDeterministic initialization without parameters payable when not sending balance initializes the proxy 
passed Contract Clones cloneDeterministic initialization without parameters payable when sending some balance initializes the proxy 
failed Contract Clones cloneDeterministic initialization with parameters non payable when not sending balance has expected balance 
failed Contract Clones cloneDeterministic initialization with parameters non payable when sending some balance reverts 
passed Contract Clones cloneDeterministic initialization with parameters non payable when not sending balance initializes the proxy 
failed Contract Clones cloneDeterministic initialization with parameters payable when not sending balance has expected balance 
failed Contract Clones cloneDeterministic initialization with parameters payable when sending some balance has expected balance 
passed Contract Clones cloneDeterministic initialization with parameters payable when not sending balance initializes the proxy 
passed Contract Clones cloneDeterministic initialization with parameters payable when sending some balance initializes the proxy 
failed Contract Clones clone initialization without parameters non payable when not sending balance has expected balance 
failed Contract Clones clone initialization without parameters non payable when sending some balance reverts 
passed Contract Clones clone initialization without parameters non payable when not sending balance initializes the proxy 
failed Contract Clones clone initialization without parameters payable when not sending balance has expected balance 
failed Contract Clones clone initialization without parameters payable when sending some balance has expected balance 
passed Contract Clones clone initialization without parameters payable when not sending balance initializes the proxy 
passed Contract Clones clone initialization without parameters payable when sending some balance initializes the proxy 
failed Contract Clones clone initialization with parameters non payable when not sending balance has expected balance 
failed Contract Clones clone initialization with parameters non payable when sending some balance reverts 
passed Contract Clones clone initialization with parameters non payable when not sending balance initializes the proxy 
failed Contract Clones clone initialization with parameters payable when not sending balance has expected balance 
failed Contract Clones clone initialization with parameters payable when sending some balance has expected balance 
passed Contract Clones clone initialization with parameters payable when not sending balance initializes the proxy 
passed Contract Clones clone initialization with parameters payable when sending some balance initializes the proxy 
broken Contract ConditionalEscrow when withdrawal is allowed as an escrow deposits can accept a single deposit 
passed Contract ConditionalEscrow when withdrawal is disallowed reverts on withdrawals 
passed Contract Context msgData returns the transaction data when called from an EOA 
passed Contract Context msgData returns the transaction sender when from another contract 
passed Contract Context msgSender returns the transaction sender when called from an EOA 
passed Contract Context msgSender returns the transaction sender when from another contract 
passed Contract Counters decrement after incremented to 3 can be called multiple times 
passed Contract Counters decrement starting from 1 decrements the current value by one 
passed Contract Counters decrement starting from 1 reverts if the current value is 0 
passed Contract Counters increment starting from 0 can be called multiple times 
passed Contract Counters increment starting from 0 increments the current value by one 
passed Contract Counters reset non null counter reset to 0 
passed Contract Counters reset null counter does not throw 
passed Contract Counters starts at zero 
passed Contract ECDSA recover with invalid signature with long signature 
passed Contract ECDSA recover with invalid signature with short signature 
passed Contract ECDSA recover with valid signature reverts with high s value signature 
passed Contract ECDSA recover with valid signature using web3 eth sign returns a different address 
passed Contract ECDSA recover with valid signature using web3 eth sign returns signer address with correct signature 
passed Contract ECDSA recover with valid signature using web3 eth sign returns signer address with correct signature for arbitrary length message 
passed Contract ECDSA recover with valid signature using web3 eth sign reverts with invalid signature 
broken Contract ECDSA recover with valid signature with v1 signature reverts with wrong version 
passed Contract ECDSA recover with valid signature with v0 signature reverts with 00 as version value 
passed Contract ECDSA recover with valid signature with v0 signature reverts with wrong version 
passed Contract ECDSA recover with valid signature with v0 signature works with 27 as version value 
passed Contract ECDSA recover with valid signature with v0 signature works with short EIP2098 format 
passed Contract ECDSA recover with valid signature with v1 signature reverts with 01 as version value 
passed Contract ECDSA recover with valid signature with v1 signature works with 28 as version value 
passed Contract EIP712 digest 
passed Contract EIP712 domain separator 
passed Contract EnumerableMap read get existing value 
passed Contract EnumerableMap read get missing value 
passed Contract EnumerableMap read get with message existing value 
passed Contract EnumerableMap read get with message missing value 
passed Contract EnumerableMap read tryGet existing value 
passed Contract EnumerableMap read tryGet missing value 
passed Contract EnumerableMap remove adds and removes multiple keys 
passed Contract EnumerableMap remove removes added keys 
passed Contract EnumerableMap remove returns false when removing keys not in the set 
passed Contract EnumerableMap set adds a key 
passed Contract EnumerableMap set adds several keys 
passed Contract EnumerableMap set returns false when adding keys already in the set 
passed Contract EnumerableMap set updates values for keys already in the set 
passed Contract EnumerableMap starts empty 
passed Contract EnumerableSet EnumerableAddressSet add adds a value 
passed Contract EnumerableSet EnumerableAddressSet add adds several values 
passed Contract EnumerableSet EnumerableAddressSet add returns false when adding values already in the set 
failed Contract EnumerableSet EnumerableAddressSet at reverts when retrieving non existent elements 
passed Contract EnumerableSet EnumerableAddressSet remove adds and removes multiple values 
passed Contract EnumerableSet EnumerableAddressSet remove removes added values 
passed Contract EnumerableSet EnumerableAddressSet remove returns false when removing values not in the set 
passed Contract EnumerableSet EnumerableAddressSet starts empty 
passed Contract EnumerableSet EnumerableBytes32Set add adds a value 
passed Contract EnumerableSet EnumerableBytes32Set add adds several values 
passed Contract EnumerableSet EnumerableBytes32Set add returns false when adding values already in the set 
failed Contract EnumerableSet EnumerableBytes32Set at reverts when retrieving non existent elements 
passed Contract EnumerableSet EnumerableBytes32Set remove adds and removes multiple values 
passed Contract EnumerableSet EnumerableBytes32Set remove removes added values 
passed Contract EnumerableSet EnumerableBytes32Set remove returns false when removing values not in the set 
passed Contract EnumerableSet EnumerableBytes32Set starts empty 
passed Contract EnumerableSet EnumerableUintSet add adds a value 
passed Contract EnumerableSet EnumerableUintSet add adds several values 
passed Contract EnumerableSet EnumerableUintSet add returns false when adding values already in the set 
failed Contract EnumerableSet EnumerableUintSet at reverts when retrieving non existent elements 
passed Contract EnumerableSet EnumerableUintSet remove adds and removes multiple values 
passed Contract EnumerableSet EnumerableUintSet remove removes added values 
passed Contract EnumerableSet EnumerableUintSet remove returns false when removing values not in the set 
passed Contract EnumerableSet EnumerableUintSet starts empty 
passed Contract ERC1155Burnable burn approved operators can burn the holder s tokens 
passed Contract ERC1155Burnable burnBatch approved operators can burn the holder s tokens 
passed Contract ERC1155Burnable burnBatch holder can burn their tokens 
passed Contract ERC1155Burnable burnBatch unapproved accounts cannot burn the holder s tokens 
passed Contract ERC1155Burnable burn holder can burn their tokens 
passed Contract ERC1155Burnable burn unapproved accounts cannot burn the holder s tokens 
passed Contract ERC1155Holder Contract interface ERC1155Receiver ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract ERC1155Holder Contract interface ERC1155Receiver ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract ERC1155Holder Contract interface ERC1155Receiver onERC1155BatchReceived address address uint256 uint256 bytes has to be implemented 
passed Contract ERC1155Holder Contract interface ERC1155Receiver onERC1155Received address address uint256 uint256 bytes has to be implemented 
passed Contract ERC1155Holder Contract interface ERC165 ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract ERC1155Holder Contract interface ERC165 ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract ERC1155Holder Contract interface ERC165 supportsInterface bytes4 has to be implemented 
passed Contract ERC1155Holder receives ERC1155 tokens from a multiple IDs 
passed Contract ERC1155Holder receives ERC1155 tokens from a single ID 
broken Contract ERC1155 internal functions burn reverts when burning a non existent token id 
passed Contract ERC1155 internal functions burn reverts when burning the zero account s tokens 
passed Contract ERC1155 internal functions mintBatch reverts if length of inputs do not match 
passed Contract ERC1155 internal functions mintBatch reverts with a zero destination address 
passed Contract ERC1155 internal functions mintBatch with minted batch of tokens credits the minted batch of tokens 
passed Contract ERC1155 internal functions mintBatch with minted batch of tokens emits a TransferBatch event 
passed Contract ERC1155 internal functions mint reverts with a zero destination address 
passed Contract ERC1155 internal functions mint with minted tokens credits the minted amount of tokens 
passed Contract ERC1155 internal functions mint with minted tokens emits a TransferSingle event 
passed Contract ERC1155 like an ERC1155 balanceOfBatch reverts when input arrays don t match up 
passed Contract ERC1155 like an ERC1155 balanceOfBatch reverts when one of the addresses is the zero address 
passed Contract ERC1155 like an ERC1155 balanceOfBatch when accounts don t own tokens returns zeros for each account 
passed Contract ERC1155 like an ERC1155 balanceOfBatch when accounts own some tokens returns amounts owned by each account in order passed 
passed Contract ERC1155 like an ERC1155 balanceOfBatch when accounts own some tokens returns multiple times the balance of the same address when
passed Contract ERC1155 like an ERC1155 balanceOf reverts when queried about the zero address 
passed Contract ERC1155 like an ERC1155 balanceOf when accounts don t own tokens returns zero for given addresses 
passed Contract ERC1155 like an ERC1155 balanceOf when accounts own some tokens returns the amount of tokens owned by the given addresses
passed Contract ERC1155 like an ERC1155 Contract interface ERC1155 balanceOf address uint256 has to be implemented 
passed Contract ERC1155 like an ERC1155 Contract interface ERC1155 balanceOfBatch address uint256 has to be implemented 
passed Contract ERC1155 like an ERC1155 Contract interface ERC1155 ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract ERC1155 like an ERC1155 Contract interface ERC1155 ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract ERC1155 like an ERC1155 Contract interface ERC1155 isApprovedForAll address address has to be implemented 
passed Contract ERC1155 like an ERC1155 Contract interface ERC1155 safeBatchTransferFrom address address uint256 uint256 bytes has to be implemented 
passed Contract ERC1155 like an ERC1155 Contract interface ERC1155 safeTransferFrom address address uint256 uint256 bytes has to be implemented 
passed Contract ERC1155 like an ERC1155 Contract interface ERC1155 setApprovalForAll address bool has to be implemented 
passed Contract ERC1155 like an ERC1155 Contract interface ERC165 ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract ERC1155 like an ERC1155 Contract interface ERC165 ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract ERC1155 like an ERC1155 Contract interface ERC165 supportsInterface bytes4 has to be implemented 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom reverts when ids array length doesn t match amounts array length 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom reverts when transferring amount more than any of balances 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom reverts when transferring to zero address 
broken Contract ERC1155 like an ERC1155 safeBatchTransferFrom to a contract that does not implement the required function reverts 
broken Contract ERC1155 like an ERC1155 safeBatchTransferFrom to a receiver contract that reverts only on single transfers credits transferred balances to receiver
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom to a receiver contract returning unexpected value reverts 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom to a receiver contract that reverts only on single transfers debits transferred balances from sender
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom to a receiver contract that reverts reverts 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when called by an operator on behalf of the multiTokenHolder when operator is approved by
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when called by an operator on behalf of the multiTokenHolder when operator is approved by
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when called by an operator on behalf of the multiTokenHolder when operator is approved by
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when called by an operator on behalf of the multiTokenHolder when operator is approved by
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when called by an operator on behalf of the multiTokenHolder when operator is not approved
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when called by the multiTokenHolder credits transferred balances to receiver 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when called by the multiTokenHolder debits transferred balances from sender 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when called by the multiTokenHolder emits a TransferBatch log 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when sending to a valid receiver with data calls onERC1155Received 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when sending to a valid receiver with data credits transferred balances to receiver 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when sending to a valid receiver with data debits transferred balances from sender 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when sending to a valid receiver with data emits a TransferBatch log 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when sending to a valid receiver without data calls onERC1155BatchReceived 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when sending to a valid receiver without data credits transferred balances to receiver 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when sending to a valid receiver without data debits transferred balances from sender 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when sending to a valid receiver without data emits a TransferBatch log 
passed Contract ERC1155 like an ERC1155 safeTransferFrom reverts when transferring more than balance 
passed Contract ERC1155 like an ERC1155 safeTransferFrom reverts when transferring to zero address 
passed Contract ERC1155 like an ERC1155 safeTransferFrom to a contract that does not implement the required function reverts 
passed Contract ERC1155 like an ERC1155 safeTransferFrom to a receiver contract returning unexpected value reverts 
passed Contract ERC1155 like an ERC1155 safeTransferFrom to a receiver contract that reverts reverts 
passed Contract ERC1155 like an ERC1155 safeTransferFrom when called by an operator on behalf of the multiTokenHolder when operator is approved by
passed Contract ERC1155 like an ERC1155 safeTransferFrom when called by an operator on behalf of the multiTokenHolder when operator is approved by
passed Contract ERC1155 like an ERC1155 safeTransferFrom when called by an operator on behalf of the multiTokenHolder when operator is approved by
passed Contract ERC1155 like an ERC1155 safeTransferFrom when called by an operator on behalf of the multiTokenHolder when operator is approved by
passed Contract ERC1155 like an ERC1155 safeTransferFrom when called by an operator on behalf of the multiTokenHolder when operator is not approved
passed Contract ERC1155 like an ERC1155 safeTransferFrom when called by the multiTokenHolder credits transferred balance to receiver 
passed Contract ERC1155 like an ERC1155 safeTransferFrom when called by the multiTokenHolder debits transferred balance from sender 
passed Contract ERC1155 like an ERC1155 safeTransferFrom when called by the multiTokenHolder emits a TransferSingle log 
passed Contract ERC1155 like an ERC1155 safeTransferFrom when called by the multiTokenHolder preserves existing balances which are not transferred by multiTokenHolder 
passed Contract ERC1155 like an ERC1155 safeTransferFrom when sending to a valid receiver with data calls onERC1155Received 
passed Contract ERC1155 like an ERC1155 safeTransferFrom when sending to a valid receiver with data credits transferred balance to receiver 
passed Contract ERC1155 like an ERC1155 safeTransferFrom when sending to a valid receiver with data debits transferred balance from sender 
passed Contract ERC1155 like an ERC1155 safeTransferFrom when sending to a valid receiver with data emits a TransferSingle log 
passed Contract ERC1155 like an ERC1155 safeTransferFrom when sending to a valid receiver without data calls onERC1155Received 
passed Contract ERC1155 like an ERC1155 safeTransferFrom when sending to a valid receiver without data credits transferred balance to receiver 
passed Contract ERC1155 like an ERC1155 safeTransferFrom when sending to a valid receiver without data debits transferred balance from sender 
passed Contract ERC1155 like an ERC1155 safeTransferFrom when sending to a valid receiver without data emits a TransferSingle log 
passed Contract ERC1155 like an ERC1155 setApprovalForAll can unset approval for an operator 
passed Contract ERC1155 like an ERC1155 setApprovalForAll emits an ApprovalForAll log 
passed Contract ERC1155 like an ERC1155 setApprovalForAll reverts if attempting to approve self as an operator 
passed Contract ERC1155 like an ERC1155 setApprovalForAll sets approval status which can be queried via isApprovedForAll 
passed Contract ERC1155Pausable when token is paused balanceOf returns the amount of tokens owned by the given address 
passed Contract ERC1155Pausable when token is paused isApprovedForAll returns the approval of the operator 
passed Contract ERC1155Pausable when token is paused reverts when trying to burn 
passed Contract ERC1155Pausable when token is paused reverts when trying to burnBatch 
passed Contract ERC1155Pausable when token is paused reverts when trying to mint 
passed Contract ERC1155Pausable when token is paused reverts when trying to mintBatch 
passed Contract ERC1155Pausable when token is paused reverts when trying to safeBatchTransferFrom from holder 
passed Contract ERC1155Pausable when token is paused reverts when trying to safeBatchTransferFrom from operator 
passed Contract ERC1155Pausable when token is paused reverts when trying to safeTransferFrom from holder 
passed Contract ERC1155Pausable when token is paused reverts when trying to safeTransferFrom from operator 
passed Contract ERC1155Pausable when token is paused setApprovalForAll approves an operator 
passed Contract ERC1155PresetMinterPauser batched minting deployer can batch mint tokens 
passed Contract ERC1155PresetMinterPauser batched minting other accounts cannot batch mint tokens 
passed Contract ERC1155PresetMinterPauser burning holders can burn their tokens 
passed Contract ERC1155PresetMinterPauser Contract interface AccessControlEnumerable ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract ERC1155PresetMinterPauser Contract interface AccessControlEnumerable ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract ERC1155PresetMinterPauser Contract interface AccessControlEnumerable getRoleMember bytes32 uint256 has to be implemented 
passed Contract ERC1155PresetMinterPauser Contract interface AccessControlEnumerable getRoleMemberCount bytes32 has to be implemented 
passed Contract ERC1155PresetMinterPauser Contract interface AccessControl ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract ERC1155PresetMinterPauser Contract interface AccessControl ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract ERC1155PresetMinterPauser Contract interface AccessControl getRoleAdmin bytes32 has to be implemented 
passed Contract ERC1155PresetMinterPauser Contract interface AccessControl grantRole bytes32 address has to be implemented 
passed Contract ERC1155PresetMinterPauser Contract interface AccessControl hasRole bytes32 address has to be implemented 
passed Contract ERC1155PresetMinterPauser Contract interface AccessControl renounceRole bytes32 address has to be implemented 
passed Contract ERC1155PresetMinterPauser Contract interface AccessControl revokeRole bytes32 address has to be implemented 
passed Contract ERC1155PresetMinterPauser Contract interface ERC1155 balanceOf address uint256 has to be implemented 
passed Contract ERC1155PresetMinterPauser Contract interface ERC1155 balanceOfBatch address uint256 has to be implemented 
passed Contract ERC1155PresetMinterPauser Contract interface ERC1155 ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract ERC1155PresetMinterPauser Contract interface ERC1155 ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract ERC1155PresetMinterPauser Contract interface ERC1155 isApprovedForAll address address has to be implemented 
passed Contract ERC1155PresetMinterPauser Contract interface ERC1155 safeBatchTransferFrom address address uint256 uint256 bytes has to be implemented 
passed Contract ERC1155PresetMinterPauser Contract interface ERC1155 safeTransferFrom address address uint256 uint256 bytes has to be implemented 
passed Contract ERC1155PresetMinterPauser Contract interface ERC1155 setApprovalForAll address bool has to be implemented 
passed Contract ERC1155PresetMinterPauser deployer has the default admin role 
passed Contract ERC1155PresetMinterPauser deployer has the minter role 
passed Contract ERC1155PresetMinterPauser deployer has the pauser role 
passed Contract ERC1155PresetMinterPauser minter and pauser role admin is the default admin 
passed Contract ERC1155PresetMinterPauser minting deployer can mint tokens 
passed Contract ERC1155PresetMinterPauser minting other accounts cannot mint tokens 
passed Contract ERC1155PresetMinterPauser pausing cannot mint while paused 
passed Contract ERC1155PresetMinterPauser pausing deployer can pause 
passed Contract ERC1155PresetMinterPauser pausing deployer can unpause 
passed Contract ERC1155PresetMinterPauser pausing other accounts cannot pause 
passed Contract ERC1155PresetMinterPauser pausing other accounts cannot unpause 
passed Contract ERC1155Supply after burn batch exist 
passed Contract ERC1155Supply after burn batch totalSupply 
passed Contract ERC1155Supply after burn single exist 
passed Contract ERC1155Supply after burn single totalSupply 
passed Contract ERC1155Supply after mint batch exist 
passed Contract ERC1155Supply after mint batch totalSupply 
passed Contract ERC1155Supply after mint single exist 
passed Contract ERC1155Supply after mint single totalSupply 
passed Contract ERC1155Supply before mint exist 
passed Contract ERC1155Supply before mint totalSupply 
broken Contract ERC165Checker ERC165 missing return data does not support mock interface via getSupportedInterfaces 
broken Contract ERC165Checker ERC165 missing return data does not support mock interface via supportsAllInterfaces 
passed Contract ERC165Checker ERC165 missing return data does not support ERC165 
passed Contract ERC165Checker ERC165 missing return data does not support mock interface via supportsInterface 
broken Contract ERC165Checker ERC165 not supported does not support ERC165 
passed Contract ERC165 Contract interface ERC165 ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract ERC165 Contract interface ERC165 ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract ERC165 Contract interface ERC165 supportsInterface bytes4 has to be implemented 
broken Contract ERC165Storage Contract interface ERC165 ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract ERC165Storage Contract interface ERC165 ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract ERC165Storage does not allow 0xffffffff 
passed Contract ERC165Storage register interface 
passed Contract ERC1820Implementer with no registered interfaces returns false when interface implementation is queried 
failed Contract ERC1820Implementer with no registered interfaces reverts when attempting to set as implementer in the registry 
broken Contract ERC1820Implementer with registered interfaces can be set as an implementer for supported interfaces in the registry 
passed Contract ERC1820Implementer with registered interfaces returns false when interface implementation for non supported addresses is queried 
passed Contract ERC1820Implementer with registered interfaces returns false when interface implementation for non supported interfaces is queried 
passed Contract ERC1820Implementer with registered interfaces returns true when interface implementation is queried 
failed Contract ERC20 after each hook for returns the total amount of tokens 
passed Contract ERC20 approve when the owner is the zero address reverts 
passed Contract ERC20 approve when the spender is not the zero address when the sender does not have enough balance emits an
passed Contract ERC20 approve when the spender is not the zero address when the sender does not have enough balance emits an
passed Contract ERC20 approve when the spender is not the zero address when the sender does not have enough balance when the
passed Contract ERC20 approve when the spender is not the zero address when the sender does not have enough balance when the
passed Contract ERC20 approve when the spender is not the zero address when the sender does not have enough balance when there
passed Contract ERC20 approve when the spender is not the zero address when the sender does not have enough balance when there
passed Contract ERC20 approve when the spender is not the zero address when the sender has enough balance emits an approval event
passed Contract ERC20 approve when the spender is not the zero address when the sender has enough balance emits an approval event
passed Contract ERC20 approve when the spender is not the zero address when the sender has enough balance when there was no
passed Contract ERC20 approve when the spender is not the zero address when the sender has enough balance when there was no
passed Contract ERC20 approve when the spender is not the zero address when the sender has enough balance when the spender had
passed Contract ERC20 approve when the spender is not the zero address when the sender has enough balance when the spender had
passed Contract ERC20 approve when the spender is the zero address reverts 
passed Contract ERC20 approve when the spender is the zero address reverts 
passed Contract ERC20 balanceOf when the requested account has no tokens returns zero 
passed Contract ERC20 balanceOf when the requested account has some tokens returns the total amount of tokens 
passed Contract ERC20Burnable burnFrom on success for a non zero amount burns the requested amount 
passed Contract ERC20Burnable burnFrom on success for a non zero amount decrements allowance 
passed Contract ERC20Burnable burnFrom on success for a non zero amount emits a transfer event 
passed Contract ERC20Burnable burnFrom on success for a zero amount burns the requested amount 
passed Contract ERC20Burnable burnFrom on success for a zero amount decrements allowance 
passed Contract ERC20Burnable burnFrom on success for a zero amount emits a transfer event 
passed Contract ERC20Burnable burnFrom when the given amount is greater than the allowance reverts 
passed Contract ERC20Burnable burnFrom when the given amount is greater than the balance of the sender reverts 
passed Contract ERC20Burnable burn when the given amount is greater than the balance of the sender reverts 
passed Contract ERC20Burnable burn when the given amount is not greater than balance of the sender for a non zero amount burns
passed Contract ERC20Burnable burn when the given amount is not greater than balance of the sender for a non zero amount emits
passed Contract ERC20Burnable burn when the given amount is not greater than balance of the sender for a zero amount burns the
passed Contract ERC20Burnable burn when the given amount is not greater than balance of the sender for a zero amount emits a
passed Contract ERC20 burn for a non zero account for entire balance decrements initialHolder balance 
passed Contract ERC20 burn for a non zero account for entire balance decrements totalSupply 
passed Contract ERC20 burn for a non zero account for entire balance emits Transfer event 
passed Contract ERC20 burn for a non zero account for less amount than balance decrements initialHolder balance 
passed Contract ERC20 burn for a non zero account for less amount than balance decrements totalSupply 
passed Contract ERC20 burn for a non zero account for less amount than balance emits Transfer event 
passed Contract ERC20 burn for a non zero account rejects burning more than balance 
passed Contract ERC20 burn rejects a null account 
passed Contract ERC20Capped once deployed capped token fails to mint after cap is reached 
passed Contract ERC20Capped once deployed capped token fails to mint if the amount exceeds the cap 
passed Contract ERC20Capped once deployed capped token mints when amount is less than cap 
passed Contract ERC20Capped once deployed capped token starts with the correct cap 
passed Contract ERC20Capped requires a non zero cap 
passed Contract ERC20 decrease allowance when the spender is not the zero address when the sender does not have enough balance when
passed Contract ERC20 decrease allowance when the spender is not the zero address when the sender does not have enough balance when
passed Contract ERC20 decrease allowance when the spender is not the zero address when the sender does not have enough balance when
passed Contract ERC20 decrease allowance when the spender is not the zero address when the sender does not have enough balance when
passed Contract ERC20 decrease allowance when the spender is not the zero address when the sender does not have enough balance when
passed Contract ERC20 decrease allowance when the spender is not the zero address when the sender has enough balance when there was
passed Contract ERC20 decrease allowance when the spender is not the zero address when the sender has enough balance when the spender
passed Contract ERC20 decrease allowance when the spender is not the zero address when the sender has enough balance when the spender
passed Contract ERC20 decrease allowance when the spender is not the zero address when the sender has enough balance when the spender
passed Contract ERC20 decrease allowance when the spender is not the zero address when the sender has enough balance when the spender
passed Contract ERC20 decrease allowance when the spender is the zero address reverts 
passed Contract ERC20 deposit missing approval 
passed Contract ERC20 deposit missing balance 
passed Contract ERC20 deposit to other account 
passed Contract ERC20 deposit valid 
broken Contract ERC20 erc20 behaviour total supply returns the total amount of tokens 
passed Contract ERC20FlashMint flashFee token match 
passed Contract ERC20FlashMint flashFee token mismatch 
passed Contract ERC20FlashMint flashLoan missing approval 
passed Contract ERC20FlashMint flashLoan missing return value 
failed Contract ERC20FlashMint flashLoan more than maxFlashLoan 
passed Contract ERC20FlashMint flashLoan success 
passed Contract ERC20FlashMint flashLoan unavailable funds 
passed Contract ERC20FlashMint maxFlashLoan token match 
passed Contract ERC20FlashMint maxFlashLoan token mismatch 
passed Contract ERC20 has 18 decimals 
passed Contract ERC20 has a name 
passed Contract ERC20 has a symbol 
passed Contract ERC20 has underlying 
passed Contract ERC20 increase allowance when the spender is not the zero address when the sender does not have enough balance emits
passed Contract ERC20 increase allowance when the spender is not the zero address when the sender does not have enough balance when
passed Contract ERC20 increase allowance when the spender is not the zero address when the sender does not have enough balance when
passed Contract ERC20 increase allowance when the spender is not the zero address when the sender has enough balance emits an approval
passed Contract ERC20 increase allowance when the spender is not the zero address when the sender has enough balance when there was
passed Contract ERC20 increase allowance when the spender is not the zero address when the sender has enough balance when the spender
passed Contract ERC20 increase allowance when the spender is the zero address reverts 
passed Contract ERC20 mint for a non zero account emits Transfer event 
passed Contract ERC20 mint for a non zero account increments recipient balance 
passed Contract ERC20 mint for a non zero account increments totalSupply 
passed Contract ERC20 mint rejects a null account 
passed Contract ERC20Pausable pausable token burn allows to burn when paused and then unpaused 
passed Contract ERC20Pausable pausable token burn allows to burn when unpaused 
passed Contract ERC20Pausable pausable token burn reverts when trying to burn when paused 
passed Contract ERC20Pausable pausable token mint allows to mint when paused and then unpaused 
passed Contract ERC20Pausable pausable token mint allows to mint when unpaused 
passed Contract ERC20Pausable pausable token mint reverts when trying to mint when paused 
passed Contract ERC20Pausable pausable token transfer allows to transfer when paused and then unpaused 
passed Contract ERC20Pausable pausable token transfer allows to transfer when unpaused 
passed Contract ERC20Pausable pausable token transfer from allows to transfer from when unpaused 
passed Contract ERC20Pausable pausable token transfer from allows to transfer when paused and then unpaused 
passed Contract ERC20Pausable pausable token transfer from reverts when trying to transfer from when paused 
passed Contract ERC20Pausable pausable token transfer reverts when trying to transfer when paused 
passed Contract ERC20Permit domain separator 
passed Contract ERC20Permit initial nonce is 0 
passed Contract ERC20Permit permit accepts owner signature 
passed Contract ERC20Permit permit rejects expired permit 
passed Contract ERC20Permit permit rejects other signature 
passed Contract ERC20Permit permit rejects reused signature 
passed Contract ERC20PresetFixedSupply burning decrements totalSupply 
passed Contract ERC20PresetFixedSupply burning holders can burn their tokens 
passed Contract ERC20PresetFixedSupply deployer has the balance equal to initial supply 
passed Contract ERC20PresetFixedSupply total supply is equal to initial supply 
passed Contract ERC20 recover nothing to recover 
passed Contract ERC20 recover something to recover 
passed Contract ERC20 set decimals can set decimals during construction 
passed Contract ERC20Snapshot balanceOfAt reverts with a not yet created snapshot id 
passed Contract ERC20Snapshot balanceOfAt reverts with a snapshot id of 0 
passed Contract ERC20Snapshot balanceOfAt with initial snapshot with balance changes after the snapshot returns the balances before the changes 
passed Contract ERC20Snapshot balanceOfAt with initial snapshot with balance changes after the snapshot with a second snapshot after supply changes snapshots return
passed Contract ERC20Snapshot balanceOfAt with initial snapshot with balance changes after the snapshot with multiple snapshots after supply changes all posterior snapshots
passed Contract ERC20Snapshot balanceOfAt with initial snapshot with no balance changes after the snapshot returns the current balance for all accounts 
passed Contract ERC20Snapshot snapshot creates increasing snapshots ids starting from 1 
passed Contract ERC20Snapshot snapshot emits a snapshot event 
passed Contract ERC20Snapshot totalSupplyAt reverts with a not yet created snapshot id 
passed Contract ERC20Snapshot totalSupplyAt reverts with a snapshot id of 0 
passed Contract ERC20Snapshot totalSupplyAt with initial snapshot with no supply changes after the snapshot returns the current total supply 
passed Contract ERC20Snapshot totalSupplyAt with initial snapshot with supply changes after the snapshot returns the total supply before the changes 
passed Contract ERC20Snapshot totalSupplyAt with initial snapshot with supply changes after the snapshot with a second snapshot after supply changes snapshots return
passed Contract ERC20Snapshot totalSupplyAt with initial snapshot with supply changes after the snapshot with multiple snapshots after supply changes all posterior snapshots
passed Contract ERC20 total supply returns the total amount of tokens 
passed Contract ERC20 transfer from when the token owner is not the zero address when the recipient is not the zero address
passed Contract ERC20 transfer from when the token owner is not the zero address when the recipient is not the zero address
passed Contract ERC20 transfer from when the token owner is not the zero address when the recipient is not the zero address
passed Contract ERC20 transfer from when the token owner is not the zero address when the recipient is not the zero address
passed Contract ERC20 transfer from when the token owner is not the zero address when the recipient is not the zero address
passed Contract ERC20 transfer from when the token owner is not the zero address when the recipient is not the zero address
passed Contract ERC20 transfer from when the token owner is not the zero address when the recipient is not the zero address
passed Contract ERC20 transfer from when the token owner is not the zero address when the recipient is the zero address reverts
passed Contract ERC20 transfer from when the token owner is the zero address reverts 
passed Contract ERC20 transfer when the recipient is not the zero address when the sender does not have enough balance reverts 
passed Contract ERC20 transfer when the recipient is not the zero address when the sender does not have enough balance reverts 
passed Contract ERC20 transfer when the recipient is not the zero address when the sender transfers all balance emits a transfer event
passed Contract ERC20 transfer when the recipient is not the zero address when the sender transfers all balance emits a transfer event
passed Contract ERC20 transfer when the recipient is not the zero address when the sender transfers all balance transfers the requested amount
passed Contract ERC20 transfer when the recipient is not the zero address when the sender transfers all balance transfers the requested amount
passed Contract ERC20 transfer when the recipient is not the zero address when the sender transfers zero tokens emits a transfer event
passed Contract ERC20 transfer when the recipient is not the zero address when the sender transfers zero tokens emits a transfer event
passed Contract ERC20 transfer when the recipient is not the zero address when the sender transfers zero tokens transfers the requested amount
passed Contract ERC20 transfer when the recipient is not the zero address when the sender transfers zero tokens transfers the requested amount
passed Contract ERC20 transfer when the recipient is the zero address reverts 
passed Contract ERC20 transfer when the recipient is the zero address reverts 
passed Contract ERC20 transfer when the sender is the zero address reverts 
skipped Contract ERC20Votes change delegation call 
skipped Contract ERC20VotesComp change delegation call 
skipped Contract ERC20VotesComp Compound test suite balanceOf grants to initial account 
skipped Contract ERC20VotesComp Compound test suite getPriorVotes generally returns the voting balance at the appropriate checkpoint 
skipped Contract ERC20VotesComp Compound test suite getPriorVotes returns 0 if there are no checkpoints 
skipped Contract ERC20VotesComp Compound test suite getPriorVotes returns the latest block if last checkpoint block 
skipped Contract ERC20VotesComp Compound test suite getPriorVotes returns zero if first checkpoint block 
skipped Contract ERC20VotesComp Compound test suite getPriorVotes reverts if block number current block 
skipped Contract ERC20VotesComp Compound test suite numCheckpoints does not add more than one checkpoint in a block 
skipped Contract ERC20VotesComp Compound test suite numCheckpoints returns the number of checkpoints for a delegate 
skipped Contract ERC20VotesComp domain separator 
skipped Contract ERC20VotesComp getPastTotalSupply generally returns the voting balance at the appropriate checkpoint 
skipped Contract ERC20VotesComp getPastTotalSupply returns 0 if there are no checkpoints 
skipped Contract ERC20VotesComp getPastTotalSupply returns the latest block if last checkpoint block 
skipped Contract ERC20VotesComp getPastTotalSupply returns zero if first checkpoint block 
skipped Contract ERC20VotesComp getPastTotalSupply reverts if block number current block 
skipped Contract ERC20VotesComp initial nonce is 0 
skipped Contract ERC20VotesComp minting restriction 
skipped Contract ERC20Votes Compound test suite balanceOf grants to initial account 
skipped Contract ERC20Votes Compound test suite getPastVotes generally returns the voting balance at the appropriate checkpoint 
skipped Contract ERC20Votes Compound test suite getPastVotes returns 0 if there are no checkpoints 
skipped Contract ERC20Votes Compound test suite getPastVotes returns the latest block if last checkpoint block 
skipped Contract ERC20Votes Compound test suite getPastVotes returns zero if first checkpoint block 
skipped Contract ERC20Votes Compound test suite getPastVotes reverts if block number current block 
skipped Contract ERC20Votes Compound test suite numCheckpoints does not add more than one checkpoint in a block 
skipped Contract ERC20Votes Compound test suite numCheckpoints returns the number of checkpoints for a delegate 
skipped Contract ERC20VotesComp set delegation call delegation with balance 
skipped Contract ERC20VotesComp set delegation call delegation without balance 
skipped Contract ERC20VotesComp set delegation with signature accept signed delegation 
skipped Contract ERC20VotesComp set delegation with signature rejects bad delegatee 
skipped Contract ERC20VotesComp set delegation with signature rejects bad nonce 
skipped Contract ERC20VotesComp set delegation with signature rejects expired permit 
skipped Contract ERC20VotesComp set delegation with signature rejects reused signature 
skipped Contract ERC20VotesComp transfers full delegation 
skipped Contract ERC20VotesComp transfers no delegation 
skipped Contract ERC20VotesComp transfers receiver delegation 
skipped Contract ERC20VotesComp transfers sender delegation 
skipped Contract ERC20Votes domain separator 
skipped Contract ERC20Votes getPastTotalSupply generally returns the voting balance at the appropriate checkpoint 
skipped Contract ERC20Votes getPastTotalSupply returns 0 if there are no checkpoints 
skipped Contract ERC20Votes getPastTotalSupply returns the latest block if last checkpoint block 
skipped Contract ERC20Votes getPastTotalSupply returns zero if first checkpoint block 
skipped Contract ERC20Votes getPastTotalSupply reverts if block number current block 
skipped Contract ERC20Votes initial nonce is 0 
skipped Contract ERC20Votes minting restriction 
skipped Contract ERC20Votes set delegation call delegation with balance 
skipped Contract ERC20Votes set delegation call delegation without balance 
skipped Contract ERC20Votes set delegation with signature accept signed delegation 
skipped Contract ERC20Votes set delegation with signature rejects bad delegatee 
skipped Contract ERC20Votes set delegation with signature rejects bad nonce 
skipped Contract ERC20Votes set delegation with signature rejects expired permit 
skipped Contract ERC20Votes set delegation with signature rejects reused signature 
skipped Contract ERC20Votes transfers full delegation 
skipped Contract ERC20Votes transfers no delegation 
skipped Contract ERC20Votes transfers receiver delegation 
skipped Contract ERC20Votes transfers sender delegation 
passed Contract ERC20 withdraw entire balance 
passed Contract ERC20 withdraw missing balance 
passed Contract ERC20 withdraw to other account 
passed Contract ERC20 withdraw valid 
passed Contract ERC2771Context recognize trusted forwarder 
passed Contract ERC2771Context when called directly msgData returns the transaction data when called from an EOA 
passed Contract ERC2771Context when called directly msgData returns the transaction sender when from another contract 
passed Contract ERC2771Context when called directly msgSender returns the transaction sender when called from an EOA 
passed Contract ERC2771Context when called directly msgSender returns the transaction sender when from another contract 
passed Contract ERC2771Context when receiving a relayed call msgData returns the relayed transaction original data 
passed Contract ERC2771Context when receiving a relayed call msgSender returns the relayed transaction original sender 
passed Contract ERC721Enumerable Contract interface ERC165 ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract ERC721Enumerable Contract interface ERC165 ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract ERC721Enumerable Contract interface ERC165 supportsInterface bytes4 has to be implemented 
broken Contract ERC721Enumerable Contract interface ERC721 ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract ERC721Enumerable Contract interface ERC721 ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract ERC721Pausable when token is paused balanceOf returns the amount of tokens owned by the given address 
passed Contract ERC721Pausable when token is paused exists returns token existence 
passed Contract ERC721Pausable when token is paused getApproved returns approved address 
passed Contract ERC721Pausable when token is paused isApprovedForAll returns the approval of the operator 
passed Contract ERC721Pausable when token is paused ownerOf returns the amount of tokens owned by the given address 
passed Contract ERC721Pausable when token is paused reverts when trying to burn 
passed Contract ERC721Pausable when token is paused reverts when trying to mint 
passed Contract ERC721Pausable when token is paused reverts when trying to safeTransferFrom 
passed Contract ERC721Pausable when token is paused reverts when trying to safeTransferFrom with data 
passed Contract ERC721Pausable when token is paused reverts when trying to transferFrom 
passed Contract ERC721PresetMinterPauserAutoId Contract interface ERC721 approve address uint256 has to be implemented 
passed Contract ERC721PresetMinterPauserAutoId Contract interface ERC721 balanceOf address has to be implemented 
broken Contract ERC721PresetMinterPauserAutoId Contract interface ERC721Enumerable ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract ERC721PresetMinterPauserAutoId Contract interface ERC721 ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract ERC721PresetMinterPauserAutoId Contract interface ERC721 ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract ERC721PresetMinterPauserAutoId Contract interface ERC721 getApproved uint256 has to be implemented 
passed Contract ERC721PresetMinterPauserAutoId Contract interface ERC721 isApprovedForAll address address has to be implemented 
passed Contract ERC721PresetMinterPauserAutoId Contract interface ERC721 ownerOf uint256 has to be implemented 
passed Contract ERC721PresetMinterPauserAutoId Contract interface ERC721 safeTransferFrom address address uint256 bytes has to be implemented 
passed Contract ERC721PresetMinterPauserAutoId Contract interface ERC721 safeTransferFrom address address uint256 has to be implemented 
passed Contract ERC721PresetMinterPauserAutoId Contract interface ERC721 setApprovalForAll address bool has to be implemented 
passed Contract ERC721PresetMinterPauserAutoId Contract interface ERC721 transferFrom address address uint256 has to be implemented 
passed Contract ERC721PresetMinterPauserAutoId deployer has the default admin role 
passed Contract ERC721PresetMinterPauserAutoId deployer has the minter role 
passed Contract ERC721PresetMinterPauserAutoId minter role admin is the default admin 
passed Contract ERC721PresetMinterPauserAutoId token has correct name 
passed Contract ERC721PresetMinterPauserAutoId token has correct symbol 
broken Contract ERC777PresetFixedSupply returns the name 
broken Contract ERC777 relative order of hooks send 
broken Contract ERC777 with default operators does not emit AuthorizedOperator events for default operators 
broken Contract ERC777 with no default operators default operators list is empty 
broken Contract Escrow as an escrow deposits can track deposits to multiple accounts 
failed Contract Escrow as an escrow deposits can accept a single deposit 
failed Contract Escrow as an escrow deposits can add multiple deposits on a single account 
passed Contract Escrow as an escrow deposits can accept an empty deposit 
passed Contract Escrow as an escrow deposits emits a deposited event 
passed Contract Escrow as an escrow deposits only the owner can deposit 
skipped Contract GovernorCompatibilityBravo deployment check 
broken Contract GovernorCompatibilityBravo nominal run 
skipped Contract GovernorComp deployment check 
passed Contract GovernorComp voting with comp token run 
passed Contract Governor Contract interface ERC165 ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract Governor Contract interface ERC165 ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract Governor Contract interface ERC165 supportsInterface bytes4 has to be implemented 
passed Contract Governor Contract interface Governor castVoteBySig uint256 uint8 uint8 bytes32 bytes32 has to be implemented 
passed Contract Governor Contract interface Governor castVote uint256 uint8 has to be implemented 
passed Contract Governor Contract interface Governor castVoteWithReason uint256 uint8 string has to be implemented 
passed Contract Governor Contract interface Governor COUNTING MODE has to be implemented 
passed Contract Governor Contract interface Governor ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract Governor Contract interface Governor ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract Governor Contract interface Governor execute address uint256 bytes bytes32 has to be implemented 
passed Contract Governor Contract interface Governor getVotes address uint256 has to be implemented 
passed Contract Governor Contract interface Governor hashProposal address uint256 bytes bytes32 has to be implemented 
passed Contract Governor Contract interface Governor hasVoted uint256 address has to be implemented 
passed Contract Governor Contract interface Governor name has to be implemented 
passed Contract Governor Contract interface Governor proposalDeadline uint256 has to be implemented 
passed Contract Governor Contract interface Governor proposalSnapshot uint256 has to be implemented 
passed Contract Governor Contract interface Governor propose address uint256 bytes string has to be implemented 
passed Contract Governor Contract interface Governor quorum uint256 has to be implemented 
passed Contract Governor Contract interface Governor state uint256 has to be implemented 
passed Contract Governor Contract interface Governor version has to be implemented 
passed Contract Governor Contract interface Governor votingDelay has to be implemented 
passed Contract Governor Contract interface Governor votingPeriod has to be implemented 
skipped Contract Governor deployment check 
broken Contract Governor scenario double cast run 
broken Contract Governor scenario duplicate executed proposal run 
passed Contract Governor scenario duplicate pending proposal run 
broken Contract Governor scenario Invalid vote type run 
passed Contract Governor scenario missing proposal run 
broken Contract Governor scenario nominal after each hook for run 
failed Contract Governor scenario nominal run 
broken Contract Governor scenario quorum not reached run 
passed Contract Governor scenario receiver revert without reason run 
broken Contract Governor scenario receiver revert with reason run 
broken Contract Governor scenario score not reached run 
broken Contract Governor scenario send ethers after each hook for run 
failed Contract Governor scenario send ethers run 
passed Contract Governor scenario vote with signature run 
broken Contract GovernorTimelockCompound cancel before queue prevents scheduling run 
passed Contract GovernorTimelockCompound Contract interface ERC165 ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract GovernorTimelockCompound Contract interface ERC165 ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract GovernorTimelockCompound Contract interface ERC165 supportsInterface bytes4 has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor castVoteBySig uint256 uint8 uint8 bytes32 bytes32 has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor castVote uint256 uint8 has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor castVoteWithReason uint256 uint8 string has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor COUNTING MODE has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract GovernorTimelockCompound Contract interface Governor ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract GovernorTimelockCompound Contract interface Governor execute address uint256 bytes bytes32 has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor getVotes address uint256 has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor hashProposal address uint256 bytes bytes32 has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor hasVoted uint256 address has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor name has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor proposalDeadline uint256 has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor proposalSnapshot uint256 has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor propose address uint256 bytes string has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor quorum uint256 has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor state uint256 has to be implemented 
passed Contract GovernorTimelockCompound Contract interface GovernorTimelock ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract GovernorTimelockCompound Contract interface GovernorTimelock ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract GovernorTimelockCompound Contract interface GovernorTimelock proposalEta uint256 has to be implemented 
passed Contract GovernorTimelockCompound Contract interface GovernorTimelock queue address uint256 bytes bytes32 has to be implemented 
passed Contract GovernorTimelockCompound Contract interface GovernorTimelock timelock has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor version has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor votingDelay has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor votingPeriod has to be implemented 
passed Contract GovernorTimelockCompound deplicated underlying call run 
skipped Contract GovernorTimelockCompound doesn t accept ether transfers 
broken Contract GovernorTimelockCompound nominal after each hook for run 
broken Contract GovernorTimelockCompound nominal run 
passed Contract GovernorTimelockCompound not queued run 
skipped Contract GovernorTimelockCompound post deployment check 
failed Contract GovernorTimelockCompound re queue re execute after each hook for run 
broken Contract GovernorTimelockCompound re queue re execute run 
failed Contract GovernorTimelockCompound to early after each hook for run 
broken Contract GovernorTimelockCompound to early run 
failed Contract GovernorTimelockCompound to late after each hook for run 
broken Contract GovernorTimelockCompound to late run 
passed Contract GovernorTimelockControl Contract interface ERC165 ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract GovernorTimelockControl Contract interface ERC165 ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract GovernorTimelockControl Contract interface ERC165 supportsInterface bytes4 has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor castVoteBySig uint256 uint8 uint8 bytes32 bytes32 has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor castVote uint256 uint8 has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor castVoteWithReason uint256 uint8 string has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor COUNTING MODE has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract GovernorTimelockControl Contract interface Governor ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract GovernorTimelockControl Contract interface Governor execute address uint256 bytes bytes32 has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor getVotes address uint256 has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor hashProposal address uint256 bytes bytes32 has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor hasVoted uint256 address has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor name has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor proposalDeadline uint256 has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor proposalSnapshot uint256 has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor propose address uint256 bytes string has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor quorum uint256 has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor state uint256 has to be implemented 
passed Contract GovernorTimelockControl Contract interface GovernorTimelock ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract GovernorTimelockControl Contract interface GovernorTimelock ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract GovernorTimelockControl Contract interface GovernorTimelock proposalEta uint256 has to be implemented 
passed Contract GovernorTimelockControl Contract interface GovernorTimelock queue address uint256 bytes bytes32 has to be implemented 
passed Contract GovernorTimelockControl Contract interface GovernorTimelock timelock has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor version has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor votingDelay has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor votingPeriod has to be implemented 
skipped Contract GovernorTimelockControl doesn t accept ether transfers 
broken Contract GovernorTimelockControl executed by other proposer after each hook for run 
broken Contract GovernorTimelockControl executed by other proposer run 
broken Contract GovernorTimelockControl nominal after each hook for run 
broken Contract GovernorTimelockControl nominal run 
passed Contract GovernorTimelockControl not queued run 
skipped Contract GovernorTimelockControl post deployment check 
broken Contract GovernorTimelockControl re queue re execute run 
passed Contract GovernorTimelockControl to early run 
skipped Contract GovernorVotesQuorumFraction deployment check 
passed Contract GovernorVotesQuorumFraction quroum not reached run 
passed Contract GovernorVotesQuorumFraction update quorum over the maximum run 
broken Contract GovernorVotesQuorumFraction update quorum ratio through proposal after each hook for run 
broken Contract GovernorVotesQuorumFraction update quorum ratio through proposal run 
passed Contract Initializable basic testing without inheritance after initialize initializer does not run again 
passed Contract Initializable basic testing without inheritance after initialize initializer has run 
passed Contract Initializable basic testing without inheritance after nested initialize initializer has run 
passed Contract Initializable basic testing without inheritance before initialize initializer has not run 
passed Contract Initializable complex testing with inheritance initializes child 
passed Contract Initializable complex testing with inheritance initializes father 
passed Contract Initializable complex testing with inheritance initializes gramps 
passed Contract Initializable complex testing with inheritance initializes human 
passed Contract Initializable complex testing with inheritance initializes mother 
passed Contract MerkleProof verify returns false for a Merkle proof of invalid length 
passed Contract MerkleProof verify returns false for an invalid Merkle proof 
passed Contract MerkleProof verify returns true for a valid Merkle proof 
passed Contract MinimalForwarder with message execute invalid signature tampered data 
passed Contract MinimalForwarder with message execute invalid signature tampered from 
passed Contract MinimalForwarder with message execute invalid signature tampered nonce 
passed Contract MinimalForwarder with message execute invalid signature tampered signature 
passed Contract MinimalForwarder with message execute invalid signature tampered to 
passed Contract MinimalForwarder with message execute invalid signature tampered value 
passed Contract MinimalForwarder with message execute valid signature success 
passed Contract MinimalForwarder with message verify invalid signature tampered data 
passed Contract MinimalForwarder with message verify invalid signature tampered from 
passed Contract MinimalForwarder with message verify invalid signature tampered nonce 
passed Contract MinimalForwarder with message verify invalid signature tampered signature 
passed Contract MinimalForwarder with message verify invalid signature tampered to 
passed Contract MinimalForwarder with message verify invalid signature tampered value 
passed Contract MinimalForwarder with message verify valid signature success 
passed Contract Ownable has an owner 
passed Contract Ownable renounce ownership loses owner after renouncement 
passed Contract Ownable renounce ownership prevents non owners from renouncement 
passed Contract Ownable transfer ownership changes owner after transfer 
passed Contract Ownable transfer ownership guards ownership against stuck state 
passed Contract Ownable transfer ownership prevents non owners from transferring 
passed Contract Pausable when unpaused cannot take drastic measure in non pause 
passed Contract Pausable when unpaused can perform normal process in non pause 
passed Contract Pausable when unpaused when paused can take a drastic measure in a pause 
passed Contract Pausable when unpaused when paused cannot perform normal process in pause 
passed Contract Pausable when unpaused when paused emits a Paused event 
passed Contract Pausable when unpaused when paused reverts when re pausing 
passed Contract Pausable when unpaused when paused unpausing is unpausable by the pauser 
passed Contract Pausable when unpaused when paused unpausing when unpaused emits an Unpaused event 
passed Contract Pausable when unpaused when paused unpausing when unpaused reverts when re unpausing 
passed Contract Pausable when unpaused when paused unpausing when unpaused should prevent drastic measure 
passed Contract Pausable when unpaused when paused unpausing when unpaused should resume allowing normal process 
passed Contract ProxyAdmin changeProxyAdmin changes proxy admin 
passed Contract ProxyAdmin changeProxyAdmin fails to change proxy admin if its not the proxy owner 
failed Contract ProxyAdmin getProxyAdmin call to invalid proxy 
passed Contract ProxyAdmin getProxyAdmin returns proxyAdmin as admin of the proxy 
failed Contract ProxyAdmin getProxyImplementation call to invalid proxy 
passed Contract ProxyAdmin getProxyImplementation returns proxy implementation address 
passed Contract ProxyAdmin has an owner 
passed Contract ProxyAdmin upgradeAndCall with authorized account with invalid callData fails to upgrade 
passed Contract ProxyAdmin upgradeAndCall with authorized account with valid callData upgrades implementation 
passed Contract ProxyAdmin upgradeAndCall with unauthorized account fails to upgrade 
passed Contract ProxyAdmin upgrade with authorized account upgrades implementation 
passed Contract ProxyAdmin upgrade with unauthorized account fails to upgrade 
broken Contract PullPayment payments can record an async payment correctly 
broken Contract PullPayment Uncaught error outside test suite 
passed Contract ReentrancyGuard does not allow indirect local recursion 
passed Contract ReentrancyGuard does not allow local recursion 
passed Contract ReentrancyGuard does not allow remote callback 
passed Contract ReentrancyGuard nonReentrant function can be called 
broken Contract SafeCast toUint8 downcasts 0 
failed Contract SafeERC20 with address that has no contract code reverts on decreaseAllowance 
failed Contract SafeERC20 with address that has no contract code reverts on increaseAllowance 
passed Contract SafeERC20 with address that has no contract code reverts on approve 
passed Contract SafeERC20 with address that has no contract code reverts on transfer 
passed Contract SafeERC20 with address that has no contract code reverts on transferFrom 
passed Contract SafeERC20 with token that returns false on all calls reverts on approve 
passed Contract SafeERC20 with token that returns false on all calls reverts on decreaseAllowance 
passed Contract SafeERC20 with token that returns false on all calls reverts on increaseAllowance 
passed Contract SafeERC20 with token that returns false on all calls reverts on transfer 
passed Contract SafeERC20 with token that returns false on all calls reverts on transferFrom 
broken Contract SafeERC20 with token that returns no boolean values doesn t revert on transfer 
broken Contract SafeERC20 with token that returns true on all calls approvals with non zero allowance doesn t revert when approving a
broken Contract SafeERC20 with token that returns true on all calls approvals with non zero allowance doesn t revert when increasing the
passed Contract SafeERC20 with token that returns true on all calls approvals with non zero allowance reverts when approving a non zero
passed Contract SafeERC20 with token that returns true on all calls approvals with zero allowance doesn t revert when approving a non
passed Contract SafeERC20 with token that returns true on all calls approvals with zero allowance doesn t revert when approving a zero
passed Contract SafeERC20 with token that returns true on all calls approvals with zero allowance doesn t revert when increasing the allowance
passed Contract SafeERC20 with token that returns true on all calls approvals with zero allowance reverts when decreasing the allowance 
passed Contract SafeERC20 with token that returns true on all calls doesn t revert on transfer 
passed Contract SafeERC20 with token that returns true on all calls doesn t revert on transferFrom 
passed Contract SafeMath memory leakage add 
passed Contract SafeMath memory leakage div 
passed Contract SafeMath memory leakage mod 
passed Contract SafeMath memory leakage mul 
passed Contract SafeMath memory leakage sub 
passed Contract SafeMath with custom revert message div divides correctly 
passed Contract SafeMath with custom revert message div divides zero correctly 
passed Contract SafeMath with custom revert message div returns complete number result on non even division 
passed Contract SafeMath with custom revert message div reverts on division by zero 
passed Contract SafeMath with custom revert message mod modulos correctly when the dividend is a multiple of the divisor 
passed Contract SafeMath with custom revert message mod modulos correctly when the dividend is equal to the divisor 
passed Contract SafeMath with custom revert message mod modulos correctly when the dividend is larger than the divisor 
passed Contract SafeMath with custom revert message mod modulos correctly when the dividend is smaller than the divisor 
passed Contract SafeMath with custom revert message mod reverts with a 0 divisor 
passed Contract SafeMath with custom revert message sub reverts if subtraction result would be negative 
passed Contract SafeMath with custom revert message sub subtracts correctly 
failed Contract SafeMath with default revert message add reverts on addition overflow 
passed Contract SafeMath with default revert message add adds correctly 
failed Contract SafeMath with default revert message div reverts on division by zero 
passed Contract SafeMath with default revert message div divides correctly 
passed Contract SafeMath with default revert message div divides zero correctly 
passed Contract SafeMath with default revert message div returns complete number result on non even division 
failed Contract SafeMath with default revert message mod reverts with a 0 divisor 
passed Contract SafeMath with default revert message mod modulos correctly when the dividend is a multiple of the divisor 
passed Contract SafeMath with default revert message mod modulos correctly when the dividend is equal to the divisor 
passed Contract SafeMath with default revert message mod modulos correctly when the dividend is larger than the divisor 
passed Contract SafeMath with default revert message mod modulos correctly when the dividend is smaller than the divisor 
failed Contract SafeMath with default revert message mul reverts on multiplication overflow 
passed Contract SafeMath with default revert message mul multiplies by zero correctly 
passed Contract SafeMath with default revert message mul multiplies correctly 
failed Contract SafeMath with default revert message sub reverts if subtraction result would be negative 
passed Contract SafeMath with default revert message sub subtracts correctly 
passed Contract SafeMath with flag add adds correctly 
passed Contract SafeMath with flag add reverts on addition overflow 
passed Contract SafeMath with flag div divides correctly 
passed Contract SafeMath with flag div divides zero correctly 
passed Contract SafeMath with flag div returns complete number result on non even division 
passed Contract SafeMath with flag div reverts on division by zero 
passed Contract SafeMath with flag mod modulos correctly when the dividend is a multiple of the divisor 
passed Contract SafeMath with flag mod modulos correctly when the dividend is equal to the divisor 
passed Contract SafeMath with flag mod modulos correctly when the dividend is larger than the divisor 
passed Contract SafeMath with flag mod modulos correctly when the dividend is smaller than the divisor 
passed Contract SafeMath with flag mod reverts with a 0 divisor 
passed Contract SafeMath with flag mul multiplies by zero correctly 
passed Contract SafeMath with flag mul multiplies correctly 
passed Contract SafeMath with flag mul reverts on multiplication overflow 
passed Contract SafeMath with flag sub reverts if subtraction result would be negative 
passed Contract SafeMath with flag sub subtracts correctly 
passed Contract SignatureChecker ERC1271 EOA account with invalid signature 
passed Contract SignatureChecker ERC1271 EOA account with invalid signer 
passed Contract SignatureChecker ERC1271 EOA account with matching signer and signature 
passed Contract SignatureChecker ERC1271 ERC1271 wallet with invalid signature 
passed Contract SignatureChecker ERC1271 ERC1271 wallet with invalid signer 
passed Contract SignatureChecker ERC1271 ERC1271 wallet with matching signer and signature 
passed Contract SignedSafeMath add adds correctly if it does not overflow and the result is negative 
passed Contract SignedSafeMath add adds correctly if it does not overflow and the result is positive 
failed Contract SignedSafeMath add reverts on negative addition overflow 
failed Contract SignedSafeMath add reverts on positive addition overflow 
passed Contract SignedSafeMath div divides correctly 
passed Contract SignedSafeMath div divides zero correctly 
passed Contract SignedSafeMath div returns complete number result on non even division 
failed Contract SignedSafeMath div reverts on division by zero 
failed Contract SignedSafeMath div reverts on overflow negative second 
passed Contract SignedSafeMath mul multiplies by zero correctly 
passed Contract SignedSafeMath mul multiplies correctly 
failed Contract SignedSafeMath mul reverts on multiplication overflow positive operands 
failed Contract SignedSafeMath mul reverts when minimum integer is multiplied by 1 
failed Contract SignedSafeMath sub reverts on negative subtraction overflow 
failed Contract SignedSafeMath sub reverts on positive subtraction overflow 
passed Contract SignedSafeMath sub subtracts correctly if it does not overflow and the result is negative 
passed Contract SignedSafeMath sub subtracts correctly if it does not overflow and the result is positive 
passed Contract StorageSlot address storage slot get from other slot 
passed Contract StorageSlot address storage slot get from right slot 
passed Contract StorageSlot address storage slot set 
passed Contract StorageSlot boolean storage slot get from other slot 
passed Contract StorageSlot boolean storage slot get from right slot 
passed Contract StorageSlot boolean storage slot set 
passed Contract StorageSlot bytes32 storage slot get from other slot 
passed Contract StorageSlot bytes32 storage slot get from right slot 
passed Contract StorageSlot bytes32 storage slot set 
passed Contract StorageSlot uint256 storage slot get from other slot 
passed Contract StorageSlot uint256 storage slot get from right slot 
passed Contract StorageSlot uint256 storage slot set 
passed Contract Strings from uint256 decimal format converts 0 
passed Contract Strings from uint256 decimal format converts a positive number 
passed Contract Strings from uint256 decimal format converts MAX UINT256 
passed Contract Strings from uint256 fixed hex format converts a positive number long 
passed Contract Strings from uint256 fixed hex format converts a positive number short 
passed Contract Strings from uint256 fixed hex format converts MAX UINT256 
passed Contract Strings from uint256 hex format converts 0 
passed Contract Strings from uint256 hex format converts a positive number 
passed Contract Strings from uint256 hex format converts MAX UINT256 
skipped Contract TimelockController dependency can execute after dependency 
skipped Contract TimelockController dependency cannot execute before dependency 
skipped Contract TimelockController initial state 
skipped Contract TimelockController maintenance prevent unauthorized maintenance 
skipped Contract TimelockController maintenance timelock scheduled maintenance 
skipped Contract TimelockController methods batch execute partial execution 
skipped Contract TimelockController methods batch execute revert if operation is not scheduled 
skipped Contract TimelockController methods batch execute with scheduled operation on time executor can reveal 
skipped Contract TimelockController methods batch execute with scheduled operation on time length mismatch 1 
skipped Contract TimelockController methods batch execute with scheduled operation on time length mismatch 2 
skipped Contract TimelockController methods batch execute with scheduled operation on time length mismatch 3 
skipped Contract TimelockController methods batch execute with scheduled operation on time prevent non executor from revealing 
skipped Contract TimelockController methods batch execute with scheduled operation revert if execution comes too early 1 2 
skipped Contract TimelockController methods batch execute with scheduled operation revert if execution comes too early 2 2 
skipped Contract TimelockController methods batch schedule enforce minimum delay 
skipped Contract TimelockController methods batch schedule length of batch parameter must match 1 
skipped Contract TimelockController methods batch schedule prevent non proposer from commiting 
skipped Contract TimelockController methods batch schedule prevent overwritting active operation 
skipped Contract TimelockController methods batch schedule proposer can schedule 
skipped Contract TimelockController methods cancel cannot cancel invalid operation 
skipped Contract TimelockController methods cancel prevent non proposer from canceling 
skipped Contract TimelockController methods cancel proposer can cancel 
skipped Contract TimelockController methods operation hashing hashOperation 
skipped Contract TimelockController methods operation hashing hashOperationBatch 
skipped Contract TimelockController methods simple execute revert if operation is not scheduled 
skipped Contract TimelockController methods simple execute with scheduled operation on time executor can reveal 
skipped Contract TimelockController methods simple execute with scheduled operation on time prevent non executor from revealing 
skipped Contract TimelockController methods simple execute with scheduled operation revert if execution comes too early 1 2 
skipped Contract TimelockController methods simple execute with scheduled operation revert if execution comes too early 2 2 
skipped Contract TimelockController methods simple schedule enforce minimum delay 
skipped Contract TimelockController methods simple schedule prevent non proposer from commiting 
skipped Contract TimelockController methods simple schedule prevent overwritting active operation 
skipped Contract TimelockController methods simple schedule proposer can schedule 
skipped Contract TimelockController usage scenario call 
skipped Contract TimelockController usage scenario call nonpayable with eth 
skipped Contract TimelockController usage scenario call out of gas 
skipped Contract TimelockController usage scenario call payable with eth 
skipped Contract TimelockController usage scenario call reverting 
skipped Contract TimelockController usage scenario call reverting with eth 
skipped Contract TimelockController usage scenario call throw 
passed Contract TimersBlockNumber expired 
failed Contract TimersBlockNumber fast forward 
failed Contract TimersBlockNumber pending 
passed Contract TimersBlockNumber reset 
passed Contract TimersBlockNumber unset 
passed Contract TimersTimestamp expired 
failed Contract TimersTimestamp fast forward 
passed Contract TimersTimestamp pending 
passed Contract TimersTimestamp reset 
passed Contract TimersTimestamp unset 
broken Contract TokenTimelock with token once deployed can be released after time limit 
broken Contract TokenTimelock with token once deployed can be released just after limit 
passed Contract TokenTimelock with token once deployed can get state 
broken Contract TokenTimelock with token once deployed cannot be released twice 
passed Contract TokenTimelock with token once deployed cannot be released before time limit 
passed Contract TokenTimelock with token once deployed cannot be released just before time limit 
passed Contract TokenTimelock with token rejects a release time in the past 
passed Contract TransparentUpgradeableProxy cannot be initialized with a non contract address 
failed Contract TransparentUpgradeableProxy changeAdmin when the new proposed admin is not the zero address when the sender is not the admin reverts
passed Contract TransparentUpgradeableProxy changeAdmin when the new proposed admin is not the zero address when the sender is the admin assigns new
passed Contract TransparentUpgradeableProxy changeAdmin when the new proposed admin is not the zero address when the sender is the admin emits an
passed Contract TransparentUpgradeableProxy changeAdmin when the new proposed admin is the zero address reverts 
passed Contract TransparentUpgradeableProxy implementation delegates to the implementation 
passed Contract TransparentUpgradeableProxy implementation returns the current implementation address 
failed Contract TransparentUpgradeableProxy initialization without parameters non payable when not sending balance has expected balance 
failed Contract TransparentUpgradeableProxy initialization without parameters non payable when sending some balance reverts 
passed Contract TransparentUpgradeableProxy initialization without parameters non payable when not sending balance initializes the proxy 
skipped Contract TransparentUpgradeableProxy initialization without parameters non payable when not sending balance sets the implementation address 
failed Contract TransparentUpgradeableProxy initialization without parameters payable when not sending balance has expected balance 
failed Contract TransparentUpgradeableProxy initialization without parameters payable when sending some balance has expected balance 
passed Contract TransparentUpgradeableProxy initialization without parameters payable when not sending balance initializes the proxy 
passed Contract TransparentUpgradeableProxy initialization without parameters payable when sending some balance initializes the proxy 
skipped Contract TransparentUpgradeableProxy initialization without parameters payable when not sending balance sets the implementation address 
skipped Contract TransparentUpgradeableProxy initialization without parameters payable when sending some balance sets the implementation address 
failed Contract TransparentUpgradeableProxy initialization with parameters non payable when not sending balance has expected balance 
failed Contract TransparentUpgradeableProxy initialization with parameters non payable when sending some balance reverts 
passed Contract TransparentUpgradeableProxy initialization with parameters non payable when not sending balance initializes the proxy 
skipped Contract TransparentUpgradeableProxy initialization with parameters non payable when not sending balance sets the implementation address 
failed Contract TransparentUpgradeableProxy initialization with parameters payable when not sending balance has expected balance 
failed Contract TransparentUpgradeableProxy initialization with parameters payable when sending some balance has expected balance 
passed Contract TransparentUpgradeableProxy initialization with parameters payable when not sending balance initializes the proxy 
passed Contract TransparentUpgradeableProxy initialization with parameters payable when sending some balance initializes the proxy 
skipped Contract TransparentUpgradeableProxy initialization with parameters payable when not sending balance sets the implementation address 
skipped Contract TransparentUpgradeableProxy initialization with parameters payable when sending some balance sets the implementation address 
passed Contract TransparentUpgradeableProxy initialization with parameters reverting initialization reverts 
passed Contract TransparentUpgradeableProxy regression should add fallback function 
passed Contract TransparentUpgradeableProxy regression should add new function 
passed Contract TransparentUpgradeableProxy regression should change function signature 
failed Contract TransparentUpgradeableProxy regression should remove fallback function 
failed Contract TransparentUpgradeableProxy regression should remove function 
passed Contract TransparentUpgradeableProxy storage should store the admin proxy in specified location 
passed Contract TransparentUpgradeableProxy storage should store the implementation address in specified location 
passed Contract TransparentUpgradeableProxy transparent proxy proxy admin cannot call delegated functions 
passed Contract TransparentUpgradeableProxy transparent proxy when function names clash when sender is other should delegate to implementation 
passed Contract TransparentUpgradeableProxy transparent proxy when function names clash when sender is proxy admin should run the proxy function 
failed Contract TransparentUpgradeableProxy upgradeToAndCall with migrations when the sender is not the admin reverts 
failed Contract TransparentUpgradeableProxy upgradeToAndCall with migrations when the sender is the admin when upgrading to V1 calls the initialize function and sends
failed Contract TransparentUpgradeableProxy upgradeToAndCall with migrations when the sender is the admin when upgrading to V1 when upgrading to V2 calls the
failed Contract TransparentUpgradeableProxy upgradeToAndCall with migrations when the sender is the admin when upgrading to V1 when upgrading to V2 when upgrading
passed Contract TransparentUpgradeableProxy upgradeToAndCall with migrations when the sender is the admin when upgrading to V1 upgrades to the requested version and
passed Contract TransparentUpgradeableProxy upgradeToAndCall with migrations when the sender is the admin when upgrading to V1 when upgrading to V2 upgrades to
passed Contract TransparentUpgradeableProxy upgradeToAndCall with migrations when the sender is the admin when upgrading to V1 when upgrading to V2 when upgrading
failed Contract TransparentUpgradeableProxy upgradeToAndCall without migrations when the call does not fail when the sender is not the admin reverts 
failed Contract TransparentUpgradeableProxy upgradeToAndCall without migrations when the call does not fail when the sender is the admin sends given value to
passed Contract TransparentUpgradeableProxy upgradeToAndCall without migrations when the call does fail reverts 
passed Contract TransparentUpgradeableProxy upgradeToAndCall without migrations when the call does not fail when the sender is the admin calls the initializer function
passed Contract TransparentUpgradeableProxy upgradeToAndCall without migrations when the call does not fail when the sender is the admin emits an event 
passed Contract TransparentUpgradeableProxy upgradeToAndCall without migrations when the call does not fail when the sender is the admin upgrades to the requested
skipped Contract TransparentUpgradeableProxy upgradeToAndCall without migrations when the call does not fail when the sender is the admin uses the storage of
failed Contract TransparentUpgradeableProxy upgradeTo when the sender is not the admin reverts 
passed Contract TransparentUpgradeableProxy upgradeTo when the sender is the admin when the given implementation is different from the current one emits an
passed Contract TransparentUpgradeableProxy upgradeTo when the sender is the admin when the given implementation is different from the current one upgrades to
passed Contract TransparentUpgradeableProxy upgradeTo when the sender is the admin when the given implementation is the zero address reverts 
failed Contract TransparentUpgradeableProxy without initialization when not sending balance has expected balance 
passed Contract TransparentUpgradeableProxy without initialization when not sending balance initializes the proxy 
skipped Contract TransparentUpgradeableProxy without initialization when not sending balance sets the implementation address 
failed Contract TransparentUpgradeableProxy without initialization when sending some balance has expected balance 
passed Contract TransparentUpgradeableProxy without initialization when sending some balance initializes the proxy 
skipped Contract TransparentUpgradeableProxy without initialization when sending some balance sets the implementation address 
Status Description 
passed Ethers js shouldCheckStaticJsonRpcProvider 
passed Ethers js shouldConnectViaEthersJs 
passed Ethers js shouldCountTransactions 
broken Ethers js shouldCreateAcccountWithEthersJs 
passed Ethers js testContracts 
broken Ethers js testQueryHistoricEvents 
broken Ethers js testQueryingBlockchain 
broken Ethers js testReadOnlyMethods 
passed Ethers js testSigner 
broken Ethers js testSigningMessages 
passed Ethers js testStateChangingMethods 
broken Ethers js testWritingToTheBlockchain 
passed ethjs Connection test js 
broken ethjs test01 
broken Hardhat advanced Greeter Should return the new greeting once it s changed 
passed migrate imports js every new path exists 
passed migrate imports js replaces import paths in a file 
passed tests brownie test brownie test brownie connect 
passed tests brownie test brownie test brownie deploy 
broken tests brownie token tests test approve test returns true 
passed tests brownie token tests test approve test approval event fires 
passed tests brownie token tests test approve test approve 
passed tests brownie token tests test approve test approve self 
passed tests brownie token tests test approve test initial approval is zero 0 
passed tests brownie token tests test approve test initial approval is zero 1 
passed tests brownie token tests test approve test initial approval is zero 2 
passed tests brownie token tests test approve test initial approval is zero 3 
passed tests brownie token tests test approve test initial approval is zero 4 
passed tests brownie token tests test approve test modify approve 
passed tests brownie token tests test approve test only affects target 
passed tests brownie token tests test approve test revoke approve 
broken tests brownie token tests test transferFrom test insufficient approval 
broken tests brownie token tests test transferFrom test insufficient balance 
broken tests brownie token tests test transferFrom test returns true 
failed tests brownie token tests test transferFrom test no approval 
failed tests brownie token tests test transferFrom test revoked approval 
failed tests brownie token tests test transferFrom test transfer to self no approval 
passed tests brownie token tests test transferFrom test caller approval affected 
passed tests brownie token tests test transferFrom test caller balance not affected 
passed tests brownie token tests test transferFrom test receiver approval not affected 
passed tests brownie token tests test transferFrom test receiver balance increases 
passed tests brownie token tests test transferFrom test sender balance decreases 
passed tests brownie token tests test transferFrom test total supply not affected 
passed tests brownie token tests test transferFrom test transfer event fires 
passed tests brownie token tests test transferFrom test transfer full balance 
passed tests brownie token tests test transferFrom test transfer to self 
passed tests brownie token tests test transferFrom test transfer zero tokens 
passed tests brownie token tests test transferFrom test transfer zero tokens without approval 
broken tests brownie token tests test transfer test insufficient balance 
broken tests brownie token tests test transfer test returns true 
passed tests brownie token tests test transfer test receiver balance increases 
passed tests brownie token tests test transfer test sender balance decreases 
passed tests brownie token tests test transfer test total supply not affected 
passed tests brownie token tests test transfer test transfer event fires 
passed tests brownie token tests test transfer test transfer full balance 
passed tests brownie token tests test transfer test transfer to self 
passed tests brownie token tests test transfer test transfer zero tokens 
skipped tests hardhat test hardhat test hardhat advanced 
skipped tests hardhat test hardhat test hardhat simple 
failed tests openzeppelin test openzeppelin test contracts input data0 
failed tests openzeppelin test openzeppelin test contracts input data1 
failed tests openzeppelin test openzeppelin test contracts input data2 
failed tests openzeppelin test openzeppelin test contracts input data3 
passed tests truffle test truffle test issue 364 self destruct contract 
failed tests truffle test truffle test truffle contract 
passed tests truffle test truffle test truffle migration 
failed tests truffle test truffle test truffle test 
