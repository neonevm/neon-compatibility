https://docs.neon-labs.org/neon-compatibility/teststand/286/data/suites.csv
passed Contract BeaconProxy bad beacon is not accepted non compliant beacon 
passed Contract BeaconProxy bad beacon is not accepted non contract beacon 
passed Contract BeaconProxy bad beacon is not accepted non contract implementation 
failed Contract BeaconProxy initialization no initialization 
failed Contract BeaconProxy initialization non payable initialization 
failed Contract BeaconProxy initialization payable initialization 
passed Contract BeaconProxy initialization reverting initialization 
broken Contract BeaconProxy Uncaught error outside test suite 
passed Contract BeaconProxy upgrade 2 proxies by upgrading shared beacon 
passed Contract BeaconProxy upgrade a proxy by upgrading its beacon 
passed Contract Clones cloneDeterministic address already used 
passed Contract Clones cloneDeterministic address prediction 
failed Contract Clones cloneDeterministic initialization without parameters non payable when not sending balance has expected balance 
failed Contract Clones cloneDeterministic initialization without parameters non payable when sending some balance reverts 
passed Contract Clones cloneDeterministic initialization without parameters non payable when not sending balance initializes the proxy 
failed Contract Clones cloneDeterministic initialization without parameters payable when not sending balance has expected balance 
failed Contract Clones cloneDeterministic initialization without parameters payable when sending some balance has expected balance 
passed Contract Clones cloneDeterministic initialization without parameters payable when not sending balance initializes the proxy 
passed Contract Clones cloneDeterministic initialization without parameters payable when sending some balance initializes the proxy 
failed Contract Clones cloneDeterministic initialization with parameters non payable when not sending balance has expected balance 
failed Contract Clones cloneDeterministic initialization with parameters non payable when sending some balance reverts 
passed Contract Clones cloneDeterministic initialization with parameters non payable when not sending balance initializes the proxy 
failed Contract Clones cloneDeterministic initialization with parameters payable when not sending balance has expected balance 
failed Contract Clones cloneDeterministic initialization with parameters payable when sending some balance has expected balance 
passed Contract Clones cloneDeterministic initialization with parameters payable when not sending balance initializes the proxy 
passed Contract Clones cloneDeterministic initialization with parameters payable when sending some balance initializes the proxy 
failed Contract Clones clone initialization without parameters non payable when not sending balance has expected balance 
failed Contract Clones clone initialization without parameters non payable when sending some balance reverts 
passed Contract Clones clone initialization without parameters non payable when not sending balance initializes the proxy 
failed Contract Clones clone initialization without parameters payable when not sending balance has expected balance 
failed Contract Clones clone initialization without parameters payable when sending some balance has expected balance 
passed Contract Clones clone initialization without parameters payable when not sending balance initializes the proxy 
passed Contract Clones clone initialization without parameters payable when sending some balance initializes the proxy 
failed Contract Clones clone initialization with parameters non payable when not sending balance has expected balance 
failed Contract Clones clone initialization with parameters non payable when sending some balance reverts 
passed Contract Clones clone initialization with parameters non payable when not sending balance initializes the proxy 
failed Contract Clones clone initialization with parameters payable when not sending balance has expected balance 
failed Contract Clones clone initialization with parameters payable when sending some balance has expected balance 
passed Contract Clones clone initialization with parameters payable when not sending balance initializes the proxy 
passed Contract Clones clone initialization with parameters payable when sending some balance initializes the proxy 
broken Contract ConditionalEscrow when withdrawal is allowed as an escrow deposits can accept a single deposit 
passed Contract ConditionalEscrow when withdrawal is disallowed reverts on withdrawals 
passed Contract ERC1155Burnable burn approved operators can burn the holder s tokens 
passed Contract ERC1155Burnable burnBatch approved operators can burn the holder s tokens 
passed Contract ERC1155Burnable burnBatch holder can burn their tokens 
passed Contract ERC1155Burnable burnBatch unapproved accounts cannot burn the holder s tokens 
passed Contract ERC1155Burnable burn holder can burn their tokens 
passed Contract ERC1155Burnable burn unapproved accounts cannot burn the holder s tokens 
passed Contract ERC1155 ERC1155MetadataURI emits no URI event in constructor 
passed Contract ERC1155 ERC1155MetadataURI sets the initial URI for all token types 
passed Contract ERC1155 ERC1155MetadataURI setURI emits no URI event 
passed Contract ERC1155 ERC1155MetadataURI setURI sets the new URI for all token types 
passed Contract ERC1155Holder Contract interface ERC1155Receiver ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract ERC1155Holder Contract interface ERC1155Receiver ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract ERC1155Holder Contract interface ERC1155Receiver onERC1155BatchReceived address address uint256 uint256 bytes has to be implemented 
passed Contract ERC1155Holder Contract interface ERC1155Receiver onERC1155Received address address uint256 uint256 bytes has to be implemented 
passed Contract ERC1155Holder Contract interface ERC165 ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract ERC1155Holder Contract interface ERC165 ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract ERC1155Holder Contract interface ERC165 supportsInterface bytes4 has to be implemented 
passed Contract ERC1155Holder receives ERC1155 tokens from a multiple IDs 
passed Contract ERC1155Holder receives ERC1155 tokens from a single ID 
passed Contract ERC1155 internal functions burnBatch reverts if length of inputs do not match 
passed Contract ERC1155 internal functions burnBatch reverts when burning a non existent token id 
passed Contract ERC1155 internal functions burnBatch reverts when burning the zero account s tokens 
passed Contract ERC1155 internal functions burnBatch with minted then burnt tokens accounts for both minting and burning 
passed Contract ERC1155 internal functions burnBatch with minted then burnt tokens emits a TransferBatch event 
passed Contract ERC1155 internal functions burn reverts when burning a non existent token id 
passed Contract ERC1155 internal functions burn reverts when burning more than available tokens 
passed Contract ERC1155 internal functions burn reverts when burning the zero account s tokens 
passed Contract ERC1155 internal functions burn with minted then burnt tokens accounts for both minting and burning 
passed Contract ERC1155 internal functions burn with minted then burnt tokens emits a TransferSingle event 
passed Contract ERC1155 internal functions mintBatch reverts if length of inputs do not match 
passed Contract ERC1155 internal functions mintBatch reverts with a zero destination address 
passed Contract ERC1155 internal functions mintBatch with minted batch of tokens credits the minted batch of tokens 
passed Contract ERC1155 internal functions mintBatch with minted batch of tokens emits a TransferBatch event 
passed Contract ERC1155 internal functions mint reverts with a zero destination address 
passed Contract ERC1155 internal functions mint with minted tokens credits the minted amount of tokens 
passed Contract ERC1155 internal functions mint with minted tokens emits a TransferSingle event 
passed Contract ERC1155 like an ERC1155 balanceOfBatch reverts when input arrays don t match up 
passed Contract ERC1155 like an ERC1155 balanceOfBatch reverts when one of the addresses is the zero address 
passed Contract ERC1155 like an ERC1155 balanceOfBatch when accounts don t own tokens returns zeros for each account 
passed Contract ERC1155 like an ERC1155 balanceOfBatch when accounts own some tokens returns amounts owned by each account in order passed 
passed Contract ERC1155 like an ERC1155 balanceOfBatch when accounts own some tokens returns multiple times the balance of the same address when
passed Contract ERC1155 like an ERC1155 balanceOf reverts when queried about the zero address 
passed Contract ERC1155 like an ERC1155 balanceOf when accounts don t own tokens returns zero for given addresses 
passed Contract ERC1155 like an ERC1155 balanceOf when accounts own some tokens returns the amount of tokens owned by the given addresses
failed Contract ERC1155 like an ERC1155 Contract interface ERC165 ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract ERC1155 like an ERC1155 Contract interface ERC1155 balanceOf address uint256 has to be implemented 
passed Contract ERC1155 like an ERC1155 Contract interface ERC1155 balanceOfBatch address uint256 has to be implemented 
passed Contract ERC1155 like an ERC1155 Contract interface ERC1155 ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract ERC1155 like an ERC1155 Contract interface ERC1155 ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract ERC1155 like an ERC1155 Contract interface ERC1155 isApprovedForAll address address has to be implemented 
passed Contract ERC1155 like an ERC1155 Contract interface ERC1155 safeBatchTransferFrom address address uint256 uint256 bytes has to be implemented 
passed Contract ERC1155 like an ERC1155 Contract interface ERC1155 safeTransferFrom address address uint256 uint256 bytes has to be implemented 
passed Contract ERC1155 like an ERC1155 Contract interface ERC1155 setApprovalForAll address bool has to be implemented 
passed Contract ERC1155 like an ERC1155 Contract interface ERC165 ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract ERC1155 like an ERC1155 Contract interface ERC165 supportsInterface bytes4 has to be implemented 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom reverts when ids array length doesn t match amounts array length 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom reverts when transferring amount more than any of balances 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom reverts when transferring to zero address 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom to a contract that does not implement the required function reverts 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom to a receiver contract returning unexpected value reverts 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom to a receiver contract that reverts only on single transfers calls onERC1155BatchReceived 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom to a receiver contract that reverts only on single transfers credits transferred balances to receiver
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom to a receiver contract that reverts only on single transfers debits transferred balances from sender
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom to a receiver contract that reverts only on single transfers emits a TransferBatch log 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom to a receiver contract that reverts reverts 
broken Contract ERC1155 like an ERC1155 safeBatchTransferFrom when sending to a valid receiver without data calls onERC1155BatchReceived 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when called by an operator on behalf of the multiTokenHolder when operator is approved by
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when called by an operator on behalf of the multiTokenHolder when operator is approved by
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when called by an operator on behalf of the multiTokenHolder when operator is approved by
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when called by an operator on behalf of the multiTokenHolder when operator is approved by
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when called by an operator on behalf of the multiTokenHolder when operator is not approved
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when called by the multiTokenHolder credits transferred balances to receiver 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when called by the multiTokenHolder debits transferred balances from sender 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when called by the multiTokenHolder emits a TransferBatch log 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when sending to a valid receiver with data calls onERC1155Received 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when sending to a valid receiver with data credits transferred balances to receiver 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when sending to a valid receiver with data debits transferred balances from sender 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when sending to a valid receiver with data emits a TransferBatch log 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when sending to a valid receiver without data credits transferred balances to receiver 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when sending to a valid receiver without data debits transferred balances from sender 
passed Contract ERC1155 like an ERC1155 safeBatchTransferFrom when sending to a valid receiver without data emits a TransferBatch log 
passed Contract ERC1155 like an ERC1155 safeTransferFrom reverts when transferring more than balance 
passed Contract ERC1155 like an ERC1155 safeTransferFrom reverts when transferring to zero address 
passed Contract ERC1155 like an ERC1155 safeTransferFrom to a contract that does not implement the required function reverts 
passed Contract ERC1155 like an ERC1155 safeTransferFrom to a receiver contract returning unexpected value reverts 
passed Contract ERC1155 like an ERC1155 safeTransferFrom to a receiver contract that reverts reverts 
passed Contract ERC1155 like an ERC1155 safeTransferFrom when called by an operator on behalf of the multiTokenHolder when operator is approved by
passed Contract ERC1155 like an ERC1155 safeTransferFrom when called by an operator on behalf of the multiTokenHolder when operator is approved by
passed Contract ERC1155 like an ERC1155 safeTransferFrom when called by an operator on behalf of the multiTokenHolder when operator is approved by
passed Contract ERC1155 like an ERC1155 safeTransferFrom when called by an operator on behalf of the multiTokenHolder when operator is approved by
passed Contract ERC1155 like an ERC1155 safeTransferFrom when called by an operator on behalf of the multiTokenHolder when operator is not approved
passed Contract ERC1155 like an ERC1155 safeTransferFrom when called by the multiTokenHolder credits transferred balance to receiver 
passed Contract ERC1155 like an ERC1155 safeTransferFrom when called by the multiTokenHolder debits transferred balance from sender 
passed Contract ERC1155 like an ERC1155 safeTransferFrom when called by the multiTokenHolder emits a TransferSingle log 
passed Contract ERC1155 like an ERC1155 safeTransferFrom when called by the multiTokenHolder preserves existing balances which are not transferred by multiTokenHolder 
passed Contract ERC1155 like an ERC1155 safeTransferFrom when sending to a valid receiver with data calls onERC1155Received 
passed Contract ERC1155 like an ERC1155 safeTransferFrom when sending to a valid receiver with data credits transferred balance to receiver 
passed Contract ERC1155 like an ERC1155 safeTransferFrom when sending to a valid receiver with data debits transferred balance from sender 
passed Contract ERC1155 like an ERC1155 safeTransferFrom when sending to a valid receiver with data emits a TransferSingle log 
passed Contract ERC1155 like an ERC1155 safeTransferFrom when sending to a valid receiver without data calls onERC1155Received 
passed Contract ERC1155 like an ERC1155 safeTransferFrom when sending to a valid receiver without data credits transferred balance to receiver 
passed Contract ERC1155 like an ERC1155 safeTransferFrom when sending to a valid receiver without data debits transferred balance from sender 
passed Contract ERC1155 like an ERC1155 safeTransferFrom when sending to a valid receiver without data emits a TransferSingle log 
passed Contract ERC1155 like an ERC1155 setApprovalForAll can unset approval for an operator 
passed Contract ERC1155 like an ERC1155 setApprovalForAll emits an ApprovalForAll log 
passed Contract ERC1155 like an ERC1155 setApprovalForAll reverts if attempting to approve self as an operator 
passed Contract ERC1155 like an ERC1155 setApprovalForAll sets approval status which can be queried via isApprovedForAll 
passed Contract ERC1155Pausable when token is paused balanceOf returns the amount of tokens owned by the given address 
passed Contract ERC1155Pausable when token is paused isApprovedForAll returns the approval of the operator 
passed Contract ERC1155Pausable when token is paused reverts when trying to burn 
passed Contract ERC1155Pausable when token is paused reverts when trying to burnBatch 
passed Contract ERC1155Pausable when token is paused reverts when trying to mint 
passed Contract ERC1155Pausable when token is paused reverts when trying to mintBatch 
passed Contract ERC1155Pausable when token is paused reverts when trying to safeBatchTransferFrom from holder 
passed Contract ERC1155Pausable when token is paused reverts when trying to safeBatchTransferFrom from operator 
passed Contract ERC1155Pausable when token is paused reverts when trying to safeTransferFrom from holder 
passed Contract ERC1155Pausable when token is paused reverts when trying to safeTransferFrom from operator 
passed Contract ERC1155Pausable when token is paused setApprovalForAll approves an operator 
passed Contract ERC1155PresetMinterPauser batched minting deployer can batch mint tokens 
passed Contract ERC1155PresetMinterPauser batched minting other accounts cannot batch mint tokens 
passed Contract ERC1155PresetMinterPauser burning holders can burn their tokens 
failed Contract ERC1155PresetMinterPauser Contract interface AccessControlEnumerable ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract ERC1155PresetMinterPauser Contract interface AccessControlEnumerable ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract ERC1155PresetMinterPauser Contract interface AccessControlEnumerable getRoleMember bytes32 uint256 has to be implemented 
passed Contract ERC1155PresetMinterPauser Contract interface AccessControlEnumerable getRoleMemberCount bytes32 has to be implemented 
failed Contract ERC1155PresetMinterPauser Contract interface AccessControl ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract ERC1155PresetMinterPauser Contract interface AccessControl ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract ERC1155PresetMinterPauser Contract interface AccessControl getRoleAdmin bytes32 has to be implemented 
passed Contract ERC1155PresetMinterPauser Contract interface AccessControl grantRole bytes32 address has to be implemented 
passed Contract ERC1155PresetMinterPauser Contract interface AccessControl hasRole bytes32 address has to be implemented 
passed Contract ERC1155PresetMinterPauser Contract interface AccessControl renounceRole bytes32 address has to be implemented 
passed Contract ERC1155PresetMinterPauser Contract interface AccessControl revokeRole bytes32 address has to be implemented 
passed Contract ERC1155PresetMinterPauser Contract interface ERC1155 balanceOf address uint256 has to be implemented 
passed Contract ERC1155PresetMinterPauser Contract interface ERC1155 balanceOfBatch address uint256 has to be implemented 
failed Contract ERC1155PresetMinterPauser Contract interface ERC1155 ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract ERC1155PresetMinterPauser Contract interface ERC1155 ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract ERC1155PresetMinterPauser Contract interface ERC1155 isApprovedForAll address address has to be implemented 
passed Contract ERC1155PresetMinterPauser Contract interface ERC1155 safeBatchTransferFrom address address uint256 uint256 bytes has to be implemented 
passed Contract ERC1155PresetMinterPauser Contract interface ERC1155 safeTransferFrom address address uint256 uint256 bytes has to be implemented 
passed Contract ERC1155PresetMinterPauser Contract interface ERC1155 setApprovalForAll address bool has to be implemented 
passed Contract ERC1155PresetMinterPauser deployer has the default admin role 
passed Contract ERC1155PresetMinterPauser deployer has the minter role 
passed Contract ERC1155PresetMinterPauser deployer has the pauser role 
passed Contract ERC1155PresetMinterPauser minter and pauser role admin is the default admin 
passed Contract ERC1155PresetMinterPauser minting deployer can mint tokens 
passed Contract ERC1155PresetMinterPauser minting other accounts cannot mint tokens 
passed Contract ERC1155PresetMinterPauser pausing cannot mint while paused 
passed Contract ERC1155PresetMinterPauser pausing deployer can pause 
passed Contract ERC1155PresetMinterPauser pausing deployer can unpause 
passed Contract ERC1155PresetMinterPauser pausing other accounts cannot pause 
passed Contract ERC1155PresetMinterPauser pausing other accounts cannot unpause 
passed Contract ERC1155Supply after burn batch exist 
passed Contract ERC1155Supply after burn batch totalSupply 
passed Contract ERC1155Supply after burn single exist 
passed Contract ERC1155Supply after burn single totalSupply 
passed Contract ERC1155Supply after mint batch exist 
passed Contract ERC1155Supply after mint batch totalSupply 
passed Contract ERC1155Supply after mint single exist 
passed Contract ERC1155Supply after mint single totalSupply 
passed Contract ERC1155Supply before mint exist 
passed Contract ERC1155Supply before mint totalSupply 
passed Contract ERC165Checker account address does not support ERC165 does not support ERC165 
passed Contract ERC165Checker account address does not support ERC165 does not support mock interface via getSupportedInterfaces 
passed Contract ERC165Checker account address does not support ERC165 does not support mock interface via supportsAllInterfaces 
passed Contract ERC165Checker account address does not support ERC165 does not support mock interface via supportsInterface 
passed Contract ERC165Checker ERC165 and many interfaces supported supports all interfaceIds via getSupportedInterfaces 
passed Contract ERC165Checker ERC165 and many interfaces supported supports all interfaceIds via supportsAllInterfaces 
passed Contract ERC165Checker ERC165 and many interfaces supported supports each interfaceId via supportsInterface 
passed Contract ERC165Checker ERC165 and many interfaces supported supports ERC165 
passed Contract ERC165Checker ERC165 and many interfaces supported supports none of the interfaces queried via getSupportedInterfaces 
passed Contract ERC165Checker ERC165 and many interfaces supported supports none of the interfaces queried via supportsAllInterfaces 
passed Contract ERC165Checker ERC165 and many interfaces supported supports not all of the interfaces queried via getSupportedInterfaces 
passed Contract ERC165Checker ERC165 and many interfaces supported supports not all of the interfaces queried via supportsAllInterfaces 
passed Contract ERC165Checker ERC165 and single interface supported supports ERC165 
passed Contract ERC165Checker ERC165 and single interface supported supports mock interface via getSupportedInterfaces 
passed Contract ERC165Checker ERC165 and single interface supported supports mock interface via supportsAllInterfaces 
passed Contract ERC165Checker ERC165 and single interface supported supports mock interface via supportsInterface 
passed Contract ERC165Checker ERC165 missing return data does not support ERC165 
passed Contract ERC165Checker ERC165 missing return data does not support mock interface via getSupportedInterfaces 
passed Contract ERC165Checker ERC165 missing return data does not support mock interface via supportsAllInterfaces 
passed Contract ERC165Checker ERC165 missing return data does not support mock interface via supportsInterface 
passed Contract ERC165Checker ERC165 not supported does not support ERC165 
passed Contract ERC165Checker ERC165 not supported does not support mock interface via getSupportedInterfaces 
passed Contract ERC165Checker ERC165 not supported does not support mock interface via supportsAllInterfaces 
passed Contract ERC165Checker ERC165 not supported does not support mock interface via supportsInterface 
passed Contract ERC165Checker ERC165 supported does not support mock interface via getSupportedInterfaces 
passed Contract ERC165Checker ERC165 supported does not support mock interface via supportsAllInterfaces 
passed Contract ERC165Checker ERC165 supported does not support mock interface via supportsInterface 
passed Contract ERC165Checker ERC165 supported supports ERC165 
passed Contract ERC165 Contract interface ERC165 ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract ERC165 Contract interface ERC165 ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract ERC165 Contract interface ERC165 supportsInterface bytes4 has to be implemented 
passed Contract ERC165Storage Contract interface ERC165 ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract ERC165Storage Contract interface ERC165 ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract ERC165Storage Contract interface ERC165 supportsInterface bytes4 has to be implemented 
passed Contract ERC165Storage does not allow 0xffffffff 
passed Contract ERC165Storage register interface 
passed Contract ERC1820Implementer with no registered interfaces returns false when interface implementation is queried 
failed Contract ERC1820Implementer with no registered interfaces reverts when attempting to set as implementer in the registry 
broken Contract ERC1820Implementer with registered interfaces can be set as an implementer for supported interfaces in the registry 
passed Contract ERC1820Implementer with registered interfaces returns false when interface implementation for non supported addresses is queried 
passed Contract ERC1820Implementer with registered interfaces returns false when interface implementation for non supported interfaces is queried 
passed Contract ERC1820Implementer with registered interfaces returns true when interface implementation is queried 
passed Contract ERC1967Proxy cannot be initialized with a non contract address 
failed Contract ERC1967Proxy initialization without parameters non payable when not sending balance has expected balance 
failed Contract ERC1967Proxy initialization without parameters non payable when sending some balance reverts 
passed Contract ERC1967Proxy initialization without parameters non payable when not sending balance initializes the proxy 
skipped Contract ERC1967Proxy initialization without parameters non payable when not sending balance sets the implementation address 
failed Contract ERC1967Proxy initialization without parameters payable when not sending balance has expected balance 
failed Contract ERC1967Proxy initialization without parameters payable when sending some balance has expected balance 
passed Contract ERC1967Proxy initialization without parameters payable when not sending balance initializes the proxy 
passed Contract ERC1967Proxy initialization without parameters payable when sending some balance initializes the proxy 
skipped Contract ERC1967Proxy initialization without parameters payable when not sending balance sets the implementation address 
skipped Contract ERC1967Proxy initialization without parameters payable when sending some balance sets the implementation address 
failed Contract ERC1967Proxy initialization with parameters non payable when not sending balance has expected balance 
failed Contract ERC1967Proxy initialization with parameters non payable when sending some balance reverts 
passed Contract ERC1967Proxy initialization with parameters non payable when not sending balance initializes the proxy 
skipped Contract ERC1967Proxy initialization with parameters non payable when not sending balance sets the implementation address 
failed Contract ERC1967Proxy initialization with parameters payable when not sending balance has expected balance 
failed Contract ERC1967Proxy initialization with parameters payable when sending some balance has expected balance 
passed Contract ERC1967Proxy initialization with parameters payable when not sending balance initializes the proxy 
passed Contract ERC1967Proxy initialization with parameters payable when sending some balance initializes the proxy 
skipped Contract ERC1967Proxy initialization with parameters payable when not sending balance sets the implementation address 
skipped Contract ERC1967Proxy initialization with parameters payable when sending some balance sets the implementation address 
passed Contract ERC1967Proxy initialization with parameters reverting initialization reverts 
failed Contract ERC1967Proxy without initialization when not sending balance has expected balance 
passed Contract ERC1967Proxy without initialization when not sending balance initializes the proxy 
skipped Contract ERC1967Proxy without initialization when not sending balance sets the implementation address 
failed Contract ERC1967Proxy without initialization when sending some balance has expected balance 
passed Contract ERC1967Proxy without initialization when sending some balance initializes the proxy 
skipped Contract ERC1967Proxy without initialization when sending some balance sets the implementation address 
passed Contract ERC20 approve when the owner is the zero address reverts 
passed Contract ERC20 approve when the spender is not the zero address when the sender does not have enough balance emits an
passed Contract ERC20 approve when the spender is not the zero address when the sender does not have enough balance emits an
passed Contract ERC20 approve when the spender is not the zero address when the sender does not have enough balance when the
passed Contract ERC20 approve when the spender is not the zero address when the sender does not have enough balance when the
passed Contract ERC20 approve when the spender is not the zero address when the sender does not have enough balance when there
passed Contract ERC20 approve when the spender is not the zero address when the sender does not have enough balance when there
passed Contract ERC20 approve when the spender is not the zero address when the sender has enough balance emits an approval event
passed Contract ERC20 approve when the spender is not the zero address when the sender has enough balance emits an approval event
passed Contract ERC20 approve when the spender is not the zero address when the sender has enough balance when there was no
passed Contract ERC20 approve when the spender is not the zero address when the sender has enough balance when there was no
passed Contract ERC20 approve when the spender is not the zero address when the sender has enough balance when the spender had
passed Contract ERC20 approve when the spender is not the zero address when the sender has enough balance when the spender had
passed Contract ERC20 approve when the spender is the zero address reverts 
passed Contract ERC20 approve when the spender is the zero address reverts 
passed Contract ERC20 balanceOf when the requested account has no tokens returns zero 
passed Contract ERC20 balanceOf when the requested account has some tokens returns the total amount of tokens 
passed Contract ERC20Burnable burnFrom on success for a non zero amount burns the requested amount 
passed Contract ERC20Burnable burnFrom on success for a non zero amount decrements allowance 
passed Contract ERC20Burnable burnFrom on success for a non zero amount emits a transfer event 
passed Contract ERC20Burnable burnFrom on success for a zero amount burns the requested amount 
passed Contract ERC20Burnable burnFrom on success for a zero amount decrements allowance 
passed Contract ERC20Burnable burnFrom on success for a zero amount emits a transfer event 
passed Contract ERC20Burnable burnFrom when the given amount is greater than the allowance reverts 
passed Contract ERC20Burnable burnFrom when the given amount is greater than the balance of the sender reverts 
passed Contract ERC20Burnable burn when the given amount is greater than the balance of the sender reverts 
passed Contract ERC20Burnable burn when the given amount is not greater than balance of the sender for a non zero amount burns
passed Contract ERC20Burnable burn when the given amount is not greater than balance of the sender for a non zero amount emits
passed Contract ERC20Burnable burn when the given amount is not greater than balance of the sender for a zero amount burns the
passed Contract ERC20Burnable burn when the given amount is not greater than balance of the sender for a zero amount emits a
passed Contract ERC20 burn for a non zero account for entire balance decrements initialHolder balance 
passed Contract ERC20 burn for a non zero account for entire balance decrements totalSupply 
passed Contract ERC20 burn for a non zero account for entire balance emits Transfer event 
passed Contract ERC20 burn for a non zero account for less amount than balance decrements initialHolder balance 
passed Contract ERC20 burn for a non zero account for less amount than balance decrements totalSupply 
passed Contract ERC20 burn for a non zero account for less amount than balance emits Transfer event 
passed Contract ERC20 burn for a non zero account rejects burning more than balance 
passed Contract ERC20 burn rejects a null account 
passed Contract ERC20Capped once deployed capped token fails to mint after cap is reached 
passed Contract ERC20Capped once deployed capped token fails to mint if the amount exceeds the cap 
passed Contract ERC20Capped once deployed capped token mints when amount is less than cap 
passed Contract ERC20Capped once deployed capped token starts with the correct cap 
passed Contract ERC20Capped requires a non zero cap 
passed Contract ERC20 decrease allowance when the spender is not the zero address when the sender does not have enough balance when
passed Contract ERC20 decrease allowance when the spender is not the zero address when the sender does not have enough balance when
passed Contract ERC20 decrease allowance when the spender is not the zero address when the sender does not have enough balance when
passed Contract ERC20 decrease allowance when the spender is not the zero address when the sender does not have enough balance when
passed Contract ERC20 decrease allowance when the spender is not the zero address when the sender does not have enough balance when
passed Contract ERC20 decrease allowance when the spender is not the zero address when the sender has enough balance when there was
passed Contract ERC20 decrease allowance when the spender is not the zero address when the sender has enough balance when the spender
passed Contract ERC20 decrease allowance when the spender is not the zero address when the sender has enough balance when the spender
passed Contract ERC20 decrease allowance when the spender is not the zero address when the sender has enough balance when the spender
passed Contract ERC20 decrease allowance when the spender is not the zero address when the sender has enough balance when the spender
passed Contract ERC20 decrease allowance when the spender is the zero address reverts 
passed Contract ERC20 deposit missing approval 
passed Contract ERC20 deposit missing balance 
passed Contract ERC20 deposit to other account 
passed Contract ERC20 deposit valid 
passed Contract ERC20 erc20 behaviour approve when the spender is not the zero address when the sender does not have enough balance
passed Contract ERC20 erc20 behaviour approve when the spender is not the zero address when the sender does not have enough balance
passed Contract ERC20 erc20 behaviour approve when the spender is not the zero address when the sender does not have enough balance
passed Contract ERC20 erc20 behaviour approve when the spender is not the zero address when the sender has enough balance emits an
passed Contract ERC20 erc20 behaviour approve when the spender is not the zero address when the sender has enough balance when the
passed Contract ERC20 erc20 behaviour approve when the spender is not the zero address when the sender has enough balance when there
passed Contract ERC20 erc20 behaviour approve when the spender is the zero address reverts 
passed Contract ERC20 erc20 behaviour balanceOf when the requested account has no tokens returns zero 
passed Contract ERC20 erc20 behaviour balanceOf when the requested account has some tokens returns the total amount of tokens 
passed Contract ERC20 erc20 behaviour total supply returns the total amount of tokens 
passed Contract ERC20 erc20 behaviour transfer from when the token owner is not the zero address when the recipient is not the
passed Contract ERC20 erc20 behaviour transfer from when the token owner is not the zero address when the recipient is not the
passed Contract ERC20 erc20 behaviour transfer from when the token owner is not the zero address when the recipient is not the
passed Contract ERC20 erc20 behaviour transfer from when the token owner is not the zero address when the recipient is not the
passed Contract ERC20 erc20 behaviour transfer from when the token owner is not the zero address when the recipient is not the
passed Contract ERC20 erc20 behaviour transfer from when the token owner is not the zero address when the recipient is not the
passed Contract ERC20 erc20 behaviour transfer from when the token owner is not the zero address when the recipient is not the
passed Contract ERC20 erc20 behaviour transfer from when the token owner is not the zero address when the recipient is the zero
passed Contract ERC20 erc20 behaviour transfer from when the token owner is the zero address reverts 
passed Contract ERC20 erc20 behaviour transfer when the recipient is not the zero address when the sender does not have enough balance
passed Contract ERC20 erc20 behaviour transfer when the recipient is not the zero address when the sender transfers all balance emits a
passed Contract ERC20 erc20 behaviour transfer when the recipient is not the zero address when the sender transfers all balance transfers the
passed Contract ERC20 erc20 behaviour transfer when the recipient is not the zero address when the sender transfers zero tokens emits a
passed Contract ERC20 erc20 behaviour transfer when the recipient is not the zero address when the sender transfers zero tokens transfers the
passed Contract ERC20 erc20 behaviour transfer when the recipient is the zero address reverts 
passed Contract ERC20FlashMint flashFee token match 
passed Contract ERC20FlashMint flashFee token mismatch 
passed Contract ERC20FlashMint flashLoan missing approval 
passed Contract ERC20FlashMint flashLoan missing return value 
passed Contract ERC20FlashMint flashLoan more than maxFlashLoan 
broken Contract ERC20FlashMint flashLoan success 
passed Contract ERC20FlashMint flashLoan unavailable funds 
passed Contract ERC20FlashMint maxFlashLoan token match 
passed Contract ERC20FlashMint maxFlashLoan token mismatch 
passed Contract ERC20 has 18 decimals 
passed Contract ERC20 has a name 
passed Contract ERC20 has a symbol 
passed Contract ERC20 has underlying 
passed Contract ERC20 increase allowance when the spender is not the zero address when the sender does not have enough balance emits
passed Contract ERC20 increase allowance when the spender is not the zero address when the sender does not have enough balance when
passed Contract ERC20 increase allowance when the spender is not the zero address when the sender does not have enough balance when
passed Contract ERC20 increase allowance when the spender is not the zero address when the sender has enough balance emits an approval
passed Contract ERC20 increase allowance when the spender is not the zero address when the sender has enough balance when there was
passed Contract ERC20 increase allowance when the spender is not the zero address when the sender has enough balance when the spender
passed Contract ERC20 increase allowance when the spender is the zero address reverts 
passed Contract ERC20 mint for a non zero account emits Transfer event 
passed Contract ERC20 mint for a non zero account increments recipient balance 
passed Contract ERC20 mint for a non zero account increments totalSupply 
passed Contract ERC20 mint rejects a null account 
passed Contract ERC20Pausable pausable token burn allows to burn when paused and then unpaused 
passed Contract ERC20Pausable pausable token burn allows to burn when unpaused 
passed Contract ERC20Pausable pausable token burn reverts when trying to burn when paused 
passed Contract ERC20Pausable pausable token mint allows to mint when paused and then unpaused 
passed Contract ERC20Pausable pausable token mint allows to mint when unpaused 
passed Contract ERC20Pausable pausable token mint reverts when trying to mint when paused 
passed Contract ERC20Pausable pausable token transfer allows to transfer when paused and then unpaused 
passed Contract ERC20Pausable pausable token transfer allows to transfer when unpaused 
passed Contract ERC20Pausable pausable token transfer from allows to transfer from when unpaused 
passed Contract ERC20Pausable pausable token transfer from allows to transfer when paused and then unpaused 
passed Contract ERC20Pausable pausable token transfer from reverts when trying to transfer from when paused 
passed Contract ERC20Pausable pausable token transfer reverts when trying to transfer when paused 
passed Contract ERC20Permit domain separator 
passed Contract ERC20Permit initial nonce is 0 
passed Contract ERC20Permit permit accepts owner signature 
passed Contract ERC20Permit permit rejects expired permit 
passed Contract ERC20Permit permit rejects other signature 
passed Contract ERC20Permit permit rejects reused signature 
passed Contract ERC20PresetFixedSupply burning decrements totalSupply 
passed Contract ERC20PresetFixedSupply burning holders can burn their tokens 
passed Contract ERC20PresetFixedSupply deployer has the balance equal to initial supply 
passed Contract ERC20PresetFixedSupply total supply is equal to initial supply 
passed Contract ERC20PresetMinterPauser burning holders can burn their tokens 
passed Contract ERC20PresetMinterPauser deployer has the default admin role 
passed Contract ERC20PresetMinterPauser deployer has the minter role 
passed Contract ERC20PresetMinterPauser deployer has the pauser role 
passed Contract ERC20PresetMinterPauser minter and pauser role admin is the default admin 
passed Contract ERC20PresetMinterPauser minting deployer can mint tokens 
passed Contract ERC20PresetMinterPauser minting other accounts cannot mint tokens 
passed Contract ERC20PresetMinterPauser pausing cannot mint while paused 
passed Contract ERC20PresetMinterPauser pausing deployer can pause 
passed Contract ERC20PresetMinterPauser pausing deployer can unpause 
passed Contract ERC20PresetMinterPauser pausing other accounts cannot pause 
passed Contract ERC20PresetMinterPauser pausing other accounts cannot unpause 
passed Contract ERC20 recover nothing to recover 
broken Contract ERC20 recover something to recover 
passed Contract ERC20 set decimals can set decimals during construction 
passed Contract ERC20Snapshot balanceOfAt reverts with a not yet created snapshot id 
passed Contract ERC20Snapshot balanceOfAt reverts with a snapshot id of 0 
passed Contract ERC20Snapshot balanceOfAt with initial snapshot with balance changes after the snapshot returns the balances before the changes 
passed Contract ERC20Snapshot balanceOfAt with initial snapshot with balance changes after the snapshot with a second snapshot after supply changes snapshots return
passed Contract ERC20Snapshot balanceOfAt with initial snapshot with balance changes after the snapshot with multiple snapshots after supply changes all posterior snapshots
passed Contract ERC20Snapshot balanceOfAt with initial snapshot with no balance changes after the snapshot returns the current balance for all accounts 
passed Contract ERC20Snapshot snapshot creates increasing snapshots ids starting from 1 
passed Contract ERC20Snapshot snapshot emits a snapshot event 
passed Contract ERC20Snapshot totalSupplyAt reverts with a not yet created snapshot id 
passed Contract ERC20Snapshot totalSupplyAt reverts with a snapshot id of 0 
passed Contract ERC20Snapshot totalSupplyAt with initial snapshot with no supply changes after the snapshot returns the current total supply 
passed Contract ERC20Snapshot totalSupplyAt with initial snapshot with supply changes after the snapshot returns the total supply before the changes 
passed Contract ERC20Snapshot totalSupplyAt with initial snapshot with supply changes after the snapshot with a second snapshot after supply changes snapshots return
passed Contract ERC20Snapshot totalSupplyAt with initial snapshot with supply changes after the snapshot with multiple snapshots after supply changes all posterior snapshots
passed Contract ERC20 total supply returns the total amount of tokens 
passed Contract ERC20 transfer from when the token owner is not the zero address when the recipient is not the zero address
passed Contract ERC20 transfer from when the token owner is not the zero address when the recipient is not the zero address
passed Contract ERC20 transfer from when the token owner is not the zero address when the recipient is not the zero address
passed Contract ERC20 transfer from when the token owner is not the zero address when the recipient is not the zero address
passed Contract ERC20 transfer from when the token owner is not the zero address when the recipient is not the zero address
passed Contract ERC20 transfer from when the token owner is not the zero address when the recipient is not the zero address
passed Contract ERC20 transfer from when the token owner is not the zero address when the recipient is not the zero address
passed Contract ERC20 transfer from when the token owner is not the zero address when the recipient is the zero address reverts
passed Contract ERC20 transfer from when the token owner is the zero address reverts 
passed Contract ERC20 transfer when the recipient is not the zero address when the sender does not have enough balance reverts 
passed Contract ERC20 transfer when the recipient is not the zero address when the sender does not have enough balance reverts 
passed Contract ERC20 transfer when the recipient is not the zero address when the sender transfers all balance emits a transfer event
passed Contract ERC20 transfer when the recipient is not the zero address when the sender transfers all balance emits a transfer event
passed Contract ERC20 transfer when the recipient is not the zero address when the sender transfers all balance transfers the requested amount
passed Contract ERC20 transfer when the recipient is not the zero address when the sender transfers all balance transfers the requested amount
passed Contract ERC20 transfer when the recipient is not the zero address when the sender transfers zero tokens emits a transfer event
passed Contract ERC20 transfer when the recipient is not the zero address when the sender transfers zero tokens emits a transfer event
passed Contract ERC20 transfer when the recipient is not the zero address when the sender transfers zero tokens transfers the requested amount
passed Contract ERC20 transfer when the recipient is not the zero address when the sender transfers zero tokens transfers the requested amount
passed Contract ERC20 transfer when the recipient is the zero address reverts 
passed Contract ERC20 transfer when the recipient is the zero address reverts 
passed Contract ERC20 transfer when the sender is the zero address reverts 
skipped Contract ERC20Votes change delegation call 
skipped Contract ERC20VotesComp change delegation call 
skipped Contract ERC20VotesComp Compound test suite balanceOf grants to initial account 
skipped Contract ERC20VotesComp Compound test suite getPriorVotes generally returns the voting balance at the appropriate checkpoint 
skipped Contract ERC20VotesComp Compound test suite getPriorVotes returns 0 if there are no checkpoints 
skipped Contract ERC20VotesComp Compound test suite getPriorVotes returns the latest block if last checkpoint block 
skipped Contract ERC20VotesComp Compound test suite getPriorVotes returns zero if first checkpoint block 
skipped Contract ERC20VotesComp Compound test suite getPriorVotes reverts if block number current block 
skipped Contract ERC20VotesComp Compound test suite numCheckpoints does not add more than one checkpoint in a block 
skipped Contract ERC20VotesComp Compound test suite numCheckpoints returns the number of checkpoints for a delegate 
skipped Contract ERC20VotesComp domain separator 
skipped Contract ERC20VotesComp getPastTotalSupply generally returns the voting balance at the appropriate checkpoint 
skipped Contract ERC20VotesComp getPastTotalSupply returns 0 if there are no checkpoints 
skipped Contract ERC20VotesComp getPastTotalSupply returns the latest block if last checkpoint block 
skipped Contract ERC20VotesComp getPastTotalSupply returns zero if first checkpoint block 
skipped Contract ERC20VotesComp getPastTotalSupply reverts if block number current block 
skipped Contract ERC20VotesComp initial nonce is 0 
skipped Contract ERC20VotesComp minting restriction 
skipped Contract ERC20Votes Compound test suite balanceOf grants to initial account 
skipped Contract ERC20Votes Compound test suite getPastVotes generally returns the voting balance at the appropriate checkpoint 
skipped Contract ERC20Votes Compound test suite getPastVotes returns 0 if there are no checkpoints 
skipped Contract ERC20Votes Compound test suite getPastVotes returns the latest block if last checkpoint block 
skipped Contract ERC20Votes Compound test suite getPastVotes returns zero if first checkpoint block 
skipped Contract ERC20Votes Compound test suite getPastVotes reverts if block number current block 
skipped Contract ERC20Votes Compound test suite numCheckpoints does not add more than one checkpoint in a block 
skipped Contract ERC20Votes Compound test suite numCheckpoints returns the number of checkpoints for a delegate 
skipped Contract ERC20VotesComp set delegation call delegation with balance 
skipped Contract ERC20VotesComp set delegation call delegation without balance 
skipped Contract ERC20VotesComp set delegation with signature accept signed delegation 
skipped Contract ERC20VotesComp set delegation with signature rejects bad delegatee 
skipped Contract ERC20VotesComp set delegation with signature rejects bad nonce 
skipped Contract ERC20VotesComp set delegation with signature rejects expired permit 
skipped Contract ERC20VotesComp set delegation with signature rejects reused signature 
skipped Contract ERC20VotesComp transfers full delegation 
skipped Contract ERC20VotesComp transfers no delegation 
skipped Contract ERC20VotesComp transfers receiver delegation 
skipped Contract ERC20VotesComp transfers sender delegation 
skipped Contract ERC20Votes domain separator 
skipped Contract ERC20Votes getPastTotalSupply generally returns the voting balance at the appropriate checkpoint 
skipped Contract ERC20Votes getPastTotalSupply returns 0 if there are no checkpoints 
skipped Contract ERC20Votes getPastTotalSupply returns the latest block if last checkpoint block 
skipped Contract ERC20Votes getPastTotalSupply returns zero if first checkpoint block 
skipped Contract ERC20Votes getPastTotalSupply reverts if block number current block 
skipped Contract ERC20Votes initial nonce is 0 
skipped Contract ERC20Votes minting restriction 
skipped Contract ERC20Votes set delegation call delegation with balance 
skipped Contract ERC20Votes set delegation call delegation without balance 
skipped Contract ERC20Votes set delegation with signature accept signed delegation 
skipped Contract ERC20Votes set delegation with signature rejects bad delegatee 
skipped Contract ERC20Votes set delegation with signature rejects bad nonce 
skipped Contract ERC20Votes set delegation with signature rejects expired permit 
skipped Contract ERC20Votes set delegation with signature rejects reused signature 
skipped Contract ERC20Votes transfers full delegation 
skipped Contract ERC20Votes transfers no delegation 
skipped Contract ERC20Votes transfers receiver delegation 
skipped Contract ERC20Votes transfers sender delegation 
broken Contract ERC20 withdraw entire balance 
passed Contract ERC20 withdraw missing balance 
broken Contract ERC20 withdraw to other account 
passed Contract ERC20 withdraw valid 
passed Contract ERC721Burnable like a burnable ERC721 burn when successful burns the given token ID and adjusts the balance of the owner
passed Contract ERC721Burnable like a burnable ERC721 burn when successful emits a burn event 
passed Contract ERC721Burnable like a burnable ERC721 burn when the given token ID was not tracked by this contract reverts 
passed Contract ERC721Burnable like a burnable ERC721 burn when there is a previous approval burned getApproved reverts 
passed Contract ERC721 burn reverts when burning a non existent token id 
passed Contract ERC721 burn with minted tokens with burnt token deletes the token 
passed Contract ERC721 burn with minted tokens with burnt token emits an Approval event 
passed Contract ERC721 burn with minted tokens with burnt token emits a Transfer event 
passed Contract ERC721 burn with minted tokens with burnt token reverts when burning a token id that has been deleted 
failed Contract ERC721 Contract interface ERC165 ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract ERC721 Contract interface ERC165 ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract ERC721 Contract interface ERC165 supportsInterface bytes4 has to be implemented 
passed Contract ERC721 Contract interface ERC721 approve address uint256 has to be implemented 
passed Contract ERC721 Contract interface ERC721 balanceOf address has to be implemented 
passed Contract ERC721 Contract interface ERC721 ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract ERC721 Contract interface ERC721 ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract ERC721 Contract interface ERC721 getApproved uint256 has to be implemented 
passed Contract ERC721 Contract interface ERC721 isApprovedForAll address address has to be implemented 
passed Contract ERC721 Contract interface ERC721Metadata ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract ERC721 Contract interface ERC721Metadata ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract ERC721 Contract interface ERC721Metadata name has to be implemented 
passed Contract ERC721 Contract interface ERC721Metadata symbol has to be implemented 
passed Contract ERC721 Contract interface ERC721Metadata tokenURI uint256 has to be implemented 
passed Contract ERC721 Contract interface ERC721 ownerOf uint256 has to be implemented 
passed Contract ERC721 Contract interface ERC721 safeTransferFrom address address uint256 bytes has to be implemented 
passed Contract ERC721 Contract interface ERC721 safeTransferFrom address address uint256 has to be implemented 
passed Contract ERC721 Contract interface ERC721 setApprovalForAll address bool has to be implemented 
passed Contract ERC721 Contract interface ERC721 transferFrom address address uint256 has to be implemented 
broken Contract ERC721Enumerable Contract interface ERC165 ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract ERC721Holder receives an ERC721 token 
passed Contract ERC721 metadata has a name 
passed Contract ERC721 metadata has a symbol 
skipped Contract ERC721 metadata token URI base URI base URI can be set 
skipped Contract ERC721 metadata token URI base URI base URI is added as a prefix to the token URI 
skipped Contract ERC721 metadata token URI base URI token URI can be changed by changing the base URI 
passed Contract ERC721 metadata token URI return empty string by default 
passed Contract ERC721 metadata token URI reverts when queried for non existent token id 
passed Contract ERC721 mint address uint256 reverts with a null destination address 
passed Contract ERC721 mint address uint256 with minted token creates the token 
passed Contract ERC721 mint address uint256 with minted token emits a Transfer event 
passed Contract ERC721 mint address uint256 with minted token reverts when adding a token id that already exists 
broken Contract ERC721Pausable Uncaught error outside test suite 
broken Contract ERC721Pausable when token is paused reverts when trying to transferFrom 
passed Contract ERC721PresetMinterPauserAutoId burning holders can burn their tokens 
failed Contract ERC721PresetMinterPauserAutoId Contract interface AccessControlEnumerable ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract ERC721PresetMinterPauserAutoId Contract interface AccessControlEnumerable ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract ERC721PresetMinterPauserAutoId Contract interface AccessControlEnumerable getRoleMember bytes32 uint256 has to be implemented 
passed Contract ERC721PresetMinterPauserAutoId Contract interface AccessControlEnumerable getRoleMemberCount bytes32 has to be implemented 
failed Contract ERC721PresetMinterPauserAutoId Contract interface AccessControl ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract ERC721PresetMinterPauserAutoId Contract interface AccessControl ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract ERC721PresetMinterPauserAutoId Contract interface AccessControl getRoleAdmin bytes32 has to be implemented 
passed Contract ERC721PresetMinterPauserAutoId Contract interface AccessControl grantRole bytes32 address has to be implemented 
passed Contract ERC721PresetMinterPauserAutoId Contract interface AccessControl hasRole bytes32 address has to be implemented 
passed Contract ERC721PresetMinterPauserAutoId Contract interface AccessControl renounceRole bytes32 address has to be implemented 
passed Contract ERC721PresetMinterPauserAutoId Contract interface AccessControl revokeRole bytes32 address has to be implemented 
passed Contract ERC721PresetMinterPauserAutoId Contract interface ERC721 approve address uint256 has to be implemented 
passed Contract ERC721PresetMinterPauserAutoId Contract interface ERC721 balanceOf address has to be implemented 
passed Contract ERC721PresetMinterPauserAutoId Contract interface ERC721Enumerable ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract ERC721PresetMinterPauserAutoId Contract interface ERC721Enumerable ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract ERC721PresetMinterPauserAutoId Contract interface ERC721Enumerable tokenByIndex uint256 has to be implemented 
passed Contract ERC721PresetMinterPauserAutoId Contract interface ERC721Enumerable tokenOfOwnerByIndex address uint256 has to be implemented 
passed Contract ERC721PresetMinterPauserAutoId Contract interface ERC721Enumerable totalSupply has to be implemented 
failed Contract ERC721PresetMinterPauserAutoId Contract interface ERC721 ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract ERC721PresetMinterPauserAutoId Contract interface ERC721 ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract ERC721PresetMinterPauserAutoId Contract interface ERC721 getApproved uint256 has to be implemented 
passed Contract ERC721PresetMinterPauserAutoId Contract interface ERC721 isApprovedForAll address address has to be implemented 
passed Contract ERC721PresetMinterPauserAutoId Contract interface ERC721 ownerOf uint256 has to be implemented 
passed Contract ERC721PresetMinterPauserAutoId Contract interface ERC721 safeTransferFrom address address uint256 bytes has to be implemented 
passed Contract ERC721PresetMinterPauserAutoId Contract interface ERC721 safeTransferFrom address address uint256 has to be implemented 
passed Contract ERC721PresetMinterPauserAutoId Contract interface ERC721 setApprovalForAll address bool has to be implemented 
passed Contract ERC721PresetMinterPauserAutoId Contract interface ERC721 transferFrom address address uint256 has to be implemented 
passed Contract ERC721PresetMinterPauserAutoId deployer has the default admin role 
passed Contract ERC721PresetMinterPauserAutoId deployer has the minter role 
passed Contract ERC721PresetMinterPauserAutoId minter role admin is the default admin 
passed Contract ERC721PresetMinterPauserAutoId minting deployer can mint tokens 
passed Contract ERC721PresetMinterPauserAutoId minting other accounts cannot mint tokens 
passed Contract ERC721PresetMinterPauserAutoId pausing cannot mint while paused 
passed Contract ERC721PresetMinterPauserAutoId pausing deployer can pause 
passed Contract ERC721PresetMinterPauserAutoId pausing deployer can unpause 
passed Contract ERC721PresetMinterPauserAutoId pausing other accounts cannot pause 
passed Contract ERC721PresetMinterPauserAutoId pausing other accounts cannot unpause 
passed Contract ERC721PresetMinterPauserAutoId token has correct name 
passed Contract ERC721PresetMinterPauserAutoId token has correct symbol 
passed Contract ERC721URIStorage token URI base URI can be set 
passed Contract ERC721URIStorage token URI base URI is added as a prefix to the token URI 
passed Contract ERC721URIStorage token URI can be set for a token id 
passed Contract ERC721URIStorage token URI it is empty by default 
passed Contract ERC721URIStorage token URI reverts when queried for non existent token id 
passed Contract ERC721URIStorage token URI reverts when setting for non existent token id 
passed Contract ERC721URIStorage token URI tokenId is appended to base URI for tokens with no URI 
passed Contract ERC721URIStorage token URI tokens without URI can be burnt 
passed Contract ERC721URIStorage token URI tokens with URI can be burnt 
passed Contract ERC721URIStorage token URI token URI can be changed by changing the base URI 
passed Contract ERC721 with minted tokens approve when approving a non zero address when there was a prior approval to a different
passed Contract ERC721 with minted tokens approve when approving a non zero address when there was a prior approval to a different
passed Contract ERC721 with minted tokens approve when approving a non zero address when there was a prior approval to the same
passed Contract ERC721 with minted tokens approve when approving a non zero address when there was a prior approval to the same
passed Contract ERC721 with minted tokens approve when approving a non zero address when there was no prior approval emits an approval
passed Contract ERC721 with minted tokens approve when approving a non zero address when there was no prior approval sets the approval
passed Contract ERC721 with minted tokens approve when clearing approval when there was a prior approval clears approval for the token 
passed Contract ERC721 with minted tokens approve when clearing approval when there was a prior approval emits an approval event 
passed Contract ERC721 with minted tokens approve when clearing approval when there was no prior approval clears approval for the token 
passed Contract ERC721 with minted tokens approve when clearing approval when there was no prior approval emits an approval event 
passed Contract ERC721 with minted tokens approve when the address that receives the approval is the owner reverts 
passed Contract ERC721 with minted tokens approve when the given token ID does not exist reverts 
passed Contract ERC721 with minted tokens approve when the sender does not own the given token ID reverts 
passed Contract ERC721 with minted tokens approve when the sender is an operator emits an approval event 
passed Contract ERC721 with minted tokens approve when the sender is an operator sets the approval for the target address 
passed Contract ERC721 with minted tokens approve when the sender is approved for the given token ID reverts 
passed Contract ERC721 with minted tokens balanceOf when querying the zero address throws 
passed Contract ERC721 with minted tokens balanceOf when the given address does not own any tokens returns 0 
passed Contract ERC721 with minted tokens balanceOf when the given address owns some tokens returns the amount of tokens owned by the
passed Contract ERC721 with minted tokens getApproved when token has been minted should return the zero address 
passed Contract ERC721 with minted tokens getApproved when token has been minted when account has been approved returns approved account 
passed Contract ERC721 with minted tokens getApproved when token is not minted reverts 
passed Contract ERC721 with minted tokens ownerOf when the given token ID was not tracked by this token reverts 
passed Contract ERC721 with minted tokens ownerOf when the given token ID was tracked by this token returns the owner of the
broken Contract ERC721 with minted tokens safe mint via safeMint calls onERC721Received — with data 
passed Contract ERC721 with minted tokens safe mint via safeMint calls onERC721Received — without data 
passed Contract ERC721 with minted tokens safe mint via safeMint to a contract that does not implement the required function reverts 
passed Contract ERC721 with minted tokens safe mint via safeMint to a receiver contract returning unexpected value reverts 
passed Contract ERC721 with minted tokens safe mint via safeMint to a receiver contract that panics reverts 
passed Contract ERC721 with minted tokens safe mint via safeMint to a receiver contract that reverts with message reverts 
passed Contract ERC721 with minted tokens safe mint via safeMint to a receiver contract that reverts without message reverts 
passed Contract ERC721 with minted tokens setApprovalForAll when the operator is the owner reverts 
passed Contract ERC721 with minted tokens setApprovalForAll when the operator willing to approve is not the owner when the operator was already
passed Contract ERC721 with minted tokens setApprovalForAll when the operator willing to approve is not the owner when the operator was already
passed Contract ERC721 with minted tokens setApprovalForAll when the operator willing to approve is not the owner when the operator was set
passed Contract ERC721 with minted tokens setApprovalForAll when the operator willing to approve is not the owner when the operator was set
passed Contract ERC721 with minted tokens setApprovalForAll when the operator willing to approve is not the owner when the operator was set
passed Contract ERC721 with minted tokens setApprovalForAll when the operator willing to approve is not the owner when there is no operator
passed Contract ERC721 with minted tokens setApprovalForAll when the operator willing to approve is not the owner when there is no operator
broken Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract calls onERC721Received 
broken Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract calls onERC721Received from approved 
passed Contract ERC721 with minted tokens transfers via safeTransferFrom to a contract that does not implement the required function reverts 
passed Contract ERC721 with minted tokens transfers via safeTransferFrom to a receiver contract returning unexpected value reverts 
passed Contract ERC721 with minted tokens transfers via safeTransferFrom to a receiver contract that panics reverts 
passed Contract ERC721 with minted tokens transfers via safeTransferFrom to a receiver contract that reverts with message reverts 
passed Contract ERC721 with minted tokens transfers via safeTransferFrom to a receiver contract that reverts without message reverts 
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when called by the approved individual adjusts
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when called by the approved individual adjusts
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when called by the approved individual clears
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when called by the approved individual emits
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when called by the approved individual emits
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when called by the approved individual transfers
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when called by the operator adjusts owners
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when called by the operator adjusts owners
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when called by the operator clears the
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when called by the operator emits a
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when called by the operator emits an
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when called by the operator transfers the
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when called by the owner adjusts owners
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when called by the owner adjusts owners
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when called by the owner clears the
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when called by the owner emits a
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when called by the owner emits an
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when called by the owner transfers the
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when called by the owner without an
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when called by the owner without an
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when called by the owner without an
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when called by the owner without an
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when called by the owner without an
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when called by the owner without an
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when sent to the owner clears the
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when sent to the owner emits only
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when sent to the owner keeps ownership
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when sent to the owner keeps same
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when sent to the owner keeps the
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when the address of the previous owner
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when the address to transfer the token
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when the given token ID does not
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a user account when the sender is not authorized for
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract calls onERC721Received from approved 
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when called by the approved individual
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when called by the approved individual
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when called by the approved individual
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when called by the approved individual
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when called by the approved individual
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when called by the approved individual
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when called by the operator adjusts
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when called by the operator adjusts
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when called by the operator clears
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when called by the operator emits
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when called by the operator emits
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when called by the operator transfers
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when called by the owner adjusts
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when called by the owner adjusts
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when called by the owner clears
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when called by the owner emits
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when called by the owner emits
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when called by the owner transfers
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when called by the owner without
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when called by the owner without
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when called by the owner without
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when called by the owner without
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when called by the owner without
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when called by the owner without
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when sent to the owner clears
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when sent to the owner emits
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when sent to the owner keeps
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when sent to the owner keeps
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when sent to the owner keeps
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when the address of the previous
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when the address to transfer the
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when the given token ID does
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract when the sender is not authorized
passed Contract ERC721 with minted tokens transfers via safeTransferFrom with data to a valid receiver contract with an invalid token id reverts
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when called by the approved individual adjusts
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when called by the approved individual adjusts
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when called by the approved individual clears
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when called by the approved individual emits
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when called by the approved individual emits
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when called by the approved individual transfers
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when called by the operator adjusts owners
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when called by the operator adjusts owners
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when called by the operator clears the
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when called by the operator emits a
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when called by the operator emits an
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when called by the operator transfers the
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when called by the owner adjusts owners
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when called by the owner adjusts owners
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when called by the owner clears the
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when called by the owner emits a
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when called by the owner emits an
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when called by the owner transfers the
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when called by the owner without an
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when called by the owner without an
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when called by the owner without an
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when called by the owner without an
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when called by the owner without an
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when called by the owner without an
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when sent to the owner clears the
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when sent to the owner emits only
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when sent to the owner keeps ownership
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when sent to the owner keeps same
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when sent to the owner keeps the
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when the address of the previous owner
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when the address to transfer the token
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when the given token ID does not
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a user account when the sender is not authorized for
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract calls onERC721Received 
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when called by the approved individual
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when called by the approved individual
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when called by the approved individual
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when called by the approved individual
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when called by the approved individual
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when called by the approved individual
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when called by the operator adjusts
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when called by the operator adjusts
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when called by the operator clears
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when called by the operator emits
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when called by the operator emits
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when called by the operator transfers
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when called by the owner adjusts
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when called by the owner adjusts
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when called by the owner clears
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when called by the owner emits
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when called by the owner emits
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when called by the owner transfers
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when called by the owner without
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when called by the owner without
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when called by the owner without
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when called by the owner without
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when called by the owner without
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when called by the owner without
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when sent to the owner clears
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when sent to the owner emits
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when sent to the owner keeps
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when sent to the owner keeps
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when sent to the owner keeps
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when the address of the previous
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when the address to transfer the
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when the given token ID does
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract when the sender is not authorized
passed Contract ERC721 with minted tokens transfers via safeTransferFrom without data to a valid receiver contract with an invalid token id reverts
passed Contract ERC721 with minted tokens transfers via transferFrom when called by the approved individual adjusts owners balances 
passed Contract ERC721 with minted tokens transfers via transferFrom when called by the approved individual adjusts owners tokens by index 
passed Contract ERC721 with minted tokens transfers via transferFrom when called by the approved individual clears the approval for the token ID
passed Contract ERC721 with minted tokens transfers via transferFrom when called by the approved individual emits an Approval event 
passed Contract ERC721 with minted tokens transfers via transferFrom when called by the approved individual emits a Transfer event 
passed Contract ERC721 with minted tokens transfers via transferFrom when called by the approved individual transfers the ownership of the given token
passed Contract ERC721 with minted tokens transfers via transferFrom when called by the operator adjusts owners balances 
passed Contract ERC721 with minted tokens transfers via transferFrom when called by the operator adjusts owners tokens by index 
passed Contract ERC721 with minted tokens transfers via transferFrom when called by the operator clears the approval for the token ID 
passed Contract ERC721 with minted tokens transfers via transferFrom when called by the operator emits an Approval event 
passed Contract ERC721 with minted tokens transfers via transferFrom when called by the operator emits a Transfer event 
passed Contract ERC721 with minted tokens transfers via transferFrom when called by the operator transfers the ownership of the given token ID
passed Contract ERC721 with minted tokens transfers via transferFrom when called by the owner adjusts owners balances 
passed Contract ERC721 with minted tokens transfers via transferFrom when called by the owner adjusts owners tokens by index 
passed Contract ERC721 with minted tokens transfers via transferFrom when called by the owner clears the approval for the token ID 
passed Contract ERC721 with minted tokens transfers via transferFrom when called by the owner emits an Approval event 
passed Contract ERC721 with minted tokens transfers via transferFrom when called by the owner emits a Transfer event 
passed Contract ERC721 with minted tokens transfers via transferFrom when called by the owner transfers the ownership of the given token ID
passed Contract ERC721 with minted tokens transfers via transferFrom when called by the owner without an approved user adjusts owners balances 
passed Contract ERC721 with minted tokens transfers via transferFrom when called by the owner without an approved user adjusts owners tokens by
passed Contract ERC721 with minted tokens transfers via transferFrom when called by the owner without an approved user clears the approval for
passed Contract ERC721 with minted tokens transfers via transferFrom when called by the owner without an approved user emits an Approval event
passed Contract ERC721 with minted tokens transfers via transferFrom when called by the owner without an approved user emits a Transfer event
passed Contract ERC721 with minted tokens transfers via transferFrom when called by the owner without an approved user transfers the ownership of
passed Contract ERC721 with minted tokens transfers via transferFrom when sent to the owner clears the approval for the token ID 
passed Contract ERC721 with minted tokens transfers via transferFrom when sent to the owner emits only a transfer event 
passed Contract ERC721 with minted tokens transfers via transferFrom when sent to the owner keeps ownership of the token 
passed Contract ERC721 with minted tokens transfers via transferFrom when sent to the owner keeps same tokens by index 
passed Contract ERC721 with minted tokens transfers via transferFrom when sent to the owner keeps the owner balance 
passed Contract ERC721 with minted tokens transfers via transferFrom when the address of the previous owner is incorrect reverts 
passed Contract ERC721 with minted tokens transfers via transferFrom when the address to transfer the token to is the zero address reverts
passed Contract ERC721 with minted tokens transfers via transferFrom when the given token ID does not exist reverts 
passed Contract ERC721 with minted tokens transfers via transferFrom when the sender is not authorized for the token id reverts 
broken Contract ERC777PresetFixedSupply returns the name 
broken Contract ERC777 relative order of hooks send 
broken Contract ERC777 with default operators does not emit AuthorizedOperator events for default operators 
broken Contract ERC777 with no default operators default operators list is empty 
failed Contract Escrow as an escrow deposits can accept a single deposit 
failed Contract Escrow as an escrow deposits can add multiple deposits on a single account 
failed Contract Escrow as an escrow deposits can track deposits to multiple accounts 
passed Contract Escrow as an escrow deposits can accept an empty deposit 
passed Contract Escrow as an escrow deposits emits a deposited event 
passed Contract Escrow as an escrow deposits only the owner can deposit 
broken Contract Escrow as an escrow withdrawals can withdraw payments 
passed Contract Escrow as an escrow withdrawals can do an empty withdrawal 
passed Contract Escrow as an escrow withdrawals emits a withdrawn event 
passed Contract Escrow as an escrow withdrawals only the owner can withdraw 
passed Contract Governor Cancel After deadline run 
passed Contract Governor Cancel After execution run 
passed Contract Governor Cancel After proposal run 
passed Contract Governor Cancel After vote run 
passed Contract Governor Cancel Before proposal run 
skipped Contract GovernorCompatibilityBravo deployment check 
broken Contract GovernorCompatibilityBravo nominal run 
skipped Contract GovernorComp deployment check 
failed Contract GovernorComp voting with comp token after each hook for run 
broken Contract GovernorComp voting with comp token run 
failed Contract Governor Contract interface ERC165 ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract Governor Contract interface ERC165 ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract Governor Contract interface ERC165 supportsInterface bytes4 has to be implemented 
passed Contract Governor Contract interface Governor castVoteBySig uint256 uint8 uint8 bytes32 bytes32 has to be implemented 
passed Contract Governor Contract interface Governor castVote uint256 uint8 has to be implemented 
passed Contract Governor Contract interface Governor castVoteWithReason uint256 uint8 string has to be implemented 
passed Contract Governor Contract interface Governor COUNTING MODE has to be implemented 
passed Contract Governor Contract interface Governor ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract Governor Contract interface Governor ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract Governor Contract interface Governor execute address uint256 bytes bytes32 has to be implemented 
passed Contract Governor Contract interface Governor getVotes address uint256 has to be implemented 
passed Contract Governor Contract interface Governor hashProposal address uint256 bytes bytes32 has to be implemented 
passed Contract Governor Contract interface Governor hasVoted uint256 address has to be implemented 
passed Contract Governor Contract interface Governor name has to be implemented 
passed Contract Governor Contract interface Governor proposalDeadline uint256 has to be implemented 
passed Contract Governor Contract interface Governor proposalSnapshot uint256 has to be implemented 
passed Contract Governor Contract interface Governor propose address uint256 bytes string has to be implemented 
passed Contract Governor Contract interface Governor quorum uint256 has to be implemented 
passed Contract Governor Contract interface Governor state uint256 has to be implemented 
passed Contract Governor Contract interface Governor version has to be implemented 
passed Contract Governor Contract interface Governor votingDelay has to be implemented 
passed Contract Governor Contract interface Governor votingPeriod has to be implemented 
skipped Contract Governor deployment check 
skipped Contract Governor Proposal length empty 
skipped Contract Governor Proposal length missmatch 1 
skipped Contract Governor Proposal length missmatch 2 
skipped Contract Governor Proposal length missmatch 3 
broken Contract Governor scenario double cast run 
broken Contract Governor scenario duplicate executed proposal run 
broken Contract Governor scenario duplicate pending proposal run 
passed Contract Governor scenario Invalid vote type run 
passed Contract Governor scenario missing proposal run 
broken Contract Governor scenario nominal after each hook for run 
failed Contract Governor scenario nominal run 
broken Contract Governor scenario quorum not reached run 
passed Contract Governor scenario receiver revert without reason run 
broken Contract Governor scenario receiver revert with reason run 
broken Contract Governor scenario score not reached run 
broken Contract Governor scenario send ethers after each hook for run 
failed Contract Governor scenario send ethers run 
passed Contract Governor scenario vote not over run 
failed Contract Governor scenario vote with signature after each hook for run 
broken Contract Governor scenario vote with signature run 
passed Contract Governor Settings update setProposalThreshold run 
passed Contract Governor Settings update setVotingDelay run 
passed Contract Governor Settings update setVotingPeriod run 
broken Contract Governor Settings update setVotingPeriod to 0 run 
skipped Contract Governor Settings update update protected setProposalThreshold 
skipped Contract Governor Settings update update protected setVotingDelay 
skipped Contract Governor Settings update update protected setVotingPeriod 
passed Contract Governor state Defeated run 
failed Contract Governor state Executed after each hook for run 
broken Contract Governor state Executed run 
failed Contract Governor state Pending Active after each hook for run 
passed Contract Governor state Pending Active run 
passed Contract Governor state Succeeded run 
passed Contract Governor state Unset run 
broken Contract GovernorTimelockCompound cancel after queue prevents executing after each hook for run 
passed Contract GovernorTimelockCompound cancel after queue prevents executing run 
passed Contract GovernorTimelockCompound cancel before queue prevents scheduling run 
failed Contract GovernorTimelockCompound Contract interface ERC165 ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract GovernorTimelockCompound Contract interface ERC165 ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract GovernorTimelockCompound Contract interface ERC165 supportsInterface bytes4 has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor castVoteBySig uint256 uint8 uint8 bytes32 bytes32 has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor castVote uint256 uint8 has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor castVoteWithReason uint256 uint8 string has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor COUNTING MODE has to be implemented 
failed Contract GovernorTimelockCompound Contract interface Governor ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract GovernorTimelockCompound Contract interface Governor ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract GovernorTimelockCompound Contract interface Governor execute address uint256 bytes bytes32 has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor getVotes address uint256 has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor hashProposal address uint256 bytes bytes32 has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor hasVoted uint256 address has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor name has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor proposalDeadline uint256 has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor proposalSnapshot uint256 has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor propose address uint256 bytes string has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor quorum uint256 has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor state uint256 has to be implemented 
passed Contract GovernorTimelockCompound Contract interface GovernorTimelock ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract GovernorTimelockCompound Contract interface GovernorTimelock ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract GovernorTimelockCompound Contract interface GovernorTimelock proposalEta uint256 has to be implemented 
passed Contract GovernorTimelockCompound Contract interface GovernorTimelock queue address uint256 bytes bytes32 has to be implemented 
passed Contract GovernorTimelockCompound Contract interface GovernorTimelock timelock has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor version has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor votingDelay has to be implemented 
passed Contract GovernorTimelockCompound Contract interface Governor votingPeriod has to be implemented 
passed Contract GovernorTimelockCompound deplicated underlying call run 
skipped Contract GovernorTimelockCompound doesn t accept ether transfers 
broken Contract GovernorTimelockCompound nominal after each hook for run 
broken Contract GovernorTimelockCompound nominal run 
passed Contract GovernorTimelockCompound not queued run 
skipped Contract GovernorTimelockCompound post deployment check 
failed Contract GovernorTimelockCompound re queue re execute after each hook for run 
broken Contract GovernorTimelockCompound re queue re execute run 
passed Contract GovernorTimelockCompound to early run 
failed Contract GovernorTimelockCompound to late after each hook for run 
failed Contract GovernorTimelockCompound to late run 
broken Contract GovernorTimelockCompound transfer timelock to new governor using workflow after each hook for run 
broken Contract GovernorTimelockCompound transfer timelock to new governor using workflow run 
skipped Contract GovernorTimelockCompound updateTimelock protected 
broken Contract GovernorTimelockCompound updateTimelock using workflow after each hook for run 
broken Contract GovernorTimelockCompound updateTimelock using workflow run 
broken Contract GovernorTimelockControl cancel after queue prevents execution run 
failed Contract GovernorTimelockControl cancel after queue prevents execution after each hook for run 
passed Contract GovernorTimelockControl cancel before queue prevents scheduling run 
failed Contract GovernorTimelockControl Contract interface ERC165 ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract GovernorTimelockControl Contract interface ERC165 ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract GovernorTimelockControl Contract interface ERC165 supportsInterface bytes4 has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor castVoteBySig uint256 uint8 uint8 bytes32 bytes32 has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor castVote uint256 uint8 has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor castVoteWithReason uint256 uint8 string has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor COUNTING MODE has to be implemented 
failed Contract GovernorTimelockControl Contract interface Governor ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract GovernorTimelockControl Contract interface Governor ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract GovernorTimelockControl Contract interface Governor execute address uint256 bytes bytes32 has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor getVotes address uint256 has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor hashProposal address uint256 bytes bytes32 has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor hasVoted uint256 address has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor name has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor proposalDeadline uint256 has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor proposalSnapshot uint256 has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor propose address uint256 bytes string has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor quorum uint256 has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor state uint256 has to be implemented 
passed Contract GovernorTimelockControl Contract interface GovernorTimelock ERC165 s supportsInterface bytes4 claims support skip on coverage 
passed Contract GovernorTimelockControl Contract interface GovernorTimelock ERC165 s supportsInterface bytes4 uses less than 30k gas skip on coverage 
passed Contract GovernorTimelockControl Contract interface GovernorTimelock proposalEta uint256 has to be implemented 
passed Contract GovernorTimelockControl Contract interface GovernorTimelock queue address uint256 bytes bytes32 has to be implemented 
passed Contract GovernorTimelockControl Contract interface GovernorTimelock timelock has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor version has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor votingDelay has to be implemented 
passed Contract GovernorTimelockControl Contract interface Governor votingPeriod has to be implemented 
skipped Contract GovernorTimelockControl doesn t accept ether transfers 
broken Contract GovernorTimelockControl executed by other proposer after each hook for run 
passed Contract GovernorTimelockControl executed by other proposer run 
broken Contract GovernorTimelockControl nominal after each hook for run 
broken Contract GovernorTimelockControl nominal run 
failed Contract GovernorTimelockControl not queued after each hook for run 
broken Contract GovernorTimelockControl not queued run 
skipped Contract GovernorTimelockControl post deployment check 
failed Contract GovernorTimelockControl re queue re execute after each hook for run 
broken Contract GovernorTimelockControl re queue re execute run 
passed Contract GovernorTimelockControl to early run 
skipped Contract GovernorTimelockControl updateTimelock protected 
broken Contract GovernorTimelockControl updateTimelock using workflow after each hook for run 
broken Contract GovernorTimelockControl updateTimelock using workflow run 
skipped Contract GovernorVotesQuorumFraction deployment check 
passed Contract GovernorVotesQuorumFraction quroum not reached run 
passed Contract GovernorVotesQuorumFraction update quorum over the maximum run 
passed Contract GovernorVotesQuorumFraction update quorum ratio through proposal run 
passed Contract Initializable basic testing without inheritance after initialize initializer does not run again 
passed Contract Initializable basic testing without inheritance after initialize initializer has run 
passed Contract Initializable basic testing without inheritance after nested initialize initializer has run 
passed Contract Initializable basic testing without inheritance before initialize initializer has not run 
passed Contract Initializable complex testing with inheritance initializes child 
passed Contract Initializable complex testing with inheritance initializes father 
passed Contract Initializable complex testing with inheritance initializes gramps 
passed Contract Initializable complex testing with inheritance initializes human 
passed Contract Initializable complex testing with inheritance initializes mother 
passed Contract MinimalForwarder with message execute invalid signature tampered data 
passed Contract MinimalForwarder with message execute invalid signature tampered from 
passed Contract MinimalForwarder with message execute invalid signature tampered nonce 
passed Contract MinimalForwarder with message execute invalid signature tampered signature 
passed Contract MinimalForwarder with message execute invalid signature tampered to 
passed Contract MinimalForwarder with message execute invalid signature tampered value 
passed Contract MinimalForwarder with message execute valid signature success 
passed Contract MinimalForwarder with message verify invalid signature tampered data 
passed Contract MinimalForwarder with message verify invalid signature tampered from 
passed Contract MinimalForwarder with message verify invalid signature tampered nonce 
passed Contract MinimalForwarder with message verify invalid signature tampered signature 
passed Contract MinimalForwarder with message verify invalid signature tampered to 
passed Contract MinimalForwarder with message verify invalid signature tampered value 
passed Contract MinimalForwarder with message verify valid signature success 
passed Contract MulticallToken batches function calls 
passed Contract MulticallToken bubbles up revert reasons 
passed Contract MulticallToken returns an array with the result of each call 
passed Contract MulticallToken reverts previous calls 
passed Contract Pausable when unpaused cannot take drastic measure in non pause 
passed Contract Pausable when unpaused can perform normal process in non pause 
passed Contract Pausable when unpaused when paused can take a drastic measure in a pause 
passed Contract Pausable when unpaused when paused cannot perform normal process in pause 
passed Contract Pausable when unpaused when paused emits a Paused event 
passed Contract Pausable when unpaused when paused reverts when re pausing 
passed Contract Pausable when unpaused when paused unpausing is unpausable by the pauser 
passed Contract Pausable when unpaused when paused unpausing when unpaused emits an Unpaused event 
passed Contract Pausable when unpaused when paused unpausing when unpaused reverts when re unpausing 
passed Contract Pausable when unpaused when paused unpausing when unpaused should prevent drastic measure 
passed Contract Pausable when unpaused when paused unpausing when unpaused should resume allowing normal process 
failed Contract PaymentSplitter once deployed accepts payments Ether 
passed Contract PaymentSplitter once deployed accepts payments Token 
failed Contract PaymentSplitter once deployed distributes funds to payees Ether 
passed Contract PaymentSplitter once deployed distributes funds to payees Token 
passed Contract PaymentSplitter once deployed has payees 
passed Contract PaymentSplitter once deployed has total shares 
failed Contract PaymentSplitter once deployed release Ether reverts if no funds to claim 
passed Contract PaymentSplitter once deployed release Ether reverts if non payee want to claim 
passed Contract PaymentSplitter once deployed release Token reverts if no funds to claim 
passed Contract PaymentSplitter once deployed release Token reverts if non payee want to claim 
passed Contract PaymentSplitter once deployed shares does not store shares if address is not payee 
passed Contract PaymentSplitter once deployed shares stores shares if address is payee 
passed Contract PaymentSplitter rejects an empty set of payees 
passed Contract PaymentSplitter rejects more payees than shares 
passed Contract PaymentSplitter rejects more shares than payees 
passed Contract PaymentSplitter rejects null payees 
passed Contract PaymentSplitter rejects repeated payees 
passed Contract PaymentSplitter rejects zero valued shares 
passed Contract ProxyAdmin changeProxyAdmin changes proxy admin 
passed Contract ProxyAdmin changeProxyAdmin fails to change proxy admin if its not the proxy owner 
passed Contract ProxyAdmin getProxyAdmin call to invalid proxy 
passed Contract ProxyAdmin getProxyAdmin returns proxyAdmin as admin of the proxy 
passed Contract ProxyAdmin getProxyImplementation call to invalid proxy 
passed Contract ProxyAdmin getProxyImplementation returns proxy implementation address 
passed Contract ProxyAdmin has an owner 
passed Contract ProxyAdmin upgradeAndCall with authorized account with invalid callData fails to upgrade 
passed Contract ProxyAdmin upgradeAndCall with authorized account with valid callData upgrades implementation 
passed Contract ProxyAdmin upgradeAndCall with unauthorized account fails to upgrade 
passed Contract ProxyAdmin upgrade with authorized account upgrades implementation 
passed Contract ProxyAdmin upgrade with unauthorized account fails to upgrade 
broken Contract PullPayment payments can record an async payment correctly 
passed Contract RefundEscrow once deployed active state accepts deposits 
passed Contract RefundEscrow once deployed active state does not allow beneficiary withdrawal 
passed Contract RefundEscrow once deployed active state does not refund refundees 
passed Contract RefundEscrow once deployed active state has beneficiary and state 
broken Contract RefundEscrow once deployed closed state rejects deposits 
passed Contract RefundEscrow once deployed only the owner can enter closed state 
passed Contract RefundEscrow once deployed only the owner can enter refund state 
broken Contract RefundEscrow once deployed refund state rejects deposits 
passed Contract RefundEscrow requires a non null beneficiary 
passed Contract SafeCast toInt128 downcasts 0 
passed Contract SafeCast toInt128 downcasts 1 
passed Contract SafeCast toInt128 downcasts 1 
passed Contract SafeCast toInt128 downcasts 2 127 1 170141183460469231731687303715884105727 
passed Contract SafeCast toInt128 downcasts 2 127 170141183460469231731687303715884105728 
passed Contract SafeCast toInt128 reverts when downcasting 2 127 1 170141183460469231731687303715884105729 
passed Contract SafeCast toInt128 reverts when downcasting 2 127 1 170141183460469231731687303715884105729 
passed Contract SafeCast toInt128 reverts when downcasting 2 127 170141183460469231731687303715884105728 
passed Contract SafeCast toInt128 reverts when downcasting 2 127 2 170141183460469231731687303715884105730 
passed Contract SafeCast toInt16 downcasts 0 
passed Contract SafeCast toInt16 downcasts 1 
passed Contract SafeCast toInt16 downcasts 1 
passed Contract SafeCast toInt16 downcasts 2 15 1 32767 
passed Contract SafeCast toInt16 downcasts 2 15 32768 
passed Contract SafeCast toInt16 reverts when downcasting 2 15 1 32769 
passed Contract SafeCast toInt16 reverts when downcasting 2 15 1 32769 
passed Contract SafeCast toInt16 reverts when downcasting 2 15 2 32770 
passed Contract SafeCast toInt16 reverts when downcasting 2 15 32768 
passed Contract SafeCast toInt256 casts 0 
passed Contract SafeCast toInt256 casts 1 
passed Contract SafeCast toInt256 casts INT256 MAX 57896044618658097711785492504343953926634992332820282019728792003956564819967 
passed Contract SafeCast toInt256 reverts when casting INT256 MAX 1 57896044618658097711785492504343953926634992332820282019728792003956564819968 
passed Contract SafeCast toInt256 reverts when casting UINT256 MAX 115792089237316195423570985008687907853269984665640564039457584007913129639935 
passed Contract SafeCast toInt32 downcasts 0 
passed Contract SafeCast toInt32 downcasts 1 
passed Contract SafeCast toInt32 downcasts 1 
passed Contract SafeCast toInt32 downcasts 2 31 1 2147483647 
passed Contract SafeCast toInt32 downcasts 2 31 2147483648 
passed Contract SafeCast toInt32 reverts when downcasting 2 31 1 2147483649 
passed Contract SafeCast toInt32 reverts when downcasting 2 31 1 2147483649 
passed Contract SafeCast toInt32 reverts when downcasting 2 31 2147483648 
passed Contract SafeCast toInt32 reverts when downcasting 2 31 2 2147483650 
passed Contract SafeCast toInt64 downcasts 0 
passed Contract SafeCast toInt64 downcasts 1 
passed Contract SafeCast toInt64 downcasts 1 
passed Contract SafeCast toInt64 downcasts 2 63 1 9223372036854775807 
passed Contract SafeCast toInt64 downcasts 2 63 9223372036854775808 
passed Contract SafeCast toInt64 reverts when downcasting 2 63 1 9223372036854775809 
passed Contract SafeCast toInt64 reverts when downcasting 2 63 1 9223372036854775809 
passed Contract SafeCast toInt64 reverts when downcasting 2 63 2 9223372036854775810 
passed Contract SafeCast toInt64 reverts when downcasting 2 63 9223372036854775808 
passed Contract SafeCast toInt8 downcasts 0 
passed Contract SafeCast toInt8 downcasts 1 
passed Contract SafeCast toInt8 downcasts 1 
passed Contract SafeCast toInt8 downcasts 2 7 1 127 
passed Contract SafeCast toInt8 downcasts 2 7 128 
passed Contract SafeCast toInt8 reverts when downcasting 2 7 1 129 
passed Contract SafeCast toInt8 reverts when downcasting 2 7 1 129 
passed Contract SafeCast toInt8 reverts when downcasting 2 7 128 
passed Contract SafeCast toInt8 reverts when downcasting 2 7 2 130 
passed Contract SafeCast toUint128 downcasts 0 
passed Contract SafeCast toUint128 downcasts 1 
passed Contract SafeCast toUint128 downcasts 2 128 1 340282366920938463463374607431768211455 
passed Contract SafeCast toUint128 reverts when downcasting 2 128 1 340282366920938463463374607431768211457 
passed Contract SafeCast toUint128 reverts when downcasting 2 128 340282366920938463463374607431768211456 
passed Contract SafeCast toUint16 downcasts 0 
passed Contract SafeCast toUint16 downcasts 1 
passed Contract SafeCast toUint16 downcasts 2 16 1 65535 
passed Contract SafeCast toUint16 reverts when downcasting 2 16 1 65537 
passed Contract SafeCast toUint16 reverts when downcasting 2 16 65536 
passed Contract SafeCast toUint224 downcasts 0 
passed Contract SafeCast toUint224 downcasts 1 
passed Contract SafeCast toUint224 downcasts 2 224 1 26959946667150639794667015087019630673637144422540572481103610249215 
passed Contract SafeCast toUint224 reverts when downcasting 2 224 1 26959946667150639794667015087019630673637144422540572481103610249217 
passed Contract SafeCast toUint224 reverts when downcasting 2 224 26959946667150639794667015087019630673637144422540572481103610249216 
passed Contract SafeCast toUint256 casts 0 
passed Contract SafeCast toUint256 casts 1 
passed Contract SafeCast toUint256 casts INT256 MAX 57896044618658097711785492504343953926634992332820282019728792003956564819967 
passed Contract SafeCast toUint256 reverts when casting 1 
passed Contract SafeCast toUint256 reverts when casting INT256 MIN 57896044618658097711785492504343953926634992332820282019728792003956564819968 
passed Contract SafeCast toUint32 downcasts 0 
passed Contract SafeCast toUint32 downcasts 1 
passed Contract SafeCast toUint32 downcasts 2 32 1 4294967295 
passed Contract SafeCast toUint32 reverts when downcasting 2 32 1 4294967297 
passed Contract SafeCast toUint32 reverts when downcasting 2 32 4294967296 
passed Contract SafeCast toUint64 downcasts 0 
passed Contract SafeCast toUint64 downcasts 1 
passed Contract SafeCast toUint64 downcasts 2 64 1 18446744073709551615 
passed Contract SafeCast toUint64 reverts when downcasting 2 64 1 18446744073709551617 
passed Contract SafeCast toUint64 reverts when downcasting 2 64 18446744073709551616 
passed Contract SafeCast toUint8 downcasts 0 
passed Contract SafeCast toUint8 downcasts 1 
passed Contract SafeCast toUint8 downcasts 2 8 1 255 
passed Contract SafeCast toUint8 reverts when downcasting 2 8 1 257 
passed Contract SafeCast toUint8 reverts when downcasting 2 8 256 
passed Contract SafeCast toUint96 downcasts 0 
passed Contract SafeCast toUint96 downcasts 1 
passed Contract SafeCast toUint96 downcasts 2 96 1 79228162514264337593543950335 
passed Contract SafeCast toUint96 reverts when downcasting 2 96 1 79228162514264337593543950337 
passed Contract SafeCast toUint96 reverts when downcasting 2 96 79228162514264337593543950336 
passed Contract SafeERC20 with address that has no contract code reverts on approve 
passed Contract SafeERC20 with address that has no contract code reverts on decreaseAllowance 
passed Contract SafeERC20 with address that has no contract code reverts on increaseAllowance 
passed Contract SafeERC20 with address that has no contract code reverts on transfer 
passed Contract SafeERC20 with address that has no contract code reverts on transferFrom 
passed Contract SafeERC20 with token that returns false on all calls reverts on approve 
passed Contract SafeERC20 with token that returns false on all calls reverts on decreaseAllowance 
passed Contract SafeERC20 with token that returns false on all calls reverts on increaseAllowance 
passed Contract SafeERC20 with token that returns false on all calls reverts on transfer 
passed Contract SafeERC20 with token that returns false on all calls reverts on transferFrom 
passed Contract SafeERC20 with token that returns no boolean values approvals with non zero allowance doesn t revert when approving a zero
passed Contract SafeERC20 with token that returns no boolean values approvals with non zero allowance doesn t revert when decreasing the allowance
passed Contract SafeERC20 with token that returns no boolean values approvals with non zero allowance doesn t revert when increasing the allowance
passed Contract SafeERC20 with token that returns no boolean values approvals with non zero allowance reverts when approving a non zero allowance
passed Contract SafeERC20 with token that returns no boolean values approvals with non zero allowance reverts when decreasing the allowance to a
passed Contract SafeERC20 with token that returns no boolean values approvals with zero allowance doesn t revert when approving a non zero
passed Contract SafeERC20 with token that returns no boolean values approvals with zero allowance doesn t revert when approving a zero allowance
passed Contract SafeERC20 with token that returns no boolean values approvals with zero allowance doesn t revert when increasing the allowance 
passed Contract SafeERC20 with token that returns no boolean values approvals with zero allowance reverts when decreasing the allowance 
passed Contract SafeERC20 with token that returns no boolean values doesn t revert on transfer 
passed Contract SafeERC20 with token that returns no boolean values doesn t revert on transferFrom 
passed Contract SafeERC20 with token that returns true on all calls approvals with non zero allowance doesn t revert when approving a
passed Contract SafeERC20 with token that returns true on all calls approvals with non zero allowance doesn t revert when decreasing the
passed Contract SafeERC20 with token that returns true on all calls approvals with non zero allowance doesn t revert when increasing the
passed Contract SafeERC20 with token that returns true on all calls approvals with non zero allowance reverts when approving a non zero
passed Contract SafeERC20 with token that returns true on all calls approvals with non zero allowance reverts when decreasing the allowance to
passed Contract SafeERC20 with token that returns true on all calls approvals with zero allowance doesn t revert when approving a non
passed Contract SafeERC20 with token that returns true on all calls approvals with zero allowance doesn t revert when approving a zero
passed Contract SafeERC20 with token that returns true on all calls approvals with zero allowance doesn t revert when increasing the allowance
passed Contract SafeERC20 with token that returns true on all calls approvals with zero allowance reverts when decreasing the allowance 
passed Contract SafeERC20 with token that returns true on all calls doesn t revert on transfer 
passed Contract SafeERC20 with token that returns true on all calls doesn t revert on transferFrom 
passed Contract Strings from uint256 decimal format converts 0 
passed Contract Strings from uint256 decimal format converts a positive number 
passed Contract Strings from uint256 decimal format converts MAX UINT256 
passed Contract Strings from uint256 fixed hex format converts a positive number long 
passed Contract Strings from uint256 fixed hex format converts a positive number short 
passed Contract Strings from uint256 fixed hex format converts MAX UINT256 
passed Contract Strings from uint256 hex format converts 0 
passed Contract Strings from uint256 hex format converts a positive number 
passed Contract Strings from uint256 hex format converts MAX UINT256 
skipped Contract TimelockController dependency can execute after dependency 
skipped Contract TimelockController dependency cannot execute before dependency 
skipped Contract TimelockController initial state 
skipped Contract TimelockController maintenance prevent unauthorized maintenance 
skipped Contract TimelockController maintenance timelock scheduled maintenance 
skipped Contract TimelockController methods batch execute partial execution 
skipped Contract TimelockController methods batch execute revert if operation is not scheduled 
skipped Contract TimelockController methods batch execute with scheduled operation on time executor can reveal 
skipped Contract TimelockController methods batch execute with scheduled operation on time length mismatch 1 
skipped Contract TimelockController methods batch execute with scheduled operation on time length mismatch 2 
skipped Contract TimelockController methods batch execute with scheduled operation on time length mismatch 3 
skipped Contract TimelockController methods batch execute with scheduled operation on time prevent non executor from revealing 
skipped Contract TimelockController methods batch execute with scheduled operation revert if execution comes too early 1 2 
skipped Contract TimelockController methods batch execute with scheduled operation revert if execution comes too early 2 2 
skipped Contract TimelockController methods batch schedule enforce minimum delay 
skipped Contract TimelockController methods batch schedule length of batch parameter must match 1 
skipped Contract TimelockController methods batch schedule prevent non proposer from commiting 
skipped Contract TimelockController methods batch schedule prevent overwritting active operation 
skipped Contract TimelockController methods batch schedule proposer can schedule 
skipped Contract TimelockController methods cancel cannot cancel invalid operation 
skipped Contract TimelockController methods cancel prevent non proposer from canceling 
skipped Contract TimelockController methods cancel proposer can cancel 
skipped Contract TimelockController methods operation hashing hashOperation 
skipped Contract TimelockController methods operation hashing hashOperationBatch 
skipped Contract TimelockController methods simple execute revert if operation is not scheduled 
skipped Contract TimelockController methods simple execute with scheduled operation on time executor can reveal 
skipped Contract TimelockController methods simple execute with scheduled operation on time prevent non executor from revealing 
skipped Contract TimelockController methods simple execute with scheduled operation revert if execution comes too early 1 2 
skipped Contract TimelockController methods simple execute with scheduled operation revert if execution comes too early 2 2 
skipped Contract TimelockController methods simple schedule enforce minimum delay 
skipped Contract TimelockController methods simple schedule prevent non proposer from commiting 
skipped Contract TimelockController methods simple schedule prevent overwritting active operation 
skipped Contract TimelockController methods simple schedule proposer can schedule 
skipped Contract TimelockController usage scenario call 
skipped Contract TimelockController usage scenario call nonpayable with eth 
skipped Contract TimelockController usage scenario call out of gas 
skipped Contract TimelockController usage scenario call payable with eth 
skipped Contract TimelockController usage scenario call reverting 
skipped Contract TimelockController usage scenario call reverting with eth 
skipped Contract TimelockController usage scenario call throw 
passed Contract TimersBlockNumber expired 
failed Contract TimersBlockNumber fast forward 
failed Contract TimersBlockNumber pending 
passed Contract TimersBlockNumber reset 
passed Contract TimersBlockNumber unset 
broken Contract TokenTimelock with token once deployed can be released after time limit 
broken Contract TokenTimelock with token once deployed can be released just after limit 
passed Contract TokenTimelock with token once deployed can get state 
broken Contract TokenTimelock with token once deployed cannot be released twice 
passed Contract TokenTimelock with token once deployed cannot be released before time limit 
passed Contract TokenTimelock with token once deployed cannot be released just before time limit 
passed Contract TokenTimelock with token rejects a release time in the past 
passed Contract TransparentUpgradeableProxy cannot be initialized with a non contract address 
passed Contract TransparentUpgradeableProxy changeAdmin when the new proposed admin is not the zero address when the sender is not the admin reverts
passed Contract TransparentUpgradeableProxy changeAdmin when the new proposed admin is not the zero address when the sender is the admin assigns new
passed Contract TransparentUpgradeableProxy changeAdmin when the new proposed admin is not the zero address when the sender is the admin emits an
passed Contract TransparentUpgradeableProxy changeAdmin when the new proposed admin is the zero address reverts 
passed Contract TransparentUpgradeableProxy implementation delegates to the implementation 
passed Contract TransparentUpgradeableProxy implementation returns the current implementation address 
failed Contract TransparentUpgradeableProxy initialization without parameters non payable when not sending balance has expected balance 
failed Contract TransparentUpgradeableProxy initialization without parameters non payable when sending some balance reverts 
passed Contract TransparentUpgradeableProxy initialization without parameters non payable when not sending balance initializes the proxy 
skipped Contract TransparentUpgradeableProxy initialization without parameters non payable when not sending balance sets the implementation address 
failed Contract TransparentUpgradeableProxy initialization without parameters payable when not sending balance has expected balance 
failed Contract TransparentUpgradeableProxy initialization without parameters payable when sending some balance has expected balance 
passed Contract TransparentUpgradeableProxy initialization without parameters payable when not sending balance initializes the proxy 
passed Contract TransparentUpgradeableProxy initialization without parameters payable when sending some balance initializes the proxy 
skipped Contract TransparentUpgradeableProxy initialization without parameters payable when not sending balance sets the implementation address 
skipped Contract TransparentUpgradeableProxy initialization without parameters payable when sending some balance sets the implementation address 
failed Contract TransparentUpgradeableProxy initialization with parameters non payable when not sending balance has expected balance 
failed Contract TransparentUpgradeableProxy initialization with parameters non payable when sending some balance reverts 
passed Contract TransparentUpgradeableProxy initialization with parameters non payable when not sending balance initializes the proxy 
skipped Contract TransparentUpgradeableProxy initialization with parameters non payable when not sending balance sets the implementation address 
failed Contract TransparentUpgradeableProxy initialization with parameters payable when not sending balance has expected balance 
failed Contract TransparentUpgradeableProxy initialization with parameters payable when sending some balance has expected balance 
passed Contract TransparentUpgradeableProxy initialization with parameters payable when not sending balance initializes the proxy 
passed Contract TransparentUpgradeableProxy initialization with parameters payable when sending some balance initializes the proxy 
skipped Contract TransparentUpgradeableProxy initialization with parameters payable when not sending balance sets the implementation address 
skipped Contract TransparentUpgradeableProxy initialization with parameters payable when sending some balance sets the implementation address 
passed Contract TransparentUpgradeableProxy initialization with parameters reverting initialization reverts 
passed Contract TransparentUpgradeableProxy regression should add fallback function 
passed Contract TransparentUpgradeableProxy regression should add new function 
passed Contract TransparentUpgradeableProxy regression should change function signature 
passed Contract TransparentUpgradeableProxy regression should remove fallback function 
passed Contract TransparentUpgradeableProxy regression should remove function 
passed Contract TransparentUpgradeableProxy storage should store the admin proxy in specified location 
passed Contract TransparentUpgradeableProxy storage should store the implementation address in specified location 
passed Contract TransparentUpgradeableProxy transparent proxy proxy admin cannot call delegated functions 
passed Contract TransparentUpgradeableProxy transparent proxy when function names clash when sender is other should delegate to implementation 
passed Contract TransparentUpgradeableProxy transparent proxy when function names clash when sender is proxy admin should run the proxy function 
failed Contract TransparentUpgradeableProxy upgradeToAndCall with migrations when the sender is the admin when upgrading to V1 calls the initialize function and sends
failed Contract TransparentUpgradeableProxy upgradeToAndCall with migrations when the sender is the admin when upgrading to V1 when upgrading to V2 calls the
failed Contract TransparentUpgradeableProxy upgradeToAndCall with migrations when the sender is the admin when upgrading to V1 when upgrading to V2 when upgrading
passed Contract TransparentUpgradeableProxy upgradeToAndCall with migrations when the sender is not the admin reverts 
passed Contract TransparentUpgradeableProxy upgradeToAndCall with migrations when the sender is the admin when upgrading to V1 upgrades to the requested version and
passed Contract TransparentUpgradeableProxy upgradeToAndCall with migrations when the sender is the admin when upgrading to V1 when upgrading to V2 upgrades to
passed Contract TransparentUpgradeableProxy upgradeToAndCall with migrations when the sender is the admin when upgrading to V1 when upgrading to V2 when upgrading
failed Contract TransparentUpgradeableProxy upgradeToAndCall without migrations when the call does not fail when the sender is the admin sends given value to
passed Contract TransparentUpgradeableProxy upgradeToAndCall without migrations when the call does fail reverts 
passed Contract TransparentUpgradeableProxy upgradeToAndCall without migrations when the call does not fail when the sender is not the admin reverts 
passed Contract TransparentUpgradeableProxy upgradeToAndCall without migrations when the call does not fail when the sender is the admin calls the initializer function
passed Contract TransparentUpgradeableProxy upgradeToAndCall without migrations when the call does not fail when the sender is the admin emits an event 
passed Contract TransparentUpgradeableProxy upgradeToAndCall without migrations when the call does not fail when the sender is the admin upgrades to the requested
skipped Contract TransparentUpgradeableProxy upgradeToAndCall without migrations when the call does not fail when the sender is the admin uses the storage of
passed Contract TransparentUpgradeableProxy upgradeTo when the sender is not the admin reverts 
passed Contract TransparentUpgradeableProxy upgradeTo when the sender is the admin when the given implementation is different from the current one emits an
passed Contract TransparentUpgradeableProxy upgradeTo when the sender is the admin when the given implementation is different from the current one upgrades to
passed Contract TransparentUpgradeableProxy upgradeTo when the sender is the admin when the given implementation is the zero address reverts 
failed Contract TransparentUpgradeableProxy without initialization when not sending balance has expected balance 
passed Contract TransparentUpgradeableProxy without initialization when not sending balance initializes the proxy 
skipped Contract TransparentUpgradeableProxy without initialization when not sending balance sets the implementation address 
failed Contract TransparentUpgradeableProxy without initialization when sending some balance has expected balance 
passed Contract TransparentUpgradeableProxy without initialization when sending some balance initializes the proxy 
skipped Contract TransparentUpgradeableProxy without initialization when sending some balance sets the implementation address 
passed Contract UpgradeableBeacon cannot be created with non contract implementation 
passed Contract UpgradeableBeacon once deployed can be upgraded by the owner 
passed Contract UpgradeableBeacon once deployed cannot be upgraded by other account 
passed Contract UpgradeableBeacon once deployed cannot be upgraded to a non contract 
passed Contract UpgradeableBeacon once deployed returns implementation 
passed Contract UUPSUpgradeable reject proxy address as implementation 
passed Contract UUPSUpgradeable reject upgrade to broken upgradeable implementation 
passed Contract UUPSUpgradeable reject upgrade to non uups implementation 
passed Contract UUPSUpgradeable upgrade to and unsafe upgradeable implementation 
passed Contract UUPSUpgradeable upgrade to upgradeable implementation 
passed Contract UUPSUpgradeable upgrade to upgradeable implementation with call 
passed Contract VestingWallet check vesting contract 
passed Contract VestingWallet rejects zero address for beneficiary 
passed Contract VestingWallet vesting schedule ERC20 vesting check vesting schedule 
broken Contract VestingWallet vesting schedule ERC20 vesting execute vesting schedule 
failed Contract VestingWallet vesting schedule Eth vesting check vesting schedule 
broken Contract VestingWallet vesting schedule Eth vesting execute vesting schedule 
Status Description 
passed Ethers js shouldCheckStaticJsonRpcProvider 
passed Ethers js shouldConnectViaEthersJs 
passed Ethers js shouldCountTransactions 
broken Ethers js shouldCreateAcccountWithEthersJs 
passed Ethers js testContracts 
broken Ethers js testQueryHistoricEvents 
broken Ethers js testQueryingBlockchain 
broken Ethers js testReadOnlyMethods 
passed Ethers js testSigner 
broken Ethers js testSigningMessages 
passed Ethers js testStateChangingMethods 
broken Ethers js testWritingToTheBlockchain 
passed ethjs Connection test js 
broken ethjs test01 
broken Hardhat advanced Greeter Should return the new greeting once it s changed 
passed migrate imports js every new path exists 
passed migrate imports js replaces import paths in a file 
passed tests brownie test brownie test brownie connect 
broken tests brownie test brownie test brownie deploy 
broken tests brownie token tests test approve test approve 
broken tests brownie token tests test approve test modify approve 
broken tests brownie token tests test approve test only affects target 
broken tests brownie token tests test approve test returns true 
passed tests brownie token tests test approve test approval event fires 
passed tests brownie token tests test approve test approve self 
passed tests brownie token tests test approve test initial approval is zero 0 
passed tests brownie token tests test approve test initial approval is zero 1 
passed tests brownie token tests test approve test initial approval is zero 2 
passed tests brownie token tests test approve test initial approval is zero 3 
passed tests brownie token tests test approve test initial approval is zero 4 
passed tests brownie token tests test approve test revoke approve 
broken tests brownie token tests test transferFrom test caller approval affected 
broken tests brownie token tests test transferFrom test caller balance not affected 
broken tests brownie token tests test transferFrom test insufficient approval 
broken tests brownie token tests test transferFrom test insufficient balance 
broken tests brownie token tests test transferFrom test receiver approval not affected 
broken tests brownie token tests test transferFrom test receiver balance increases 
broken tests brownie token tests test transferFrom test returns true 
broken tests brownie token tests test transferFrom test revoked approval 
broken tests brownie token tests test transferFrom test sender balance decreases 
broken tests brownie token tests test transferFrom test total supply not affected 
broken tests brownie token tests test transferFrom test transfer event fires 
broken tests brownie token tests test transferFrom test transfer full balance 
broken tests brownie token tests test transferFrom test transfer to self 
broken tests brownie token tests test transferFrom test transfer to self no approval 
broken tests brownie token tests test transferFrom test transfer zero tokens 
broken tests brownie token tests test transferFrom test transfer zero tokens without approval 
failed tests brownie token tests test transferFrom test no approval 
broken tests brownie token tests test transfer test insufficient balance 
broken tests brownie token tests test transfer test receiver balance increases 
broken tests brownie token tests test transfer test returns true 
broken tests brownie token tests test transfer test sender balance decreases 
broken tests brownie token tests test transfer test total supply not affected 
broken tests brownie token tests test transfer test transfer event fires 
broken tests brownie token tests test transfer test transfer full balance 
broken tests brownie token tests test transfer test transfer to self 
broken tests brownie token tests test transfer test transfer zero tokens 
skipped tests hardhat test hardhat test hardhat advanced 
skipped tests hardhat test hardhat test hardhat simple 
failed tests openzeppelin test openzeppelin test contracts input data0 
failed tests openzeppelin test openzeppelin test contracts input data1 
failed tests openzeppelin test openzeppelin test contracts input data2 
failed tests openzeppelin test openzeppelin test contracts input data3 
failed tests truffle test truffle test issue 364 self destruct contract 
failed tests truffle test truffle test truffle contract 
passed tests truffle test truffle test truffle migration 
failed tests truffle test truffle test truffle test 
