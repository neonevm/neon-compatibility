{
  "uid" : "73d9e6e0b3274228",
  "name" : "test_transfer_zero_tokens_without_approval",
  "fullName" : "tests.brownie.token.tests.test_transferFrom#test_transfer_zero_tokens_without_approval",
  "historyId" : "8dca4b5cc80f723e5acea8426c32b8c6",
  "time" : {
    "start" : 1639232343652,
    "stop" : 1639232343652,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Blockhash not found'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
  "statusTrace" : "brownie_project = <Project 'TokenProject'>\naccounts = <brownie.network.account.Accounts object at 0x7f324b369100>\n\n    @pytest.fixture(scope=\"module\")\n    def token(brownie_project, accounts):\n>       return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n\ntests/brownie/token/tests/conftest.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:600: in __call__\n    return tx[\"from\"].deploy(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:508: in deploy\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:725: in _make_transaction\n    raise VirtualMachineError(e) from None\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError(\"Gas estimation failed: 'Transaction simulation failed: Blockhash not found'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\"))\nexc = \"Gas estimation failed: 'Transaction simulation failed: Blockhash not found'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\"\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.message: str = exc[\"message\"].rstrip(\".\")\n    \n            if isinstance(exc[\"data\"], str):\n                # handle parity exceptions - this logic probably is not perfect\n                if \"0x08c379a0\" in exc[\"data\"]:\n                    revert_type, err_msg = [i.strip() for i in exc[\"data\"].split(\"0x08c379a0\", 1)]\n                    err_msg = eth_abi.decode_abi([\"string\"], HexBytes(err_msg))\n                    err_msg = f\"{revert_type} '{err_msg}'\"\n                elif exc[\"data\"].endswith(\"0x\"):\n                    err_msg = exc[\"data\"][:-2].strip()\n                else:\n                    err_msg = exc[\"data\"]\n                raise ValueError(f\"{self.message}: {err_msg}\") from None\n    \n            try:\n                txid, data = next((k, v) for k, v in exc[\"data\"].items() if k.startswith(\"0x\"))\n            except StopIteration:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.txid: str = txid\n            self.source: str = \"\"\n            self.revert_type: str = data[\"error\"]\n            self.pc: Optional[str] = data.get(\"program_counter\")\n            if self.pc and self.revert_type == \"revert\":\n                self.pc -= 1\n    \n            self.revert_msg: Optional[str] = data.get(\"reason\")\n            self.dev_revert_msg = brownie.project.build._get_dev_revert(self.pc)\n            if self.revert_msg is None and self.revert_type in (\"revert\", \"invalid opcode\"):\n                self.revert_msg = self.dev_revert_msg\n            elif self.revert_msg == \"Failed assertion\":\n                self.revert_msg = self.dev_revert_msg or self.revert_msg\n    \n        else:\n>           raise ValueError(str(exc)) from None\nE           ValueError: Gas estimation failed: 'Transaction simulation failed: Blockhash not found'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:121: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1639232318371,
      "stop" : 1639232318371,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1639232321513,
      "stop" : 1639232338855,
      "duration" : 17342
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1639232339446,
      "stop" : 1639232339764,
      "duration" : 318
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1639232339446,
      "stop" : 1639232339446,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1639232342393,
      "stop" : 1639232342865,
      "duration" : 472
    },
    "status" : "broken",
    "statusMessage" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Blockhash not found'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\n",
    "statusTrace" : "  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 932, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/neon-compatibility/neon-compatibility/tests/brownie/token/tests/conftest.py\", line 49, in token\n    return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py\", line 600, in __call__\n    return tx[\"from\"].deploy(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 508, in deploy\n    receipt, exc = self._make_transaction(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 725, in _make_transaction\n    raise VirtualMachineError(e) from None\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py\", line 121, in __init__\n    raise ValueError(str(exc)) from None\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1639232549770,
      "stop" : 1639232549770,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_transferFrom"
  }, {
    "name" : "host",
    "value" : "fv-az81-402"
  }, {
    "name" : "thread",
    "value" : "4916-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_transferFrom"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 22,
        "skipped" : 0,
        "passed" : 45,
        "unknown" : 0,
        "total" : 67
      },
      "items" : [ {
        "uid" : "3fa537b1af094404",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/201//#testresult/3fa537b1af094404",
        "status" : "broken",
        "statusDetails" : "ValueError: Transaction simulation failed: Error processing Instruction 2: custom program error: 0x1",
        "time" : {
          "start" : 1639231083386,
          "stop" : 1639231083386,
          "duration" : 0
        }
      }, {
        "uid" : "14a72dce68032352",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/199//#testresult/14a72dce68032352",
        "status" : "passed",
        "time" : {
          "start" : 1639223708819,
          "stop" : 1639223716172,
          "duration" : 7353
        }
      }, {
        "uid" : "4ce9eca2bd7143e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/199//#testresult/4ce9eca2bd7143e",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: '429 Client Error: Too Many Requests for url: https://neonevm.testnet.rpcpool.com/e7efde89606821742be8ba4a7ced'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639222189709,
          "stop" : 1639222189709,
          "duration" : 0
        }
      }, {
        "uid" : "46a9036d95341695",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/198//#testresult/46a9036d95341695",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1639193216224,
          "stop" : 1639193247428,
          "duration" : 31204
        }
      }, {
        "uid" : "93d5510801d12d67",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/197//#testresult/93d5510801d12d67",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1639183104798,
          "stop" : 1639183104798,
          "duration" : 0
        }
      }, {
        "uid" : "564e30a48353060f",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/196//#testresult/564e30a48353060f",
        "status" : "passed",
        "time" : {
          "start" : 1639153303943,
          "stop" : 1639153317950,
          "duration" : 14007
        }
      }, {
        "uid" : "6835d12e7fdc022b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/195//#testresult/6835d12e7fdc022b",
        "status" : "passed",
        "time" : {
          "start" : 1639128564619,
          "stop" : 1639128567293,
          "duration" : 2674
        }
      }, {
        "uid" : "d894fc509ad205f2",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/194//#testresult/d894fc509ad205f2",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1639106457493,
          "stop" : 1639106457493,
          "duration" : 0
        }
      }, {
        "uid" : "2591a58aed9de45a",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/193//#testresult/2591a58aed9de45a",
        "status" : "passed",
        "time" : {
          "start" : 1639096787319,
          "stop" : 1639096789966,
          "duration" : 2647
        }
      }, {
        "uid" : "d95efb2e7fbb12e5",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/192//#testresult/d95efb2e7fbb12e5",
        "status" : "passed",
        "time" : {
          "start" : 1639085346135,
          "stop" : 1639085348432,
          "duration" : 2297
        }
      }, {
        "uid" : "b65ebfd02b5ac39e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/189//#testresult/b65ebfd02b5ac39e",
        "status" : "passed",
        "time" : {
          "start" : 1639070710507,
          "stop" : 1639070725274,
          "duration" : 14767
        }
      }, {
        "uid" : "9d4ca87ab15a0a67",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/190//#testresult/9d4ca87ab15a0a67",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Error processing Instruction 1: invalid account data for instruction'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639074286404,
          "stop" : 1639074286404,
          "duration" : 0
        }
      }, {
        "uid" : "3dc858333989a0f5",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/187//#testresult/3dc858333989a0f5",
        "status" : "passed",
        "time" : {
          "start" : 1639053400010,
          "stop" : 1639053406427,
          "duration" : 6417
        }
      }, {
        "uid" : "b7a759552d093b0c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/188//#testresult/b7a759552d093b0c",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1639056863886,
          "stop" : 1639056895614,
          "duration" : 31728
        }
      }, {
        "uid" : "412317502df6c0c2",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/186//#testresult/412317502df6c0c2",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1639045902090,
          "stop" : 1639045902090,
          "duration" : 0
        }
      }, {
        "uid" : "1de24a514e8df872",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/184//#testresult/1de24a514e8df872",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1639019990463,
          "stop" : 1639019990463,
          "duration" : 0
        }
      }, {
        "uid" : "cbb4f7e48b0e0d7a",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/183//#testresult/cbb4f7e48b0e0d7a",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1639010575329,
          "stop" : 1639010606916,
          "duration" : 31587
        }
      }, {
        "uid" : "7c19ef22f4862ec5",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/182//#testresult/7c19ef22f4862ec5",
        "status" : "passed",
        "time" : {
          "start" : 1638990714987,
          "stop" : 1638990717650,
          "duration" : 2663
        }
      }, {
        "uid" : "aa88ca9401496db2",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/177//#testresult/aa88ca9401496db2",
        "status" : "passed",
        "time" : {
          "start" : 1638970012646,
          "stop" : 1638970025871,
          "duration" : 13225
        }
      }, {
        "uid" : "5bdfc29d88d5e8de",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/181//#testresult/5bdfc29d88d5e8de",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1638981046488,
          "stop" : 1638981046488,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "73d9e6e0b3274228.json",
  "parameterValues" : [ ]
}