{
  "uid" : "4760cfa882c3a596",
  "name" : "test_sender_balance_decreases",
  "fullName" : "tests.brownie.token.tests.test_transferFrom#test_sender_balance_decreases",
  "historyId" : "cdd38f2d3ff74f7c9e250618c4f315b0",
  "time" : {
    "start" : 1639232342393,
    "stop" : 1639232342393,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Blockhash not found'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
  "statusTrace" : "brownie_project = <Project 'TokenProject'>\naccounts = <brownie.network.account.Accounts object at 0x7f324b369100>\n\n    @pytest.fixture(scope=\"module\")\n    def token(brownie_project, accounts):\n>       return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n\ntests/brownie/token/tests/conftest.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:600: in __call__\n    return tx[\"from\"].deploy(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:508: in deploy\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:725: in _make_transaction\n    raise VirtualMachineError(e) from None\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError(\"Gas estimation failed: 'Transaction simulation failed: Blockhash not found'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\"))\nexc = \"Gas estimation failed: 'Transaction simulation failed: Blockhash not found'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\"\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.message: str = exc[\"message\"].rstrip(\".\")\n    \n            if isinstance(exc[\"data\"], str):\n                # handle parity exceptions - this logic probably is not perfect\n                if \"0x08c379a0\" in exc[\"data\"]:\n                    revert_type, err_msg = [i.strip() for i in exc[\"data\"].split(\"0x08c379a0\", 1)]\n                    err_msg = eth_abi.decode_abi([\"string\"], HexBytes(err_msg))\n                    err_msg = f\"{revert_type} '{err_msg}'\"\n                elif exc[\"data\"].endswith(\"0x\"):\n                    err_msg = exc[\"data\"][:-2].strip()\n                else:\n                    err_msg = exc[\"data\"]\n                raise ValueError(f\"{self.message}: {err_msg}\") from None\n    \n            try:\n                txid, data = next((k, v) for k, v in exc[\"data\"].items() if k.startswith(\"0x\"))\n            except StopIteration:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.txid: str = txid\n            self.source: str = \"\"\n            self.revert_type: str = data[\"error\"]\n            self.pc: Optional[str] = data.get(\"program_counter\")\n            if self.pc and self.revert_type == \"revert\":\n                self.pc -= 1\n    \n            self.revert_msg: Optional[str] = data.get(\"reason\")\n            self.dev_revert_msg = brownie.project.build._get_dev_revert(self.pc)\n            if self.revert_msg is None and self.revert_type in (\"revert\", \"invalid opcode\"):\n                self.revert_msg = self.dev_revert_msg\n            elif self.revert_msg == \"Failed assertion\":\n                self.revert_msg = self.dev_revert_msg or self.revert_msg\n    \n        else:\n>           raise ValueError(str(exc)) from None\nE           ValueError: Gas estimation failed: 'Transaction simulation failed: Blockhash not found'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:121: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1639232318371,
      "stop" : 1639232318371,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1639232321513,
      "stop" : 1639232338855,
      "duration" : 17342
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1639232339446,
      "stop" : 1639232339764,
      "duration" : 318
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1639232339446,
      "stop" : 1639232339446,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1639232342393,
      "stop" : 1639232342865,
      "duration" : 472
    },
    "status" : "broken",
    "statusMessage" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Blockhash not found'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\n",
    "statusTrace" : "  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 932, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/neon-compatibility/neon-compatibility/tests/brownie/token/tests/conftest.py\", line 49, in token\n    return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py\", line 600, in __call__\n    return tx[\"from\"].deploy(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 508, in deploy\n    receipt, exc = self._make_transaction(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 725, in _make_transaction\n    raise VirtualMachineError(e) from None\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py\", line 121, in __init__\n    raise ValueError(str(exc)) from None\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1639232549770,
      "stop" : 1639232549770,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_transferFrom"
  }, {
    "name" : "host",
    "value" : "fv-az81-402"
  }, {
    "name" : "thread",
    "value" : "4916-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_transferFrom"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 19,
        "skipped" : 0,
        "passed" : 48,
        "unknown" : 0,
        "total" : 67
      },
      "items" : [ {
        "uid" : "140ea0d27e7e2566",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/201//#testresult/140ea0d27e7e2566",
        "status" : "broken",
        "statusDetails" : "ValueError: Transaction simulation failed: Error processing Instruction 2: custom program error: 0x1",
        "time" : {
          "start" : 1639231076111,
          "stop" : 1639231076111,
          "duration" : 0
        }
      }, {
        "uid" : "f35787b55ec4b455",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/199//#testresult/f35787b55ec4b455",
        "status" : "passed",
        "time" : {
          "start" : 1639223596913,
          "stop" : 1639223610358,
          "duration" : 13445
        }
      }, {
        "uid" : "983d26cba3829549",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/199//#testresult/983d26cba3829549",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: '429 Client Error: Too Many Requests for url: https://neonevm.testnet.rpcpool.com/e7efde89606821742be8ba4a7ced'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639222188619,
          "stop" : 1639222188619,
          "duration" : 0
        }
      }, {
        "uid" : "9a4ecd59ffe5b848",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/198//#testresult/9a4ecd59ffe5b848",
        "status" : "passed",
        "time" : {
          "start" : 1639192959856,
          "stop" : 1639192993280,
          "duration" : 33424
        }
      }, {
        "uid" : "19318d72411c187d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/197//#testresult/19318d72411c187d",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1639182981654,
          "stop" : 1639182981654,
          "duration" : 0
        }
      }, {
        "uid" : "6a8222f71578484f",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/196//#testresult/6a8222f71578484f",
        "status" : "passed",
        "time" : {
          "start" : 1639153058365,
          "stop" : 1639153088546,
          "duration" : 30181
        }
      }, {
        "uid" : "ba9559c6c1b46d41",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/195//#testresult/ba9559c6c1b46d41",
        "status" : "passed",
        "time" : {
          "start" : 1639128520372,
          "stop" : 1639128525234,
          "duration" : 4862
        }
      }, {
        "uid" : "5f5c864234fb954e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/194//#testresult/5f5c864234fb954e",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1639106364329,
          "stop" : 1639106364329,
          "duration" : 0
        }
      }, {
        "uid" : "cccfecf88b3e8f3b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/193//#testresult/cccfecf88b3e8f3b",
        "status" : "passed",
        "time" : {
          "start" : 1639096528109,
          "stop" : 1639096562335,
          "duration" : 34226
        }
      }, {
        "uid" : "da5e5665da4eaaf8",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/192//#testresult/da5e5665da4eaaf8",
        "status" : "passed",
        "time" : {
          "start" : 1639085309780,
          "stop" : 1639085313318,
          "duration" : 3538
        }
      }, {
        "uid" : "4e3ed3a833e727d1",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/189//#testresult/4e3ed3a833e727d1",
        "status" : "passed",
        "time" : {
          "start" : 1639070484660,
          "stop" : 1639070511911,
          "duration" : 27251
        }
      }, {
        "uid" : "716e68e141a9fa4b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/190//#testresult/716e68e141a9fa4b",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Error processing Instruction 1: invalid account data for instruction'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639074285050,
          "stop" : 1639074285050,
          "duration" : 0
        }
      }, {
        "uid" : "47173442a2243d43",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/187//#testresult/47173442a2243d43",
        "status" : "passed",
        "time" : {
          "start" : 1639053274313,
          "stop" : 1639053290503,
          "duration" : 16190
        }
      }, {
        "uid" : "f41ca72786337fa5",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/188//#testresult/f41ca72786337fa5",
        "status" : "passed",
        "time" : {
          "start" : 1639056795102,
          "stop" : 1639056800404,
          "duration" : 5302
        }
      }, {
        "uid" : "bc40eb327163b0cb",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/186//#testresult/bc40eb327163b0cb",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1639045839917,
          "stop" : 1639045839917,
          "duration" : 0
        }
      }, {
        "uid" : "f8710ab762ea2596",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/184//#testresult/f8710ab762ea2596",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1639019927728,
          "stop" : 1639019927728,
          "duration" : 0
        }
      }, {
        "uid" : "57469ce3f1506c90",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/183//#testresult/57469ce3f1506c90",
        "status" : "passed",
        "time" : {
          "start" : 1639010399737,
          "stop" : 1639010403922,
          "duration" : 4185
        }
      }, {
        "uid" : "52d1ef4f7350b071",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/182//#testresult/52d1ef4f7350b071",
        "status" : "passed",
        "time" : {
          "start" : 1638990669899,
          "stop" : 1638990675072,
          "duration" : 5173
        }
      }, {
        "uid" : "6b80b8aecf7f59c2",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/177//#testresult/6b80b8aecf7f59c2",
        "status" : "passed",
        "time" : {
          "start" : 1638969859187,
          "stop" : 1638969873581,
          "duration" : 14394
        }
      }, {
        "uid" : "7c3da5da4d6c34a6",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/181//#testresult/7c3da5da4d6c34a6",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1638981014596,
          "stop" : 1638981014596,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "4760cfa882c3a596.json",
  "parameterValues" : [ ]
}