{
  "uid" : "7520687fc2657c18",
  "name" : "test_insufficient_balance",
  "fullName" : "tests.brownie.token.tests.test_transfer#test_insufficient_balance",
  "historyId" : "02f6dcce7a5f38efb9b84065f779b5a9",
  "time" : {
    "start" : 1639326266453,
    "stop" : 1639326267016,
    "duration" : 563
  },
  "status" : "broken",
  "statusMessage" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
  "statusTrace" : "accounts = <brownie.network.account.Accounts object at 0x7fc05673f5e0>\ntoken = <Token Contract '0x383c982d5b4eEa74214e68772Eeb7aC30A51b492'>\n\n    def test_insufficient_balance(accounts, token):\n        balance = token.balanceOf(accounts[0])\n    \n        with brownie.reverts():\n>           token.transfer(accounts[1], balance + 1, {'from': accounts[0]})\n\ntests/brownie/token/tests/test_transfer.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/brownie/token/tests/test_transfer.py:72: in test_insufficient_balance\n    token.transfer(accounts[1], balance + 1, {'from': accounts[0]})\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1693: in __call__\n    return self.transact(*args)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1566: in transact\n    return tx[\"from\"].transfer(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:642: in transfer\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:725: in _make_transaction\n    raise VirtualMachineError(e) from None\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError(\"Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\"))\nexc = \"Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\"\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.message: str = exc[\"message\"].rstrip(\".\")\n    \n            if isinstance(exc[\"data\"], str):\n                # handle parity exceptions - this logic probably is not perfect\n                if \"0x08c379a0\" in exc[\"data\"]:\n                    revert_type, err_msg = [i.strip() for i in exc[\"data\"].split(\"0x08c379a0\", 1)]\n                    err_msg = eth_abi.decode_abi([\"string\"], HexBytes(err_msg))\n                    err_msg = f\"{revert_type} '{err_msg}'\"\n                elif exc[\"data\"].endswith(\"0x\"):\n                    err_msg = exc[\"data\"][:-2].strip()\n                else:\n                    err_msg = exc[\"data\"]\n                raise ValueError(f\"{self.message}: {err_msg}\") from None\n    \n            try:\n                txid, data = next((k, v) for k, v in exc[\"data\"].items() if k.startswith(\"0x\"))\n            except StopIteration:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.txid: str = txid\n            self.source: str = \"\"\n            self.revert_type: str = data[\"error\"]\n            self.pc: Optional[str] = data.get(\"program_counter\")\n            if self.pc and self.revert_type == \"revert\":\n                self.pc -= 1\n    \n            self.revert_msg: Optional[str] = data.get(\"reason\")\n            self.dev_revert_msg = brownie.project.build._get_dev_revert(self.pc)\n            if self.revert_msg is None and self.revert_type in (\"revert\", \"invalid opcode\"):\n                self.revert_msg = self.dev_revert_msg\n            elif self.revert_msg == \"Failed assertion\":\n                self.revert_msg = self.dev_revert_msg or self.revert_msg\n    \n        else:\n>           raise ValueError(str(exc)) from None\nE           ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:121: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1639326198297,
      "stop" : 1639326198297,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1639326199805,
      "stop" : 1639326218746,
      "duration" : 18941
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1639326223328,
      "stop" : 1639326223328,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1639326223328,
      "stop" : 1639326223598,
      "duration" : 270
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1639326245930,
      "stop" : 1639326249339,
      "duration" : 3409
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1639326611753,
      "stop" : 1639326611753,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_transfer"
  }, {
    "name" : "host",
    "value" : "fv-az135-383"
  }, {
    "name" : "thread",
    "value" : "4829-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_transfer"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 71,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 71
      },
      "items" : [ {
        "uid" : "c687918f834d76b4",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/205//#testresult/c687918f834d76b4",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://proxy.teststand2.neontest.xyz/solana",
        "time" : {
          "start" : 1639278813119,
          "stop" : 1639278813119,
          "duration" : 0
        }
      }, {
        "uid" : "74aa5d2bea1b8062",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/204//#testresult/74aa5d2bea1b8062",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://proxy.teststand2.neontest.xyz/solana",
        "time" : {
          "start" : 1639269428663,
          "stop" : 1639269428663,
          "duration" : 0
        }
      }, {
        "uid" : "67df82175592e14e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/203//#testresult/67df82175592e14e",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639254204512,
          "stop" : 1639254205340,
          "duration" : 828
        }
      }, {
        "uid" : "902349567972ba3a",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/202//#testresult/902349567972ba3a",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Blockhash not found'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639232342253,
          "stop" : 1639232342253,
          "duration" : 0
        }
      }, {
        "uid" : "5cef2bd91efa5c77",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/201//#testresult/5cef2bd91efa5c77",
        "status" : "broken",
        "statusDetails" : "ValueError: Transaction simulation failed: Error processing Instruction 2: custom program error: 0x1",
        "time" : {
          "start" : 1639231075961,
          "stop" : 1639231075961,
          "duration" : 0
        }
      }, {
        "uid" : "67a042b68ae73c6a",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/199//#testresult/67a042b68ae73c6a",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639223575232,
          "stop" : 1639223575848,
          "duration" : 616
        }
      }, {
        "uid" : "9af7d5a6d1997133",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/199//#testresult/9af7d5a6d1997133",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: '429 Client Error: Too Many Requests for url: https://neonevm.testnet.rpcpool.com/e7efde89606821742be8ba4a7ced'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639222188506,
          "stop" : 1639222188506,
          "duration" : 0
        }
      }, {
        "uid" : "3530aa74cca28b93",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/198//#testresult/3530aa74cca28b93",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639192804584,
          "stop" : 1639192804992,
          "duration" : 408
        }
      }, {
        "uid" : "e424dbbbb4316e59",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/197//#testresult/e424dbbbb4316e59",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='proxy.teststand2.neontest.xyz', port=443): Read timed out. (read timeout=30)",
        "time" : {
          "start" : 1639182981029,
          "stop" : 1639182981029,
          "duration" : 0
        }
      }, {
        "uid" : "b05728c50c4b067a",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/196//#testresult/b05728c50c4b067a",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639153019630,
          "stop" : 1639153022201,
          "duration" : 2571
        }
      }, {
        "uid" : "8eafa422dd108f33",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/195//#testresult/8eafa422dd108f33",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639128514022,
          "stop" : 1639128514605,
          "duration" : 583
        }
      }, {
        "uid" : "3758390401c397ac",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/194//#testresult/3758390401c397ac",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='proxy.teststand2.neontest.xyz', port=443): Read timed out. (read timeout=30)",
        "time" : {
          "start" : 1639106363728,
          "stop" : 1639106363728,
          "duration" : 0
        }
      }, {
        "uid" : "29e521f7375618a1",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/193//#testresult/29e521f7375618a1",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://proxy.teststand2.neontest.xyz/solana",
        "time" : {
          "start" : 1639096524635,
          "stop" : 1639096524635,
          "duration" : 0
        }
      }, {
        "uid" : "f13b3e978ac1cbe1",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/192//#testresult/f13b3e978ac1cbe1",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639085304228,
          "stop" : 1639085304707,
          "duration" : 479
        }
      }, {
        "uid" : "8e9ab58cc7c24ca6",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/189//#testresult/8e9ab58cc7c24ca6",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639070447766,
          "stop" : 1639070450325,
          "duration" : 2559
        }
      }, {
        "uid" : "2215323237e8ad6b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/190//#testresult/2215323237e8ad6b",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Error processing Instruction 1: invalid account data for instruction'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639074284906,
          "stop" : 1639074284906,
          "duration" : 0
        }
      }, {
        "uid" : "4d6f53741ad79187",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/187//#testresult/4d6f53741ad79187",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639053251883,
          "stop" : 1639053252736,
          "duration" : 853
        }
      }, {
        "uid" : "b336dbbd348d9f31",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/188//#testresult/b336dbbd348d9f31",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639056783856,
          "stop" : 1639056784440,
          "duration" : 584
        }
      }, {
        "uid" : "4e5041ccbb1a19e6",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/186//#testresult/4e5041ccbb1a19e6",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639045831516,
          "stop" : 1639045832080,
          "duration" : 564
        }
      }, {
        "uid" : "10fcc80b5de30b94",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/184//#testresult/10fcc80b5de30b94",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='proxy.teststand2.neontest.xyz', port=443): Read timed out. (read timeout=30)",
        "time" : {
          "start" : 1639019926987,
          "stop" : 1639019926987,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "7520687fc2657c18.json",
  "parameterValues" : [ ]
}