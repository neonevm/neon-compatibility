{
  "uid" : "61157f4651101daf",
  "name" : "test_sender_balance_decreases",
  "fullName" : "tests.brownie.token.tests.test_transferFrom#test_sender_balance_decreases",
  "historyId" : "cdd38f2d3ff74f7c9e250618c4f315b0",
  "time" : {
    "start" : 1639278816832,
    "stop" : 1639278848496,
    "duration" : 31664
  },
  "status" : "broken",
  "statusMessage" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
  "statusTrace" : "accounts = <brownie.network.account.Accounts object at 0x7f521b89d070>\ntoken = <Token Contract '0x0c7F3feF08721fbC16E9f8d8A4aC8734D514cF90'>\n\n    def test_sender_balance_decreases(accounts, token):\n        sender_balance = token.balanceOf(accounts[0])\n        amount = sender_balance // 4\n    \n>       token.approve(accounts[1], amount, {'from': accounts[0]})\n\ntests/brownie/token/tests/test_transferFrom.py:9: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1693: in __call__\n    return self.transact(*args)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1566: in transact\n    return tx[\"from\"].transfer(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:642: in transfer\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:743: in _make_transaction\n    exc = VirtualMachineError(e)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError({'code': -32002, 'message': 'Verifying nonce before send transaction: Error processing ...invalid program argument', 'data': {'logs': ['/src/entrypoint.rs Invalid Ethereum transaction nonce: acc 2, trx 1']}}))\nexc = {'code': -32002, 'data': {'logs': ['/src/entrypoint.rs Invalid Ethereum transaction nonce: acc 2, trx 1']}, 'message': 'Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument'}\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.message: str = exc[\"message\"].rstrip(\".\")\n    \n            if isinstance(exc[\"data\"], str):\n                # handle parity exceptions - this logic probably is not perfect\n                if \"0x08c379a0\" in exc[\"data\"]:\n                    revert_type, err_msg = [i.strip() for i in exc[\"data\"].split(\"0x08c379a0\", 1)]\n                    err_msg = eth_abi.decode_abi([\"string\"], HexBytes(err_msg))\n                    err_msg = f\"{revert_type} '{err_msg}'\"\n                elif exc[\"data\"].endswith(\"0x\"):\n                    err_msg = exc[\"data\"][:-2].strip()\n                else:\n                    err_msg = exc[\"data\"]\n                raise ValueError(f\"{self.message}: {err_msg}\") from None\n    \n            try:\n                txid, data = next((k, v) for k, v in exc[\"data\"].items() if k.startswith(\"0x\"))\n            except StopIteration:\n>               raise ValueError(exc[\"message\"]) from None\nE               ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:104: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1639278754890,
      "stop" : 1639278754890,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1639278756664,
      "stop" : 1639278774896,
      "duration" : 18232
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1639278807928,
      "stop" : 1639278808264,
      "duration" : 336
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1639278807928,
      "stop" : 1639278807928,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1639278813469,
      "stop" : 1639278816832,
      "duration" : 3363
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
    "statusTrace" : "accounts = <brownie.network.account.Accounts object at 0x7f521b89d070>\ntoken = <Token Contract '0x0c7F3feF08721fbC16E9f8d8A4aC8734D514cF90'>\n\n    def test_sender_balance_decreases(accounts, token):\n        sender_balance = token.balanceOf(accounts[0])\n        amount = sender_balance // 4\n    \n>       token.approve(accounts[1], amount, {'from': accounts[0]})\n\ntests/brownie/token/tests/test_transferFrom.py:9: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1693: in __call__\n    return self.transact(*args)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1566: in transact\n    return tx[\"from\"].transfer(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:642: in transfer\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:743: in _make_transaction\n    exc = VirtualMachineError(e)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError({'code': -32002, 'message': 'Verifying nonce before send transaction: Error processing ...invalid program argument', 'data': {'logs': ['/src/entrypoint.rs Invalid Ethereum transaction nonce: acc 2, trx 1']}}))\nexc = {'code': -32002, 'data': {'logs': ['/src/entrypoint.rs Invalid Ethereum transaction nonce: acc 2, trx 1']}, 'message': 'Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument'}\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.message: str = exc[\"message\"].rstrip(\".\")\n    \n            if isinstance(exc[\"data\"], str):\n                # handle parity exceptions - this logic probably is not perfect\n                if \"0x08c379a0\" in exc[\"data\"]:\n                    revert_type, err_msg = [i.strip() for i in exc[\"data\"].split(\"0x08c379a0\", 1)]\n                    err_msg = eth_abi.decode_abi([\"string\"], HexBytes(err_msg))\n                    err_msg = f\"{revert_type} '{err_msg}'\"\n                elif exc[\"data\"].endswith(\"0x\"):\n                    err_msg = exc[\"data\"][:-2].strip()\n                else:\n                    err_msg = exc[\"data\"]\n                raise ValueError(f\"{self.message}: {err_msg}\") from None\n    \n            try:\n                txid, data = next((k, v) for k, v in exc[\"data\"].items() if k.startswith(\"0x\"))\n            except StopIteration:\n>               raise ValueError(exc[\"message\"]) from None\nE               ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:104: ValueError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "170213ef7d010a18",
      "name" : "stdout",
      "source" : "170213ef7d010a18.txt",
      "type" : "text/plain",
      "size" : 391
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1639279633641,
      "stop" : 1639279633641,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_transferFrom"
  }, {
    "name" : "host",
    "value" : "fv-az83-54"
  }, {
    "name" : "thread",
    "value" : "5008-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_transferFrom"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 21,
        "skipped" : 0,
        "passed" : 49,
        "unknown" : 0,
        "total" : 70
      },
      "items" : [ {
        "uid" : "aa8fc4b3bb183d85",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/204//#testresult/aa8fc4b3bb183d85",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://proxy.teststand2.neontest.xyz/solana",
        "time" : {
          "start" : 1639269429050,
          "stop" : 1639269429050,
          "duration" : 0
        }
      }, {
        "uid" : "e86f8fc5ccd2393",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/203//#testresult/e86f8fc5ccd2393",
        "status" : "passed",
        "time" : {
          "start" : 1639254230370,
          "stop" : 1639254248493,
          "duration" : 18123
        }
      }, {
        "uid" : "4760cfa882c3a596",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/202//#testresult/4760cfa882c3a596",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Blockhash not found'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639232342393,
          "stop" : 1639232342393,
          "duration" : 0
        }
      }, {
        "uid" : "140ea0d27e7e2566",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/201//#testresult/140ea0d27e7e2566",
        "status" : "broken",
        "statusDetails" : "ValueError: Transaction simulation failed: Error processing Instruction 2: custom program error: 0x1",
        "time" : {
          "start" : 1639231076111,
          "stop" : 1639231076111,
          "duration" : 0
        }
      }, {
        "uid" : "f35787b55ec4b455",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/199//#testresult/f35787b55ec4b455",
        "status" : "passed",
        "time" : {
          "start" : 1639223596913,
          "stop" : 1639223610358,
          "duration" : 13445
        }
      }, {
        "uid" : "983d26cba3829549",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/199//#testresult/983d26cba3829549",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: '429 Client Error: Too Many Requests for url: https://neonevm.testnet.rpcpool.com/e7efde89606821742be8ba4a7ced'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639222188619,
          "stop" : 1639222188619,
          "duration" : 0
        }
      }, {
        "uid" : "9a4ecd59ffe5b848",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/198//#testresult/9a4ecd59ffe5b848",
        "status" : "passed",
        "time" : {
          "start" : 1639192959856,
          "stop" : 1639192993280,
          "duration" : 33424
        }
      }, {
        "uid" : "19318d72411c187d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/197//#testresult/19318d72411c187d",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1639182981654,
          "stop" : 1639182981654,
          "duration" : 0
        }
      }, {
        "uid" : "6a8222f71578484f",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/196//#testresult/6a8222f71578484f",
        "status" : "passed",
        "time" : {
          "start" : 1639153058365,
          "stop" : 1639153088546,
          "duration" : 30181
        }
      }, {
        "uid" : "ba9559c6c1b46d41",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/195//#testresult/ba9559c6c1b46d41",
        "status" : "passed",
        "time" : {
          "start" : 1639128520372,
          "stop" : 1639128525234,
          "duration" : 4862
        }
      }, {
        "uid" : "5f5c864234fb954e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/194//#testresult/5f5c864234fb954e",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1639106364329,
          "stop" : 1639106364329,
          "duration" : 0
        }
      }, {
        "uid" : "cccfecf88b3e8f3b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/193//#testresult/cccfecf88b3e8f3b",
        "status" : "passed",
        "time" : {
          "start" : 1639096528109,
          "stop" : 1639096562335,
          "duration" : 34226
        }
      }, {
        "uid" : "da5e5665da4eaaf8",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/192//#testresult/da5e5665da4eaaf8",
        "status" : "passed",
        "time" : {
          "start" : 1639085309780,
          "stop" : 1639085313318,
          "duration" : 3538
        }
      }, {
        "uid" : "4e3ed3a833e727d1",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/189//#testresult/4e3ed3a833e727d1",
        "status" : "passed",
        "time" : {
          "start" : 1639070484660,
          "stop" : 1639070511911,
          "duration" : 27251
        }
      }, {
        "uid" : "716e68e141a9fa4b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/190//#testresult/716e68e141a9fa4b",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Error processing Instruction 1: invalid account data for instruction'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639074285050,
          "stop" : 1639074285050,
          "duration" : 0
        }
      }, {
        "uid" : "47173442a2243d43",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/187//#testresult/47173442a2243d43",
        "status" : "passed",
        "time" : {
          "start" : 1639053274313,
          "stop" : 1639053290503,
          "duration" : 16190
        }
      }, {
        "uid" : "f41ca72786337fa5",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/188//#testresult/f41ca72786337fa5",
        "status" : "passed",
        "time" : {
          "start" : 1639056795102,
          "stop" : 1639056800404,
          "duration" : 5302
        }
      }, {
        "uid" : "bc40eb327163b0cb",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/186//#testresult/bc40eb327163b0cb",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1639045839917,
          "stop" : 1639045839917,
          "duration" : 0
        }
      }, {
        "uid" : "f8710ab762ea2596",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/184//#testresult/f8710ab762ea2596",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1639019927728,
          "stop" : 1639019927728,
          "duration" : 0
        }
      }, {
        "uid" : "57469ce3f1506c90",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/183//#testresult/57469ce3f1506c90",
        "status" : "passed",
        "time" : {
          "start" : 1639010399737,
          "stop" : 1639010403922,
          "duration" : 4185
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "61157f4651101daf.json",
  "parameterValues" : [ ]
}