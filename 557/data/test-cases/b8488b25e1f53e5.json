{
  "uid" : "b8488b25e1f53e5",
  "name" : "test_transfer_full_balance",
  "fullName" : "tests.brownie.token.tests.test_transferFrom#test_transfer_full_balance",
  "historyId" : "03b73bec7c61d3e2f3dd72c77a034146",
  "time" : {
    "start" : 1643329967843,
    "stop" : 1643329999211,
    "duration" : 31368
  },
  "status" : "broken",
  "statusMessage" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
  "statusTrace" : "accounts = <brownie.network.account.Accounts object at 0x7f41fe498df0>\ntoken = <Token Contract '0x983Fc5681E489A7da11071961C53DFEFBd80661F'>\n\n    def test_transfer_full_balance(accounts, token):\n        amount = token.balanceOf(accounts[0])\n        receiver_balance = token.balanceOf(accounts[2])\n    \n>       token.approve(accounts[1], amount, {'from': accounts[0]})\n\ntests/brownie/token/tests/test_transferFrom.py:78: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1693: in __call__\n    return self.transact(*args)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1566: in transact\n    return tx[\"from\"].transfer(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:642: in transfer\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:743: in _make_transaction\n    exc = VirtualMachineError(e)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError({'code': -32002, 'message': 'Verifying nonce before send transaction: Error processing ...valid program argument', 'data': {'logs': ['/src/entrypoint.rs Invalid Ethereum transaction nonce: acc 30, trx 29']}}))\nexc = {'code': -32002, 'data': {'logs': ['/src/entrypoint.rs Invalid Ethereum transaction nonce: acc 30, trx 29']}, 'message': 'Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument'}\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.message: str = exc[\"message\"].rstrip(\".\")\n    \n            if isinstance(exc[\"data\"], str):\n                # handle parity exceptions - this logic probably is not perfect\n                if \"0x08c379a0\" in exc[\"data\"]:\n                    revert_type, err_msg = [i.strip() for i in exc[\"data\"].split(\"0x08c379a0\", 1)]\n                    err_msg = eth_abi.decode_abi([\"string\"], HexBytes(err_msg))\n                    err_msg = f\"{revert_type} '{err_msg}'\"\n                elif exc[\"data\"].endswith(\"0x\"):\n                    err_msg = exc[\"data\"][:-2].strip()\n                else:\n                    err_msg = exc[\"data\"]\n                raise ValueError(f\"{self.message}: {err_msg}\") from None\n    \n            try:\n                txid, data = next((k, v) for k, v in exc[\"data\"].items() if k.startswith(\"0x\"))\n            except StopIteration:\n>               raise ValueError(exc[\"message\"]) from None\nE               ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:104: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : true,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1643329870176,
      "stop" : 1643329870176,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1643329871602,
      "stop" : 1643329888767,
      "duration" : 17165
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1643329892204,
      "stop" : 1643329892204,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1643329892205,
      "stop" : 1643329892488,
      "duration" : 283
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1643329935981,
      "stop" : 1643329938504,
      "duration" : 2523
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1643330214250,
      "stop" : 1643330214250,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_transferFrom"
  }, {
    "name" : "host",
    "value" : "fv-az124-118"
  }, {
    "name" : "thread",
    "value" : "3597-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_transferFrom"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 35,
        "skipped" : 0,
        "passed" : 99,
        "unknown" : 0,
        "total" : 134
      },
      "items" : [ {
        "uid" : "5a235f1f2f6c1ea7",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/556//#testresult/5a235f1f2f6c1ea7",
        "status" : "passed",
        "time" : {
          "start" : 1643323321765,
          "stop" : 1643323324724,
          "duration" : 2959
        }
      }, {
        "uid" : "82ddf79669393c43",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/554//#testresult/82ddf79669393c43",
        "status" : "passed",
        "time" : {
          "start" : 1643301918665,
          "stop" : 1643301921643,
          "duration" : 2978
        }
      }, {
        "uid" : "95f491254fbf239b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/553//#testresult/95f491254fbf239b",
        "status" : "passed",
        "time" : {
          "start" : 1643295791008,
          "stop" : 1643295795798,
          "duration" : 4790
        }
      }, {
        "uid" : "570a61be77dbc14",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/552//#testresult/570a61be77dbc14",
        "status" : "passed",
        "time" : {
          "start" : 1643290935083,
          "stop" : 1643290939384,
          "duration" : 4301
        }
      }, {
        "uid" : "5ace13ae2be22693",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/551//#testresult/5ace13ae2be22693",
        "status" : "passed",
        "time" : {
          "start" : 1643287206621,
          "stop" : 1643287209691,
          "duration" : 3070
        }
      }, {
        "uid" : "43720a39297bb9fd",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/550//#testresult/43720a39297bb9fd",
        "status" : "passed",
        "time" : {
          "start" : 1643274679475,
          "stop" : 1643274683654,
          "duration" : 4179
        }
      }, {
        "uid" : "da81a9ec788826b0",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/548//#testresult/da81a9ec788826b0",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: http://proxy.night.stand.neontest.xyz/solana",
        "time" : {
          "start" : 1643253721662,
          "stop" : 1643253721662,
          "duration" : 0
        }
      }, {
        "uid" : "f447d9e20b734376",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/547//#testresult/f447d9e20b734376",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ReadTimeout: HTTPConnectionPool(host='proxy.night.stand.neontest.xyz', port=80): Read timed out. (read timeout=30)",
        "time" : {
          "start" : 1643252967014,
          "stop" : 1643252967014,
          "duration" : 0
        }
      }, {
        "uid" : "9ccad925209cb41f",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/546//#testresult/9ccad925209cb41f",
        "status" : "passed",
        "time" : {
          "start" : 1643244023819,
          "stop" : 1643244035991,
          "duration" : 12172
        }
      }, {
        "uid" : "c5788333cf20a583",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/544//#testresult/c5788333cf20a583",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ReadTimeout: HTTPConnectionPool(host='proxy.night.stand.neontest.xyz', port=80): Read timed out. (read timeout=30)",
        "time" : {
          "start" : 1643200333688,
          "stop" : 1643200333688,
          "duration" : 0
        }
      }, {
        "uid" : "61ce5d0653380471",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/542//#testresult/61ce5d0653380471",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ReadTimeout: HTTPConnectionPool(host='proxy.night.stand.neontest.xyz', port=80): Read timed out. (read timeout=30)",
        "time" : {
          "start" : 1643198600079,
          "stop" : 1643198600079,
          "duration" : 0
        }
      }, {
        "uid" : "6ab565ee765e6d77",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/541//#testresult/6ab565ee765e6d77",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ReadTimeout: HTTPConnectionPool(host='proxy.night.stand.neontest.xyz', port=80): Read timed out. (read timeout=30)",
        "time" : {
          "start" : 1643190946581,
          "stop" : 1643190946581,
          "duration" : 0
        }
      }, {
        "uid" : "987fe416d05ac3c8",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/530//#testresult/987fe416d05ac3c8",
        "status" : "passed",
        "time" : {
          "start" : 1642776785166,
          "stop" : 1642776789180,
          "duration" : 4014
        }
      }, {
        "uid" : "1372aedc9a3d0b71",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/529//#testresult/1372aedc9a3d0b71",
        "status" : "passed",
        "time" : {
          "start" : 1642772220005,
          "stop" : 1642772228358,
          "duration" : 8353
        }
      }, {
        "uid" : "806d77e234dae8f3",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/528//#testresult/806d77e234dae8f3",
        "status" : "passed",
        "time" : {
          "start" : 1642758285349,
          "stop" : 1642758290696,
          "duration" : 5347
        }
      }, {
        "uid" : "eb876d1265ffcbe6",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/526//#testresult/eb876d1265ffcbe6",
        "status" : "passed",
        "time" : {
          "start" : 1642725168771,
          "stop" : 1642725182111,
          "duration" : 13340
        }
      }, {
        "uid" : "965f4aeb3e04b12e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/524//#testresult/965f4aeb3e04b12e",
        "status" : "passed",
        "time" : {
          "start" : 1642648361870,
          "stop" : 1642648365771,
          "duration" : 3901
        }
      }, {
        "uid" : "e6c1a89c2f09be66",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/523//#testresult/e6c1a89c2f09be66",
        "status" : "passed",
        "time" : {
          "start" : 1642639022632,
          "stop" : 1642639026924,
          "duration" : 4292
        }
      }, {
        "uid" : "4355f5ae8e08d11d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/522//#testresult/4355f5ae8e08d11d",
        "status" : "passed",
        "time" : {
          "start" : 1642562014321,
          "stop" : 1642562018611,
          "duration" : 4290
        }
      }, {
        "uid" : "944ed38275074965",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/521//#testresult/944ed38275074965",
        "status" : "passed",
        "time" : {
          "start" : 1642552288833,
          "stop" : 1642552293143,
          "duration" : 4310
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "b8488b25e1f53e5.json",
  "parameterValues" : [ ]
}