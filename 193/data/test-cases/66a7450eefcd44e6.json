{
  "uid" : "66a7450eefcd44e6",
  "name" : "test_revoke_approve",
  "fullName" : "tests.brownie.token.tests.test_approve#test_revoke_approve",
  "historyId" : "493792eebd5a4fea1ce221a16db97b7d",
  "time" : {
    "start" : 1639096393311,
    "stop" : 1639096426477,
    "duration" : 33166
  },
  "status" : "broken",
  "statusMessage" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
  "statusTrace" : "token = <Token Contract '0x0D34639Da436A6927E09f2f70fFD6E2F73d57CCF'>\naccounts = <brownie.network.account.Accounts object at 0x7fa7d3ced5e0>\n\n    def test_revoke_approve(token, accounts):\n        token.approve(accounts[1], 10**19, {'from': accounts[0]})\n>       token.approve(accounts[1], 0, {'from': accounts[0]})\n\ntests/brownie/token/tests/test_approve.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1693: in __call__\n    return self.transact(*args)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1566: in transact\n    return tx[\"from\"].transfer(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:642: in transfer\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:743: in _make_transaction\n    exc = VirtualMachineError(e)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError({'code': -32002, 'message': 'Verifying nonce before send transaction: Error processing ...invalid program argument', 'data': {'logs': ['/src/entrypoint.rs Invalid Ethereum transaction nonce: acc 6, trx 5']}}))\nexc = {'code': -32002, 'data': {'logs': ['/src/entrypoint.rs Invalid Ethereum transaction nonce: acc 6, trx 5']}, 'message': 'Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument'}\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.message: str = exc[\"message\"].rstrip(\".\")\n    \n            if isinstance(exc[\"data\"], str):\n                # handle parity exceptions - this logic probably is not perfect\n                if \"0x08c379a0\" in exc[\"data\"]:\n                    revert_type, err_msg = [i.strip() for i in exc[\"data\"].split(\"0x08c379a0\", 1)]\n                    err_msg = eth_abi.decode_abi([\"string\"], HexBytes(err_msg))\n                    err_msg = f\"{revert_type} '{err_msg}'\"\n                elif exc[\"data\"].endswith(\"0x\"):\n                    err_msg = exc[\"data\"][:-2].strip()\n                else:\n                    err_msg = exc[\"data\"]\n                raise ValueError(f\"{self.message}: {err_msg}\") from None\n    \n            try:\n                txid, data = next((k, v) for k, v in exc[\"data\"].items() if k.startswith(\"0x\"))\n            except StopIteration:\n>               raise ValueError(exc[\"message\"]) from None\nE               ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:104: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : true,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1639096274553,
      "stop" : 1639096274553,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1639096276044,
      "stop" : 1639096287286,
      "duration" : 11242
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1639096321088,
      "stop" : 1639096321088,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1639096321088,
      "stop" : 1639096321354,
      "duration" : 266
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1639096321354,
      "stop" : 1639096354824,
      "duration" : 33470
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
    "statusTrace" : "token = <Token Contract '0x0D34639Da436A6927E09f2f70fFD6E2F73d57CCF'>\naccounts = <brownie.network.account.Accounts object at 0x7fa7d3ced5e0>\n\n    def test_revoke_approve(token, accounts):\n        token.approve(accounts[1], 10**19, {'from': accounts[0]})\n>       token.approve(accounts[1], 0, {'from': accounts[0]})\n\ntests/brownie/token/tests/test_approve.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1693: in __call__\n    return self.transact(*args)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1566: in transact\n    return tx[\"from\"].transfer(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:642: in transfer\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:743: in _make_transaction\n    exc = VirtualMachineError(e)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError({'code': -32002, 'message': 'Verifying nonce before send transaction: Error processing ...invalid program argument', 'data': {'logs': ['/src/entrypoint.rs Invalid Ethereum transaction nonce: acc 6, trx 5']}}))\nexc = {'code': -32002, 'data': {'logs': ['/src/entrypoint.rs Invalid Ethereum transaction nonce: acc 6, trx 5']}, 'message': 'Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument'}\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.message: str = exc[\"message\"].rstrip(\".\")\n    \n            if isinstance(exc[\"data\"], str):\n                # handle parity exceptions - this logic probably is not perfect\n                if \"0x08c379a0\" in exc[\"data\"]:\n                    revert_type, err_msg = [i.strip() for i in exc[\"data\"].split(\"0x08c379a0\", 1)]\n                    err_msg = eth_abi.decode_abi([\"string\"], HexBytes(err_msg))\n                    err_msg = f\"{revert_type} '{err_msg}'\"\n                elif exc[\"data\"].endswith(\"0x\"):\n                    err_msg = exc[\"data\"][:-2].strip()\n                else:\n                    err_msg = exc[\"data\"]\n                raise ValueError(f\"{self.message}: {err_msg}\") from None\n    \n            try:\n                txid, data = next((k, v) for k, v in exc[\"data\"].items() if k.startswith(\"0x\"))\n            except StopIteration:\n>               raise ValueError(exc[\"message\"]) from None\nE               ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:104: ValueError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "4699c97c30bce8d6",
      "name" : "stdout",
      "source" : "4699c97c30bce8d6.txt",
      "type" : "text/plain",
      "size" : 307
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1639097177919,
      "stop" : 1639097177919,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_approve"
  }, {
    "name" : "host",
    "value" : "fv-az123-316"
  }, {
    "name" : "thread",
    "value" : "4832-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_approve"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 14,
        "skipped" : 0,
        "passed" : 44,
        "unknown" : 0,
        "total" : 58
      },
      "items" : [ {
        "uid" : "a012c69d20b7358a",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/192//#testresult/a012c69d20b7358a",
        "status" : "passed",
        "time" : {
          "start" : 1639085275479,
          "stop" : 1639085278823,
          "duration" : 3344
        }
      }, {
        "uid" : "79d586cd7c9239d3",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/189//#testresult/79d586cd7c9239d3",
        "status" : "passed",
        "time" : {
          "start" : 1639070253566,
          "stop" : 1639070276399,
          "duration" : 22833
        }
      }, {
        "uid" : "676483381c4930f2",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/190//#testresult/676483381c4930f2",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Error processing Instruction 1: invalid account data for instruction'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639074283222,
          "stop" : 1639074283222,
          "duration" : 0
        }
      }, {
        "uid" : "818e7e424df62c7",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/187//#testresult/818e7e424df62c7",
        "status" : "passed",
        "time" : {
          "start" : 1639053154944,
          "stop" : 1639053165598,
          "duration" : 10654
        }
      }, {
        "uid" : "1f8013be29d1d230",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/188//#testresult/1f8013be29d1d230",
        "status" : "passed",
        "time" : {
          "start" : 1639056719567,
          "stop" : 1639056723757,
          "duration" : 4190
        }
      }, {
        "uid" : "314afdc78e915b37",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/186//#testresult/314afdc78e915b37",
        "status" : "passed",
        "time" : {
          "start" : 1639045795119,
          "stop" : 1639045798945,
          "duration" : 3826
        }
      }, {
        "uid" : "66f940716a1da22e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/184//#testresult/66f940716a1da22e",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1639019771727,
          "stop" : 1639019771727,
          "duration" : 0
        }
      }, {
        "uid" : "a7ad802679019731",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/183//#testresult/a7ad802679019731",
        "status" : "passed",
        "time" : {
          "start" : 1639010097275,
          "stop" : 1639010100863,
          "duration" : 3588
        }
      }, {
        "uid" : "19b21e57547c979a",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/182//#testresult/19b21e57547c979a",
        "status" : "passed",
        "time" : {
          "start" : 1638990628108,
          "stop" : 1638990632360,
          "duration" : 4252
        }
      }, {
        "uid" : "35f74c9e0025f835",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/177//#testresult/35f74c9e0025f835",
        "status" : "passed",
        "time" : {
          "start" : 1638969702150,
          "stop" : 1638969716146,
          "duration" : 13996
        }
      }, {
        "uid" : "67c02893747f1497",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/181//#testresult/67c02893747f1497",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1638980798319,
          "stop" : 1638980829591,
          "duration" : 31272
        }
      }, {
        "uid" : "1afb4d32c47e6c29",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/180//#testresult/1afb4d32c47e6c29",
        "status" : "passed",
        "time" : {
          "start" : 1638975755071,
          "stop" : 1638975758015,
          "duration" : 2944
        }
      }, {
        "uid" : "50be3d9ea65a7ff4",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/179//#testresult/50be3d9ea65a7ff4",
        "status" : "passed",
        "time" : {
          "start" : 1638974606994,
          "stop" : 1638974611213,
          "duration" : 4219
        }
      }, {
        "uid" : "9e0aa93a0343d79b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/178//#testresult/9e0aa93a0343d79b",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1638973498806,
          "stop" : 1638973498806,
          "duration" : 0
        }
      }, {
        "uid" : "d246855a0be8c624",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/176//#testresult/d246855a0be8c624",
        "status" : "passed",
        "time" : {
          "start" : 1638951089958,
          "stop" : 1638951100627,
          "duration" : 10669
        }
      }, {
        "uid" : "814af460f7e59189",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/174//#testresult/814af460f7e59189",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ConnectionError: HTTPSConnectionPool(host='proxy.teststand2.neontest.xyz', port=443): Max retries exceeded with url: /solana (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7fadbd1ce9d0>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1638932971956,
          "stop" : 1638932971956,
          "duration" : 0
        }
      }, {
        "uid" : "2d2a67e10c9aa034",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/173//#testresult/2d2a67e10c9aa034",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ConnectionError: HTTPSConnectionPool(host='proxy.teststand2.neontest.xyz', port=443): Max retries exceeded with url: /solana (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7fb8653e67f0>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1638923380507,
          "stop" : 1638923380507,
          "duration" : 0
        }
      }, {
        "uid" : "a9fb7a74c1e6a535",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/172//#testresult/a9fb7a74c1e6a535",
        "status" : "passed",
        "time" : {
          "start" : 1638913106537,
          "stop" : 1638913119912,
          "duration" : 13375
        }
      }, {
        "uid" : "393cc69d5703b487",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/171//#testresult/393cc69d5703b487",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ConnectionError: HTTPSConnectionPool(host='proxy.testnet.neonlabs.org', port=443): Max retries exceeded with url: /solana (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f2408313a30>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1638912574099,
          "stop" : 1638912574099,
          "duration" : 0
        }
      }, {
        "uid" : "94e8992c174d3c50",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/170//#testresult/94e8992c174d3c50",
        "status" : "passed",
        "time" : {
          "start" : 1638908492855,
          "stop" : 1638908505097,
          "duration" : 12242
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "66a7450eefcd44e6.json",
  "parameterValues" : [ ]
}