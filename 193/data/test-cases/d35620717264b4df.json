{
  "uid" : "d35620717264b4df",
  "name" : "test_transfer_event_fires",
  "fullName" : "tests.brownie.token.tests.test_transferFrom#test_transfer_event_fires",
  "historyId" : "928ffb81b12f37ad66f1eb91299aed9a",
  "time" : {
    "start" : 1639096948001,
    "stop" : 1639096981040,
    "duration" : 33039
  },
  "status" : "broken",
  "statusMessage" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
  "statusTrace" : "accounts = <brownie.network.account.Accounts object at 0x7fa7d3ced5e0>\ntoken = <Token Contract '0xC4636063c15a14784a113E8eaBD0cB0e7B303250'>\n\n    def test_transfer_event_fires(accounts, token):\n        amount = token.balanceOf(accounts[0])\n    \n        token.approve(accounts[1], amount, {'from': accounts[0]})\n>       tx = token.transferFrom(accounts[0], accounts[2], amount, {'from': accounts[1]})\n\ntests/brownie/token/tests/test_transferFrom.py:161: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1693: in __call__\n    return self.transact(*args)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1566: in transact\n    return tx[\"from\"].transfer(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:642: in transfer\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:743: in _make_transaction\n    exc = VirtualMachineError(e)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError({'code': -32002, 'message': 'Verifying nonce before send transaction: Error processing ...invalid program argument', 'data': {'logs': ['/src/entrypoint.rs Invalid Ethereum transaction nonce: acc 4, trx 3']}}))\nexc = {'code': -32002, 'data': {'logs': ['/src/entrypoint.rs Invalid Ethereum transaction nonce: acc 4, trx 3']}, 'message': 'Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument'}\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.message: str = exc[\"message\"].rstrip(\".\")\n    \n            if isinstance(exc[\"data\"], str):\n                # handle parity exceptions - this logic probably is not perfect\n                if \"0x08c379a0\" in exc[\"data\"]:\n                    revert_type, err_msg = [i.strip() for i in exc[\"data\"].split(\"0x08c379a0\", 1)]\n                    err_msg = eth_abi.decode_abi([\"string\"], HexBytes(err_msg))\n                    err_msg = f\"{revert_type} '{err_msg}'\"\n                elif exc[\"data\"].endswith(\"0x\"):\n                    err_msg = exc[\"data\"][:-2].strip()\n                else:\n                    err_msg = exc[\"data\"]\n                raise ValueError(f\"{self.message}: {err_msg}\") from None\n    \n            try:\n                txid, data = next((k, v) for k, v in exc[\"data\"].items() if k.startswith(\"0x\"))\n            except StopIteration:\n>               raise ValueError(exc[\"message\"]) from None\nE               ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:104: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : true,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1639096274553,
      "stop" : 1639096274553,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1639096276044,
      "stop" : 1639096287286,
      "duration" : 11242
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1639096321088,
      "stop" : 1639096321088,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1639096321088,
      "stop" : 1639096321354,
      "duration" : 266
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1639096524891,
      "stop" : 1639096528109,
      "duration" : 3218
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
    "statusTrace" : "accounts = <brownie.network.account.Accounts object at 0x7fa7d3ced5e0>\ntoken = <Token Contract '0xC4636063c15a14784a113E8eaBD0cB0e7B303250'>\n\n    def test_transfer_event_fires(accounts, token):\n        amount = token.balanceOf(accounts[0])\n    \n        token.approve(accounts[1], amount, {'from': accounts[0]})\n>       tx = token.transferFrom(accounts[0], accounts[2], amount, {'from': accounts[1]})\n\ntests/brownie/token/tests/test_transferFrom.py:161: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1693: in __call__\n    return self.transact(*args)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1566: in transact\n    return tx[\"from\"].transfer(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:642: in transfer\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:743: in _make_transaction\n    exc = VirtualMachineError(e)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError({'code': -32002, 'message': 'Verifying nonce before send transaction: Error processing ...invalid program argument', 'data': {'logs': ['/src/entrypoint.rs Invalid Ethereum transaction nonce: acc 4, trx 3']}}))\nexc = {'code': -32002, 'data': {'logs': ['/src/entrypoint.rs Invalid Ethereum transaction nonce: acc 4, trx 3']}, 'message': 'Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument'}\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.message: str = exc[\"message\"].rstrip(\".\")\n    \n            if isinstance(exc[\"data\"], str):\n                # handle parity exceptions - this logic probably is not perfect\n                if \"0x08c379a0\" in exc[\"data\"]:\n                    revert_type, err_msg = [i.strip() for i in exc[\"data\"].split(\"0x08c379a0\", 1)]\n                    err_msg = eth_abi.decode_abi([\"string\"], HexBytes(err_msg))\n                    err_msg = f\"{revert_type} '{err_msg}'\"\n                elif exc[\"data\"].endswith(\"0x\"):\n                    err_msg = exc[\"data\"][:-2].strip()\n                else:\n                    err_msg = exc[\"data\"]\n                raise ValueError(f\"{self.message}: {err_msg}\") from None\n    \n            try:\n                txid, data = next((k, v) for k, v in exc[\"data\"].items() if k.startswith(\"0x\"))\n            except StopIteration:\n>               raise ValueError(exc[\"message\"]) from None\nE               ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:104: ValueError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "479b14a8eed633",
      "name" : "stdout",
      "source" : "479b14a8eed633.txt",
      "type" : "text/plain",
      "size" : 308
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1639097177919,
      "stop" : 1639097177919,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_transferFrom"
  }, {
    "name" : "host",
    "value" : "fv-az123-316"
  }, {
    "name" : "thread",
    "value" : "4832-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_transferFrom"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 16,
        "skipped" : 0,
        "passed" : 42,
        "unknown" : 0,
        "total" : 58
      },
      "items" : [ {
        "uid" : "8c2df64eab4757e9",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/192//#testresult/8c2df64eab4757e9",
        "status" : "passed",
        "time" : {
          "start" : 1639085363470,
          "stop" : 1639085366824,
          "duration" : 3354
        }
      }, {
        "uid" : "a827f2dd708af8a2",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/189//#testresult/a827f2dd708af8a2",
        "status" : "passed",
        "time" : {
          "start" : 1639070820691,
          "stop" : 1639070842711,
          "duration" : 22020
        }
      }, {
        "uid" : "dd194e183fa5b5d6",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/190//#testresult/dd194e183fa5b5d6",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Error processing Instruction 1: invalid account data for instruction'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639074287034,
          "stop" : 1639074287034,
          "duration" : 0
        }
      }, {
        "uid" : "84cfa44a326c2822",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/187//#testresult/84cfa44a326c2822",
        "status" : "passed",
        "time" : {
          "start" : 1639053450763,
          "stop" : 1639053462265,
          "duration" : 11502
        }
      }, {
        "uid" : "2235b6674fa672fc",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/188//#testresult/2235b6674fa672fc",
        "status" : "passed",
        "time" : {
          "start" : 1639056963718,
          "stop" : 1639056967963,
          "duration" : 4245
        }
      }, {
        "uid" : "a86718cb84bd0fb4",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/186//#testresult/a86718cb84bd0fb4",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1639045902531,
          "stop" : 1639045902531,
          "duration" : 0
        }
      }, {
        "uid" : "e9c579b94d416f15",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/184//#testresult/e9c579b94d416f15",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1639019991082,
          "stop" : 1639019991082,
          "duration" : 0
        }
      }, {
        "uid" : "6f88bb927aef34ca",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/183//#testresult/6f88bb927aef34ca",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1639010707670,
          "stop" : 1639010739114,
          "duration" : 31444
        }
      }, {
        "uid" : "cce1ebcc5a0229ea",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/182//#testresult/cce1ebcc5a0229ea",
        "status" : "passed",
        "time" : {
          "start" : 1638990735631,
          "stop" : 1638990740283,
          "duration" : 4652
        }
      }, {
        "uid" : "5d6ab1809ecba777",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/177//#testresult/5d6ab1809ecba777",
        "status" : "passed",
        "time" : {
          "start" : 1638970088785,
          "stop" : 1638970104535,
          "duration" : 15750
        }
      }, {
        "uid" : "cb933234968033f9",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/181//#testresult/cb933234968033f9",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1638981046928,
          "stop" : 1638981046928,
          "duration" : 0
        }
      }, {
        "uid" : "20fbcdb3121cd954",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/180//#testresult/20fbcdb3121cd954",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1638975845390,
          "stop" : 1638975845390,
          "duration" : 0
        }
      }, {
        "uid" : "81a3481d70e5bf5d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/179//#testresult/81a3481d70e5bf5d",
        "status" : "passed",
        "time" : {
          "start" : 1638974714894,
          "stop" : 1638974730461,
          "duration" : 15567
        }
      }, {
        "uid" : "209f75fce8e8239f",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/178//#testresult/209f75fce8e8239f",
        "status" : "passed",
        "time" : {
          "start" : 1638973704885,
          "stop" : 1638973709033,
          "duration" : 4148
        }
      }, {
        "uid" : "bfa5bf2cda5bfb46",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/176//#testresult/bfa5bf2cda5bfb46",
        "status" : "passed",
        "time" : {
          "start" : 1638951393622,
          "stop" : 1638951406706,
          "duration" : 13084
        }
      }, {
        "uid" : "a556f3475a015707",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/174//#testresult/a556f3475a015707",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ConnectionError: HTTPSConnectionPool(host='proxy.teststand2.neontest.xyz', port=443): Max retries exceeded with url: /solana (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7fadbd81f0d0>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1638932980301,
          "stop" : 1638932980301,
          "duration" : 0
        }
      }, {
        "uid" : "8358eda534c85d1",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/173//#testresult/8358eda534c85d1",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ConnectionError: HTTPSConnectionPool(host='proxy.teststand2.neontest.xyz', port=443): Max retries exceeded with url: /solana (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7fb865a3b130>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1638923389355,
          "stop" : 1638923389355,
          "duration" : 0
        }
      }, {
        "uid" : "c23d0bfa3a81a46b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/172//#testresult/c23d0bfa3a81a46b",
        "status" : "passed",
        "time" : {
          "start" : 1638913448002,
          "stop" : 1638913462144,
          "duration" : 14142
        }
      }, {
        "uid" : "bc5d55d1baf0e9e9",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/171//#testresult/bc5d55d1baf0e9e9",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ConnectionError: HTTPSConnectionPool(host='proxy.testnet.neonlabs.org', port=443): Max retries exceeded with url: /solana (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f240840a520>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1638912581745,
          "stop" : 1638912581745,
          "duration" : 0
        }
      }, {
        "uid" : "59316227e21727be",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/170//#testresult/59316227e21727be",
        "status" : "passed",
        "time" : {
          "start" : 1638908847367,
          "stop" : 1638908860825,
          "duration" : 13458
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "d35620717264b4df.json",
  "parameterValues" : [ ]
}