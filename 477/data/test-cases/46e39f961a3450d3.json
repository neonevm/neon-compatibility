{
  "uid" : "46e39f961a3450d3",
  "name" : "test_receiver_balance_increases",
  "fullName" : "tests.brownie.token.tests.test_transfer#test_receiver_balance_increases",
  "historyId" : "dffbda724ae04651c982cb7ed5d1e09d",
  "time" : {
    "start" : 1642031187779,
    "stop" : 1642031187779,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "ValueError: connection already closed",
  "statusTrace" : "brownie_project = <Project 'TokenProject'>\naccounts = <brownie.network.account.Accounts object at 0x7fae302657f0>\n\n    @pytest.fixture(scope=\"module\")\n    def token(brownie_project, accounts):\n>       return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n\ntests/brownie/token/tests/conftest.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:600: in __call__\n    return tx[\"from\"].deploy(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:508: in deploy\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:725: in _make_transaction\n    raise VirtualMachineError(e) from None\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError({'code': -32000, 'message': 'connection already closed'}))\nexc = {'code': -32000, 'message': 'connection already closed'}\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n>               raise ValueError(exc[\"message\"]) from None\nE               ValueError: connection already closed\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:85: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1642031167582,
      "stop" : 1642031167582,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1642031168838,
      "stop" : 1642031184355,
      "duration" : 15517
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1642031185279,
      "stop" : 1642031185605,
      "duration" : 326
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1642031185279,
      "stop" : 1642031185279,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1642031187164,
      "stop" : 1642031187711,
      "duration" : 547
    },
    "status" : "broken",
    "statusMessage" : "ValueError: connection already closed\n",
    "statusTrace" : "  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 932, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/neon-compatibility/neon-compatibility/tests/brownie/token/tests/conftest.py\", line 49, in token\n    return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py\", line 600, in __call__\n    return tx[\"from\"].deploy(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 508, in deploy\n    receipt, exc = self._make_transaction(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 725, in _make_transaction\n    raise VirtualMachineError(e) from None\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py\", line 85, in __init__\n    raise ValueError(exc[\"message\"]) from None\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1642031256987,
      "stop" : 1642031256987,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_transfer"
  }, {
    "name" : "host",
    "value" : "fv-az74-735"
  }, {
    "name" : "thread",
    "value" : "3663-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_transfer"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 22,
        "skipped" : 0,
        "passed" : 67,
        "unknown" : 0,
        "total" : 89
      },
      "items" : [ {
        "uid" : "ac739b686a37f9d4",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/476//#testresult/ac739b686a37f9d4",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1642028349631,
          "stop" : 1642028349631,
          "duration" : 0
        }
      }, {
        "uid" : "ee64724cd9bda0c2",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/474//#testresult/ee64724cd9bda0c2",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1642025671813,
          "stop" : 1642025671813,
          "duration" : 0
        }
      }, {
        "uid" : "aaff82587e11eb1f",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/472//#testresult/aaff82587e11eb1f",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1642018236916,
          "stop" : 1642018236916,
          "duration" : 0
        }
      }, {
        "uid" : "6d9de2f0a5a87448",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/471//#testresult/6d9de2f0a5a87448",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1642015603584,
          "stop" : 1642015603584,
          "duration" : 0
        }
      }, {
        "uid" : "6f33eedc1e28fa46",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/470//#testresult/6f33eedc1e28fa46",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1642014229545,
          "stop" : 1642014229545,
          "duration" : 0
        }
      }, {
        "uid" : "960bdb15d8529846",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/469//#testresult/960bdb15d8529846",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1642012911096,
          "stop" : 1642012911096,
          "duration" : 0
        }
      }, {
        "uid" : "3ea2c6cca9b6b2fa",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/468//#testresult/3ea2c6cca9b6b2fa",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1642011421434,
          "stop" : 1642011421434,
          "duration" : 0
        }
      }, {
        "uid" : "77def6a43e64f22c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/466//#testresult/77def6a43e64f22c",
        "status" : "passed",
        "time" : {
          "start" : 1641997966326,
          "stop" : 1641997968807,
          "duration" : 2481
        }
      }, {
        "uid" : "954639f4bb7063de",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/465//#testresult/954639f4bb7063de",
        "status" : "passed",
        "time" : {
          "start" : 1641993728198,
          "stop" : 1641993730583,
          "duration" : 2385
        }
      }, {
        "uid" : "977512e7a1ff81b9",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/464//#testresult/977512e7a1ff81b9",
        "status" : "passed",
        "time" : {
          "start" : 1641990987225,
          "stop" : 1641990989394,
          "duration" : 2169
        }
      }, {
        "uid" : "f88fa729276d57d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/463//#testresult/f88fa729276d57d",
        "status" : "passed",
        "time" : {
          "start" : 1641986346829,
          "stop" : 1641986348743,
          "duration" : 1914
        }
      }, {
        "uid" : "d807f96cfb65553b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/461//#testresult/d807f96cfb65553b",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='10.2.0.2', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f189a54ddc0>: Failed to establish a new connection: [Errno 111] Connection refused'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1641982477611,
          "stop" : 1641982477611,
          "duration" : 0
        }
      }, {
        "uid" : "574fd0cf9b363c1d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/460//#testresult/574fd0cf9b363c1d",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='10.2.0.2', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f189463f9a0>: Failed to establish a new connection: [Errno 111] Connection refused'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1641980266574,
          "stop" : 1641980266574,
          "duration" : 0
        }
      }, {
        "uid" : "7df3d2d75f78a06d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/459//#testresult/7df3d2d75f78a06d",
        "status" : "passed",
        "time" : {
          "start" : 1641975801656,
          "stop" : 1641975804131,
          "duration" : 2475
        }
      }, {
        "uid" : "50be63543d33efee",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/458//#testresult/50be63543d33efee",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='10.2.0.2', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f1896051670>: Failed to establish a new connection: [Errno 111] Connection refused'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1641974826571,
          "stop" : 1641974826571,
          "duration" : 0
        }
      }, {
        "uid" : "1a429aa91a04e969",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/457//#testresult/1a429aa91a04e969",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='10.2.0.2', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f1895f325b0>: Failed to establish a new connection: [Errno 111] Connection refused'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1641974205092,
          "stop" : 1641974205092,
          "duration" : 0
        }
      }, {
        "uid" : "848a71488755f177",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/456//#testresult/848a71488755f177",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ReadTimeout: HTTPConnectionPool(host='proxy.night.stand.neontest.xyz', port=80): Read timed out. (read timeout=30)",
        "time" : {
          "start" : 1641957855964,
          "stop" : 1641957855964,
          "duration" : 0
        }
      }, {
        "uid" : "e0334b05fae740e6",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/455//#testresult/e0334b05fae740e6",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ReadTimeout: HTTPConnectionPool(host='proxy.night.stand.neontest.xyz', port=80): Read timed out. (read timeout=30)",
        "time" : {
          "start" : 1641952052324,
          "stop" : 1641952052324,
          "duration" : 0
        }
      }, {
        "uid" : "641db364269451e7",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/454//#testresult/641db364269451e7",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ReadTimeout: HTTPConnectionPool(host='proxy.night.stand.neontest.xyz', port=80): Read timed out. (read timeout=30)",
        "time" : {
          "start" : 1641950530481,
          "stop" : 1641950530481,
          "duration" : 0
        }
      }, {
        "uid" : "3d8a5dc3290048c8",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/453//#testresult/3d8a5dc3290048c8",
        "status" : "passed",
        "time" : {
          "start" : 1641947745474,
          "stop" : 1641947747552,
          "duration" : 2078
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "46e39f961a3450d3.json",
  "parameterValues" : [ ]
}