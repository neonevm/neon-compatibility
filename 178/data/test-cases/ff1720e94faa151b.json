{
  "uid" : "ff1720e94faa151b",
  "name" : "test_initial_approval_is_zero[4]",
  "fullName" : "tests.brownie.token.tests.test_approve#test_initial_approval_is_zero",
  "historyId" : "037b77ef7fa0bf3ae54efe64c16442a6",
  "time" : {
    "start" : 1638973498546,
    "stop" : 1638973498546,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
  "statusTrace" : "brownie_project = <Project 'TokenProject'>\naccounts = <brownie.network.account.Accounts object at 0x7f020c75f370>\n\n    @pytest.fixture(scope=\"module\")\n    def token(brownie_project, accounts):\n>       return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n\ntests/brownie/token/tests/conftest.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:600: in __call__\n    return tx[\"from\"].deploy(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:508: in deploy\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:743: in _make_transaction\n    exc = VirtualMachineError(e)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError({'code': -32002, 'message': 'Verifying nonce before send transaction: Error processing ...invalid program argument', 'data': {'logs': ['/src/entrypoint.rs Invalid Ethereum transaction nonce: acc 2, trx 1']}}))\nexc = {'code': -32002, 'data': {'logs': ['/src/entrypoint.rs Invalid Ethereum transaction nonce: acc 2, trx 1']}, 'message': 'Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument'}\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.message: str = exc[\"message\"].rstrip(\".\")\n    \n            if isinstance(exc[\"data\"], str):\n                # handle parity exceptions - this logic probably is not perfect\n                if \"0x08c379a0\" in exc[\"data\"]:\n                    revert_type, err_msg = [i.strip() for i in exc[\"data\"].split(\"0x08c379a0\", 1)]\n                    err_msg = eth_abi.decode_abi([\"string\"], HexBytes(err_msg))\n                    err_msg = f\"{revert_type} '{err_msg}'\"\n                elif exc[\"data\"].endswith(\"0x\"):\n                    err_msg = exc[\"data\"][:-2].strip()\n                else:\n                    err_msg = exc[\"data\"]\n                raise ValueError(f\"{self.message}: {err_msg}\") from None\n    \n            try:\n                txid, data = next((k, v) for k, v in exc[\"data\"].items() if k.startswith(\"0x\"))\n            except StopIteration:\n>               raise ValueError(exc[\"message\"]) from None\nE               ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:104: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : true,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1638973382449,
      "stop" : 1638973382449,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1638973384184,
      "stop" : 1638973401873,
      "duration" : 17689
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1638973466386,
      "stop" : 1638973466689,
      "duration" : 303
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1638973466386,
      "stop" : 1638973466386,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1638973466689,
      "stop" : 1638973498101,
      "duration" : 31412
    },
    "status" : "broken",
    "statusMessage" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument\n",
    "statusTrace" : "  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 932, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/neon-compatibility/neon-compatibility/tests/brownie/token/tests/conftest.py\", line 49, in token\n    return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py\", line 600, in __call__\n    return tx[\"from\"].deploy(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 508, in deploy\n    receipt, exc = self._make_transaction(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 743, in _make_transaction\n    exc = VirtualMachineError(e)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py\", line 104, in __init__\n    raise ValueError(exc[\"message\"]) from None\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1638974049606,
      "stop" : 1638974049606,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_approve"
  }, {
    "name" : "host",
    "value" : "fv-az83-54"
  }, {
    "name" : "thread",
    "value" : "4517-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_approve"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "idx",
    "value" : "4"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 10,
        "skipped" : 0,
        "passed" : 34,
        "unknown" : 0,
        "total" : 44
      },
      "items" : [ {
        "uid" : "9ce130b1644d4278",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/176//#testresult/9ce130b1644d4278",
        "status" : "passed",
        "time" : {
          "start" : 1638951069545,
          "stop" : 1638951069937,
          "duration" : 392
        }
      }, {
        "uid" : "87d690f0145edb00",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/174//#testresult/87d690f0145edb00",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ConnectionError: HTTPSConnectionPool(host='proxy.teststand2.neontest.xyz', port=443): Max retries exceeded with url: /solana (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7fadbd1ce9d0>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1638932971251,
          "stop" : 1638932971251,
          "duration" : 0
        }
      }, {
        "uid" : "e180b1c0c8a630f1",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/173//#testresult/e180b1c0c8a630f1",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ConnectionError: HTTPSConnectionPool(host='proxy.teststand2.neontest.xyz', port=443): Max retries exceeded with url: /solana (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7fb8653e67f0>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1638923379751,
          "stop" : 1638923379751,
          "duration" : 0
        }
      }, {
        "uid" : "a75722e622a391c1",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/172//#testresult/a75722e622a391c1",
        "status" : "passed",
        "time" : {
          "start" : 1638913088330,
          "stop" : 1638913088759,
          "duration" : 429
        }
      }, {
        "uid" : "87060608de064e1",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/171//#testresult/87060608de064e1",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ConnectionError: HTTPSConnectionPool(host='proxy.testnet.neonlabs.org', port=443): Max retries exceeded with url: /solana (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f2408313a30>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1638912573497,
          "stop" : 1638912573497,
          "duration" : 0
        }
      }, {
        "uid" : "30b8a745e2df2b80",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/170//#testresult/30b8a745e2df2b80",
        "status" : "passed",
        "time" : {
          "start" : 1638908468911,
          "stop" : 1638908469331,
          "duration" : 420
        }
      }, {
        "uid" : "c0186f5dd9397ff9",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/169//#testresult/c0186f5dd9397ff9",
        "status" : "passed",
        "time" : {
          "start" : 1638892637601,
          "stop" : 1638892637747,
          "duration" : 146
        }
      }, {
        "uid" : "c9f72733351c789b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/168//#testresult/c9f72733351c789b",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Error processing Instruction 1: invalid account data for instruction'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1638891849352,
          "stop" : 1638891849352,
          "duration" : 0
        }
      }, {
        "uid" : "cb20851564349f9a",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/167//#testresult/cb20851564349f9a",
        "status" : "passed",
        "time" : {
          "start" : 1638863112450,
          "stop" : 1638863112651,
          "duration" : 201
        }
      }, {
        "uid" : "6bae26234c4b4e1c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/166//#testresult/6bae26234c4b4e1c",
        "status" : "passed",
        "time" : {
          "start" : 1638846639790,
          "stop" : 1638846639921,
          "duration" : 131
        }
      }, {
        "uid" : "1b7ebb61ab010db2",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/165//#testresult/1b7ebb61ab010db2",
        "status" : "passed",
        "time" : {
          "start" : 1638837014040,
          "stop" : 1638837014256,
          "duration" : 216
        }
      }, {
        "uid" : "6c3d51c2372141d5",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/164//#testresult/6c3d51c2372141d5",
        "status" : "passed",
        "time" : {
          "start" : 1638818115570,
          "stop" : 1638818116668,
          "duration" : 1098
        }
      }, {
        "uid" : "783a62320fa9b28c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/163//#testresult/783a62320fa9b28c",
        "status" : "passed",
        "time" : {
          "start" : 1638794662007,
          "stop" : 1638794663099,
          "duration" : 1092
        }
      }, {
        "uid" : "9f38f410f8affecc",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/162//#testresult/9f38f410f8affecc",
        "status" : "passed",
        "time" : {
          "start" : 1638760217370,
          "stop" : 1638760217589,
          "duration" : 219
        }
      }, {
        "uid" : "5db406bb03ef5333",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/161//#testresult/5db406bb03ef5333",
        "status" : "passed",
        "time" : {
          "start" : 1638750572789,
          "stop" : 1638750573004,
          "duration" : 215
        }
      }, {
        "uid" : "387e78160800429c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/160//#testresult/387e78160800429c",
        "status" : "passed",
        "time" : {
          "start" : 1638695743613,
          "stop" : 1638695743802,
          "duration" : 189
        }
      }, {
        "uid" : "a884b6628f2b943b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/159//#testresult/a884b6628f2b943b",
        "status" : "passed",
        "time" : {
          "start" : 1638673797532,
          "stop" : 1638673797718,
          "duration" : 186
        }
      }, {
        "uid" : "fee93f4cb1e2af23",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/158//#testresult/fee93f4cb1e2af23",
        "status" : "passed",
        "time" : {
          "start" : 1638664238849,
          "stop" : 1638664239062,
          "duration" : 213
        }
      }, {
        "uid" : "7a42317ce1a7242d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/157//#testresult/7a42317ce1a7242d",
        "status" : "passed",
        "time" : {
          "start" : 1638643345051,
          "stop" : 1638643345265,
          "duration" : 214
        }
      }, {
        "uid" : "26a5eb5b5e9ae3cc",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/156//#testresult/26a5eb5b5e9ae3cc",
        "status" : "passed",
        "time" : {
          "start" : 1638587386735,
          "stop" : 1638587386945,
          "duration" : 210
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "ff1720e94faa151b.json",
  "parameterValues" : [ "4" ]
}