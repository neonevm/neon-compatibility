{
  "uid" : "80e548bdf1232e6a",
  "name" : "test_transfer_zero_tokens",
  "fullName" : "tests.brownie.token.tests.test_transfer#test_transfer_zero_tokens",
  "historyId" : "11077ef1115b1ee4997c2c5409243af5",
  "time" : {
    "start" : 1642014229811,
    "stop" : 1642014229811,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "ValueError: connection already closed",
  "statusTrace" : "brownie_project = <Project 'TokenProject'>\naccounts = <brownie.network.account.Accounts object at 0x7f003d1c3d00>\n\n    @pytest.fixture(scope=\"module\")\n    def token(brownie_project, accounts):\n>       return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n\ntests/brownie/token/tests/conftest.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:600: in __call__\n    return tx[\"from\"].deploy(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:508: in deploy\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:725: in _make_transaction\n    raise VirtualMachineError(e) from None\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError({'code': -32000, 'message': 'connection already closed'}))\nexc = {'code': -32000, 'message': 'connection already closed'}\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n>               raise ValueError(exc[\"message\"]) from None\nE               ValueError: connection already closed\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:85: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1642014209067,
      "stop" : 1642014209067,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1642014210167,
      "stop" : 1642014226092,
      "duration" : 15925
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1642014227329,
      "stop" : 1642014227597,
      "duration" : 268
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1642014227329,
      "stop" : 1642014227329,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1642014228977,
      "stop" : 1642014229488,
      "duration" : 511
    },
    "status" : "broken",
    "statusMessage" : "ValueError: connection already closed\n",
    "statusTrace" : "  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 932, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/neon-compatibility/neon-compatibility/tests/brownie/token/tests/conftest.py\", line 49, in token\n    return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py\", line 600, in __call__\n    return tx[\"from\"].deploy(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 508, in deploy\n    receipt, exc = self._make_transaction(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 725, in _make_transaction\n    raise VirtualMachineError(e) from None\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py\", line 85, in __init__\n    raise ValueError(exc[\"message\"]) from None\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1642014260340,
      "stop" : 1642014260340,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_transfer"
  }, {
    "name" : "host",
    "value" : "fv-az123-753"
  }, {
    "name" : "thread",
    "value" : "3710-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_transfer"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 16,
        "skipped" : 0,
        "passed" : 68,
        "unknown" : 0,
        "total" : 84
      },
      "items" : [ {
        "uid" : "7c20abdacf4dadbf",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/469//#testresult/7c20abdacf4dadbf",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1642012911393,
          "stop" : 1642012911393,
          "duration" : 0
        }
      }, {
        "uid" : "60c8914934fe3d6d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/468//#testresult/60c8914934fe3d6d",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1642011421798,
          "stop" : 1642011421798,
          "duration" : 0
        }
      }, {
        "uid" : "49c0fc885c390870",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/466//#testresult/49c0fc885c390870",
        "status" : "passed",
        "time" : {
          "start" : 1641997976432,
          "stop" : 1641997978951,
          "duration" : 2519
        }
      }, {
        "uid" : "c22bf666bd6ffc53",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/465//#testresult/c22bf666bd6ffc53",
        "status" : "passed",
        "time" : {
          "start" : 1641993738400,
          "stop" : 1641993740918,
          "duration" : 2518
        }
      }, {
        "uid" : "1e1e9975a31fca2c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/464//#testresult/1e1e9975a31fca2c",
        "status" : "passed",
        "time" : {
          "start" : 1641990996625,
          "stop" : 1641990999076,
          "duration" : 2451
        }
      }, {
        "uid" : "c98f5396246f8eb5",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/463//#testresult/c98f5396246f8eb5",
        "status" : "passed",
        "time" : {
          "start" : 1641986355036,
          "stop" : 1641986357226,
          "duration" : 2190
        }
      }, {
        "uid" : "35868193be955f0d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/461//#testresult/35868193be955f0d",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='10.2.0.2', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f189a54ddc0>: Failed to establish a new connection: [Errno 111] Connection refused'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1641982477890,
          "stop" : 1641982477890,
          "duration" : 0
        }
      }, {
        "uid" : "c91b3e53097913ff",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/460//#testresult/c91b3e53097913ff",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='10.2.0.2', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f189463f9a0>: Failed to establish a new connection: [Errno 111] Connection refused'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1641980266845,
          "stop" : 1641980266845,
          "duration" : 0
        }
      }, {
        "uid" : "33041df1cf07ea80",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/459//#testresult/33041df1cf07ea80",
        "status" : "passed",
        "time" : {
          "start" : 1641975811298,
          "stop" : 1641975814092,
          "duration" : 2794
        }
      }, {
        "uid" : "fb87fea7f914d47c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/458//#testresult/fb87fea7f914d47c",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='10.2.0.2', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f1896051670>: Failed to establish a new connection: [Errno 111] Connection refused'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1641974826862,
          "stop" : 1641974826862,
          "duration" : 0
        }
      }, {
        "uid" : "e1083941055ca417",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/457//#testresult/e1083941055ca417",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='10.2.0.2', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f1895f325b0>: Failed to establish a new connection: [Errno 111] Connection refused'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1641974205397,
          "stop" : 1641974205397,
          "duration" : 0
        }
      }, {
        "uid" : "a6582d8b89815263",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/456//#testresult/a6582d8b89815263",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ReadTimeout: HTTPConnectionPool(host='proxy.night.stand.neontest.xyz', port=80): Read timed out. (read timeout=30)",
        "time" : {
          "start" : 1641957857245,
          "stop" : 1641957857245,
          "duration" : 0
        }
      }, {
        "uid" : "52fa69332f4fd0a7",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/455//#testresult/52fa69332f4fd0a7",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ReadTimeout: HTTPConnectionPool(host='proxy.night.stand.neontest.xyz', port=80): Read timed out. (read timeout=30)",
        "time" : {
          "start" : 1641952053516,
          "stop" : 1641952053516,
          "duration" : 0
        }
      }, {
        "uid" : "8b0daea511430dce",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/454//#testresult/8b0daea511430dce",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ReadTimeout: HTTPConnectionPool(host='proxy.night.stand.neontest.xyz', port=80): Read timed out. (read timeout=30)",
        "time" : {
          "start" : 1641950531636,
          "stop" : 1641950531636,
          "duration" : 0
        }
      }, {
        "uid" : "a8a20bb317939a2b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/453//#testresult/a8a20bb317939a2b",
        "status" : "passed",
        "time" : {
          "start" : 1641947753520,
          "stop" : 1641947755548,
          "duration" : 2028
        }
      }, {
        "uid" : "c66adccb33f21a9a",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/452//#testresult/c66adccb33f21a9a",
        "status" : "passed",
        "time" : {
          "start" : 1641870953619,
          "stop" : 1641870955750,
          "duration" : 2131
        }
      }, {
        "uid" : "6cc679363ea80343",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/451//#testresult/6cc679363ea80343",
        "status" : "passed",
        "time" : {
          "start" : 1641861347690,
          "stop" : 1641861350217,
          "duration" : 2527
        }
      }, {
        "uid" : "a45b42275752c8ff",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/450//#testresult/a45b42275752c8ff",
        "status" : "passed",
        "time" : {
          "start" : 1641784512689,
          "stop" : 1641784515074,
          "duration" : 2385
        }
      }, {
        "uid" : "f5b4bd60fc8e2055",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/449//#testresult/f5b4bd60fc8e2055",
        "status" : "passed",
        "time" : {
          "start" : 1641774846366,
          "stop" : 1641774848485,
          "duration" : 2119
        }
      }, {
        "uid" : "b2bce78db49f853e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/448//#testresult/b2bce78db49f853e",
        "status" : "passed",
        "time" : {
          "start" : 1641698204074,
          "stop" : 1641698206244,
          "duration" : 2170
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "80e548bdf1232e6a.json",
  "parameterValues" : [ ]
}