{
  "uid" : "8db629c51c63017b",
  "name" : "test_brownie_deploy",
  "fullName" : "tests.brownie.test_brownie#test_brownie_deploy",
  "historyId" : "6e83a925951bfd8b9c39b6ea82974dc9",
  "time" : {
    "start" : 1642014226093,
    "stop" : 1642014227159,
    "duration" : 1066
  },
  "status" : "broken",
  "statusMessage" : "ValueError: connection already closed",
  "statusTrace" : "brownie_project = <Project 'TokenProject'>\n\n    def test_brownie_deploy(brownie_project):\n>       deployed_contract = brownie_project.Token.deploy(\n            \"Test deploy\", \"TST\", 10, 10000000, {\"from\": accounts[0]}\n        )\n\ntests/brownie/test_brownie.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:600: in __call__\n    return tx[\"from\"].deploy(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:508: in deploy\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:725: in _make_transaction\n    raise VirtualMachineError(e) from None\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError({'code': -32000, 'message': 'connection already closed'}))\nexc = {'code': -32000, 'message': 'connection already closed'}\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n>               raise ValueError(exc[\"message\"]) from None\nE               ValueError: connection already closed\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:85: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1642014209067,
      "stop" : 1642014209067,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1642014210167,
      "stop" : 1642014226092,
      "duration" : 15925
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "ValueError: connection already closed",
    "statusTrace" : "brownie_project = <Project 'TokenProject'>\n\n    def test_brownie_deploy(brownie_project):\n>       deployed_contract = brownie_project.Token.deploy(\n            \"Test deploy\", \"TST\", 10, 10000000, {\"from\": accounts[0]}\n        )\n\ntests/brownie/test_brownie.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:600: in __call__\n    return tx[\"from\"].deploy(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:508: in deploy\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:725: in _make_transaction\n    raise VirtualMachineError(e) from None\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError({'code': -32000, 'message': 'connection already closed'}))\nexc = {'code': -32000, 'message': 'connection already closed'}\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n>               raise ValueError(exc[\"message\"]) from None\nE               ValueError: connection already closed\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:85: ValueError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "57fdb8def9fedd0a",
      "name" : "log",
      "source" : "57fdb8def9fedd0a.txt",
      "type" : "text/plain",
      "size" : 287
    }, {
      "uid" : "3d0e7c40e0221623",
      "name" : "stdout",
      "source" : "3d0e7c40e0221623.txt",
      "type" : "text/plain",
      "size" : 250
    }, {
      "uid" : "14783dd885f563cc",
      "name" : "stderr",
      "source" : "14783dd885f563cc.txt",
      "type" : "text/plain",
      "size" : 8592
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie"
  }, {
    "name" : "suite",
    "value" : "test_brownie"
  }, {
    "name" : "host",
    "value" : "fv-az123-753"
  }, {
    "name" : "thread",
    "value" : "3710-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.test_brownie"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 16,
        "skipped" : 0,
        "passed" : 69,
        "unknown" : 0,
        "total" : 85
      },
      "items" : [ {
        "uid" : "13dbda4bb3714db2",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/469//#testresult/13dbda4bb3714db2",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1642012907898,
          "stop" : 1642012908858,
          "duration" : 960
        }
      }, {
        "uid" : "c66a4c013e24b81c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/468//#testresult/c66a4c013e24b81c",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1642011417747,
          "stop" : 1642011418545,
          "duration" : 798
        }
      }, {
        "uid" : "7df9567607b4345",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/467//#testresult/7df9567607b4345",
        "status" : "passed",
        "time" : {
          "start" : 1642008700965,
          "stop" : 1642008704461,
          "duration" : 3496
        }
      }, {
        "uid" : "503956c6079143fd",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/466//#testresult/503956c6079143fd",
        "status" : "passed",
        "time" : {
          "start" : 1641997933925,
          "stop" : 1641997937709,
          "duration" : 3784
        }
      }, {
        "uid" : "8c0ad1669cd04b2b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/465//#testresult/8c0ad1669cd04b2b",
        "status" : "passed",
        "time" : {
          "start" : 1641993695008,
          "stop" : 1641993699002,
          "duration" : 3994
        }
      }, {
        "uid" : "7d4b3cdb0a50b30d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/464//#testresult/7d4b3cdb0a50b30d",
        "status" : "passed",
        "time" : {
          "start" : 1641990957157,
          "stop" : 1641990960514,
          "duration" : 3357
        }
      }, {
        "uid" : "6b080ae9fd3892af",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/463//#testresult/6b080ae9fd3892af",
        "status" : "passed",
        "time" : {
          "start" : 1641986321615,
          "stop" : 1641986324674,
          "duration" : 3059
        }
      }, {
        "uid" : "966cf024fefaff50",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/461//#testresult/966cf024fefaff50",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='10.2.0.2', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f1894610490>: Failed to establish a new connection: [Errno 111] Connection refused'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1641982475592,
          "stop" : 1641982475803,
          "duration" : 211
        }
      }, {
        "uid" : "d5d4e7fa295ddba5",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/460//#testresult/d5d4e7fa295ddba5",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='10.2.0.2', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f1894657670>: Failed to establish a new connection: [Errno 111] Connection refused'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1641980264254,
          "stop" : 1641980264567,
          "duration" : 313
        }
      }, {
        "uid" : "ff059d2f9196be70",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/459//#testresult/ff059d2f9196be70",
        "status" : "passed",
        "time" : {
          "start" : 1641975771771,
          "stop" : 1641975775415,
          "duration" : 3644
        }
      }, {
        "uid" : "bd552716d22384",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/458//#testresult/bd552716d22384",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='10.2.0.2', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f1894648490>: Failed to establish a new connection: [Errno 111] Connection refused'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1641974824125,
          "stop" : 1641974824464,
          "duration" : 339
        }
      }, {
        "uid" : "258bca1340cf626",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/457//#testresult/258bca1340cf626",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='10.2.0.2', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f1895f428e0>: Failed to establish a new connection: [Errno 111] Connection refused'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1641974202679,
          "stop" : 1641974202985,
          "duration" : 306
        }
      }, {
        "uid" : "13751ac39bbe2b5",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/456//#testresult/13751ac39bbe2b5",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ReadTimeout: HTTPConnectionPool(host='proxy.night.stand.neontest.xyz', port=80): Read timed out. (read timeout=30)",
        "time" : {
          "start" : 1641957397858,
          "stop" : 1641957548878,
          "duration" : 151020
        }
      }, {
        "uid" : "9218a8dd6784518a",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/455//#testresult/9218a8dd6784518a",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ReadTimeout: HTTPConnectionPool(host='proxy.night.stand.neontest.xyz', port=80): Read timed out. (read timeout=30)",
        "time" : {
          "start" : 1641951594173,
          "stop" : 1641951745316,
          "duration" : 151143
        }
      }, {
        "uid" : "d911c2c66c3bdfd2",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/454//#testresult/d911c2c66c3bdfd2",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ReadTimeout: HTTPConnectionPool(host='proxy.night.stand.neontest.xyz', port=80): Read timed out. (read timeout=30)",
        "time" : {
          "start" : 1641950073056,
          "stop" : 1641950224111,
          "duration" : 151055
        }
      }, {
        "uid" : "3121aa29a69af15a",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/453//#testresult/3121aa29a69af15a",
        "status" : "passed",
        "time" : {
          "start" : 1641947676736,
          "stop" : 1641947679843,
          "duration" : 3107
        }
      }, {
        "uid" : "37f39a7321ece93a",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/452//#testresult/37f39a7321ece93a",
        "status" : "passed",
        "time" : {
          "start" : 1641870920355,
          "stop" : 1641870923440,
          "duration" : 3085
        }
      }, {
        "uid" : "d686708e7a527564",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/451//#testresult/d686708e7a527564",
        "status" : "passed",
        "time" : {
          "start" : 1641861306223,
          "stop" : 1641861309945,
          "duration" : 3722
        }
      }, {
        "uid" : "513885e017840b99",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/450//#testresult/513885e017840b99",
        "status" : "passed",
        "time" : {
          "start" : 1641784472326,
          "stop" : 1641784475927,
          "duration" : 3601
        }
      }, {
        "uid" : "b2dc2fbf23f03e56",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/449//#testresult/b2dc2fbf23f03e56",
        "status" : "passed",
        "time" : {
          "start" : 1641774814128,
          "stop" : 1641774817214,
          "duration" : 3086
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "8db629c51c63017b.json",
  "parameterValues" : [ ]
}