{
  "uid" : "d9e86827117056a",
  "name" : "test_transfer_zero_tokens",
  "fullName" : "tests.brownie.token.tests.test_transferFrom#test_transfer_zero_tokens",
  "historyId" : "712015a3b92bfa1e855577e4791f38fb",
  "time" : {
    "start" : 1639739233798,
    "stop" : 1639739238179,
    "duration" : 4381
  },
  "status" : "broken",
  "statusMessage" : "brownie.exceptions.TransactionError: Tx dropped without known replacement: 0x4ea8dc04b0edd48a88bd00751b1192817099d076bb2e3eaff5d0e9aa19361dc1",
  "statusTrace" : "accounts = <brownie.network.account.Accounts object at 0x7f9c2ec0c700>\ntoken = <Token Contract '0xc06275FAcB5A82124D961b0573188A522b4a4b5E'>\n\n    def test_transfer_zero_tokens(accounts, token):\n        sender_balance = token.balanceOf(accounts[0])\n        receiver_balance = token.balanceOf(accounts[2])\n    \n>       token.approve(accounts[1], sender_balance, {'from': accounts[0]})\n\ntests/brownie/token/tests/test_transferFrom.py:89: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1693: in __call__\n    return self.transact(*args)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1566: in transact\n    return tx[\"from\"].transfer(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:642: in transfer\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:758: in _make_transaction\n    receipt = self._await_confirmation(receipt, required_confs, gas_strategy, gas_iter)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <LocalAccount '0x35D0b67BeB0e9a8147ACbA5883685d3cD601D682'>\nreceipt = <Transaction '\u001B[0;2;37m0x4ea8dc04b0edd48a88bd00751b1192817099d076bb2e3eaff5d0e9aa19361dc1\u001B[0;m'>\nrequired_confs = 1, gas_strategy = None, gas_iter = None\n\n    def _await_confirmation(\n        self,\n        receipt: TransactionReceipt,\n        required_confs: int,\n        gas_strategy: Optional[GasABC],\n        gas_iter: Optional[Iterator],\n    ) -> TransactionReceipt:\n        # add to TxHistory before waiting for confirmation, this way the tx\n        # object is available if the user exits blocking via keyboard interrupt\n        history._add_tx(receipt)\n    \n        if gas_strategy is not None:\n            gas_strategy.run(receipt, gas_iter)  # type: ignore\n    \n        if required_confs == 0:\n            # set 0-conf tx's as silent to hide the confirmation output\n            receipt._silent = True\n            return receipt\n    \n        try:\n            receipt._confirmed.wait()\n        except KeyboardInterrupt as exc:\n            # set related transactions as silent\n            receipt._silent = True\n            for receipt in history.filter(\n                sender=self, nonce=receipt.nonce, key=lambda k: k.status != -2\n            ):\n                receipt._silent = True\n            raise exc.with_traceback(None)\n    \n        if receipt.status != -2:\n            return receipt\n    \n        # if transaction was dropped (status -2), find and return the tx that confirmed\n        replacements = history.filter(\n            sender=self, nonce=receipt.nonce, key=lambda k: k.status != -2\n        )\n        while True:\n            if not replacements:\n>               raise TransactionError(f\"Tx dropped without known replacement: {receipt.txid}\")\nE               brownie.exceptions.TransactionError: Tx dropped without known replacement: 0x4ea8dc04b0edd48a88bd00751b1192817099d076bb2e3eaff5d0e9aa19361dc1\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:800: TransactionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1639739103162,
      "stop" : 1639739103162,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1639739104611,
      "stop" : 1639739124950,
      "duration" : 20339
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1639739130260,
      "stop" : 1639739130260,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1639739130261,
      "stop" : 1639739130579,
      "duration" : 318
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1639739173185,
      "stop" : 1639739182176,
      "duration" : 8991
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "brownie.exceptions.TransactionError: Tx dropped without known replacement: 0x4ea8dc04b0edd48a88bd00751b1192817099d076bb2e3eaff5d0e9aa19361dc1",
    "statusTrace" : "accounts = <brownie.network.account.Accounts object at 0x7f9c2ec0c700>\ntoken = <Token Contract '0xc06275FAcB5A82124D961b0573188A522b4a4b5E'>\n\n    def test_transfer_zero_tokens(accounts, token):\n        sender_balance = token.balanceOf(accounts[0])\n        receiver_balance = token.balanceOf(accounts[2])\n    \n>       token.approve(accounts[1], sender_balance, {'from': accounts[0]})\n\ntests/brownie/token/tests/test_transferFrom.py:89: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1693: in __call__\n    return self.transact(*args)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1566: in transact\n    return tx[\"from\"].transfer(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:642: in transfer\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:758: in _make_transaction\n    receipt = self._await_confirmation(receipt, required_confs, gas_strategy, gas_iter)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <LocalAccount '0x35D0b67BeB0e9a8147ACbA5883685d3cD601D682'>\nreceipt = <Transaction '\u001B[0;2;37m0x4ea8dc04b0edd48a88bd00751b1192817099d076bb2e3eaff5d0e9aa19361dc1\u001B[0;m'>\nrequired_confs = 1, gas_strategy = None, gas_iter = None\n\n    def _await_confirmation(\n        self,\n        receipt: TransactionReceipt,\n        required_confs: int,\n        gas_strategy: Optional[GasABC],\n        gas_iter: Optional[Iterator],\n    ) -> TransactionReceipt:\n        # add to TxHistory before waiting for confirmation, this way the tx\n        # object is available if the user exits blocking via keyboard interrupt\n        history._add_tx(receipt)\n    \n        if gas_strategy is not None:\n            gas_strategy.run(receipt, gas_iter)  # type: ignore\n    \n        if required_confs == 0:\n            # set 0-conf tx's as silent to hide the confirmation output\n            receipt._silent = True\n            return receipt\n    \n        try:\n            receipt._confirmed.wait()\n        except KeyboardInterrupt as exc:\n            # set related transactions as silent\n            receipt._silent = True\n            for receipt in history.filter(\n                sender=self, nonce=receipt.nonce, key=lambda k: k.status != -2\n            ):\n                receipt._silent = True\n            raise exc.with_traceback(None)\n    \n        if receipt.status != -2:\n            return receipt\n    \n        # if transaction was dropped (status -2), find and return the tx that confirmed\n        replacements = history.filter(\n            sender=self, nonce=receipt.nonce, key=lambda k: k.status != -2\n        )\n        while True:\n            if not replacements:\n>               raise TransactionError(f\"Tx dropped without known replacement: {receipt.txid}\")\nE               brownie.exceptions.TransactionError: Tx dropped without known replacement: 0x4ea8dc04b0edd48a88bd00751b1192817099d076bb2e3eaff5d0e9aa19361dc1\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:800: TransactionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "3cef92a9f3b7c682",
      "name" : "stdout",
      "source" : "3cef92a9f3b7c682.txt",
      "type" : "text/plain",
      "size" : 238
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1639739564866,
      "stop" : 1639739564867,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_transferFrom"
  }, {
    "name" : "host",
    "value" : "fv-az39-454"
  }, {
    "name" : "thread",
    "value" : "4483-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_transferFrom"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 30,
        "skipped" : 0,
        "passed" : 80,
        "unknown" : 0,
        "total" : 110
      },
      "items" : [ {
        "uid" : "41b755b7a556c289",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/253//#testresult/41b755b7a556c289",
        "status" : "broken",
        "statusDetails" : "brownie.exceptions.TransactionError: Tx dropped without known replacement: 0xbe88df5a1c9961aeeeb7e242fa0229e7df7d6a03cdc7b57c3f46d01185f3323e",
        "time" : {
          "start" : 1639724822746,
          "stop" : 1639724822746,
          "duration" : 0
        }
      }, {
        "uid" : "11d48315e38a31c3",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/251//#testresult/11d48315e38a31c3",
        "status" : "passed",
        "time" : {
          "start" : 1639710928584,
          "stop" : 1639710936530,
          "duration" : 7946
        }
      }, {
        "uid" : "7aae94b6bed619ca",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/250//#testresult/7aae94b6bed619ca",
        "status" : "passed",
        "time" : {
          "start" : 1639701427524,
          "stop" : 1639701434481,
          "duration" : 6957
        }
      }, {
        "uid" : "37cdfd5b7a68913b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/249//#testresult/37cdfd5b7a68913b",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ChunkedEncodingError: (\"Connection broken: ConnectionResetError(104, 'Connection reset by peer')\", ConnectionResetError(104, 'Connection reset by peer'))",
        "time" : {
          "start" : 1639695097831,
          "stop" : 1639695097831,
          "duration" : 0
        }
      }, {
        "uid" : "9867265fce214702",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/247//#testresult/9867265fce214702",
        "status" : "passed",
        "time" : {
          "start" : 1639684907694,
          "stop" : 1639684913625,
          "duration" : 5931
        }
      }, {
        "uid" : "15af9f6c7ae5080f",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/245//#testresult/15af9f6c7ae5080f",
        "status" : "passed",
        "time" : {
          "start" : 1639674245087,
          "stop" : 1639674250293,
          "duration" : 5206
        }
      }, {
        "uid" : "88c4524a0dabddc2",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/242//#testresult/88c4524a0dabddc2",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Insufficient funds for fee'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639663143494,
          "stop" : 1639663143494,
          "duration" : 0
        }
      }, {
        "uid" : "ebc8e94b1116374",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/241//#testresult/ebc8e94b1116374",
        "status" : "passed",
        "time" : {
          "start" : 1639661406648,
          "stop" : 1639661414470,
          "duration" : 7822
        }
      }, {
        "uid" : "99a1f133f4bfeaf6",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/238//#testresult/99a1f133f4bfeaf6",
        "status" : "passed",
        "time" : {
          "start" : 1639651905966,
          "stop" : 1639651912720,
          "duration" : 6754
        }
      }, {
        "uid" : "4f4f312994cf2d06",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/237//#testresult/4f4f312994cf2d06",
        "status" : "passed",
        "time" : {
          "start" : 1639648357578,
          "stop" : 1639648364582,
          "duration" : 7004
        }
      }, {
        "uid" : "4822c6725aec40b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/236//#testresult/4822c6725aec40b",
        "status" : "passed",
        "time" : {
          "start" : 1639645700743,
          "stop" : 1639645707468,
          "duration" : 6725
        }
      }, {
        "uid" : "16a46b2b320f9b36",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/235//#testresult/16a46b2b320f9b36",
        "status" : "passed",
        "time" : {
          "start" : 1639643278482,
          "stop" : 1639643285253,
          "duration" : 6771
        }
      }, {
        "uid" : "16a912562ca5e488",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/234//#testresult/16a912562ca5e488",
        "status" : "passed",
        "time" : {
          "start" : 1639632996080,
          "stop" : 1639633001306,
          "duration" : 5226
        }
      }, {
        "uid" : "ae3700439da83199",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/233//#testresult/ae3700439da83199",
        "status" : "passed",
        "time" : {
          "start" : 1639624575091,
          "stop" : 1639624581743,
          "duration" : 6652
        }
      }, {
        "uid" : "c11b5a2d4507c1bf",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/232//#testresult/c11b5a2d4507c1bf",
        "status" : "passed",
        "time" : {
          "start" : 1639614777590,
          "stop" : 1639614784270,
          "duration" : 6680
        }
      }, {
        "uid" : "8ed3c133a1eb243a",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/230//#testresult/8ed3c133a1eb243a",
        "status" : "passed",
        "time" : {
          "start" : 1639591052849,
          "stop" : 1639591058894,
          "duration" : 6045
        }
      }, {
        "uid" : "5a20bd24ea5bf5f2",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/228//#testresult/5a20bd24ea5bf5f2",
        "status" : "passed",
        "time" : {
          "start" : 1639580806040,
          "stop" : 1639580810565,
          "duration" : 4525
        }
      }, {
        "uid" : "44d8220cd22ca2c8",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/227//#testresult/44d8220cd22ca2c8",
        "status" : "passed",
        "time" : {
          "start" : 1639577870704,
          "stop" : 1639577875647,
          "duration" : 4943
        }
      }, {
        "uid" : "84d1aaf47a673fa0",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/226//#testresult/84d1aaf47a673fa0",
        "status" : "passed",
        "time" : {
          "start" : 1639575176145,
          "stop" : 1639575181912,
          "duration" : 5767
        }
      }, {
        "uid" : "4e381708e7723a14",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/225//#testresult/4e381708e7723a14",
        "status" : "passed",
        "time" : {
          "start" : 1639574837478,
          "stop" : 1639574841515,
          "duration" : 4037
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "d9e86827117056a.json",
  "parameterValues" : [ ]
}