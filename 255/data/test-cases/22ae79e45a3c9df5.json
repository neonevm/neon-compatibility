{
  "uid" : "22ae79e45a3c9df5",
  "name" : "test_no_approval",
  "fullName" : "tests.brownie.token.tests.test_transferFrom#test_no_approval",
  "historyId" : "7358eb8feac902966a7253222a21510a",
  "time" : {
    "start" : 1639739250275,
    "stop" : 1639739254886,
    "duration" : 4611
  },
  "status" : "broken",
  "statusMessage" : "brownie.exceptions.TransactionError: Tx dropped without known replacement: 0xc6e019df0a6271726a340cc8f5cb835e55cba7fae6b8fb91d2407a6220c8e957",
  "statusTrace" : "accounts = <brownie.network.account.Accounts object at 0x7f9c2ec0c700>\ntoken = <Token Contract '0xc06275FAcB5A82124D961b0573188A522b4a4b5E'>\n\n    def test_no_approval(accounts, token):\n        balance = token.balanceOf(accounts[0])\n    \n        with brownie.reverts():\n>           token.transferFrom(accounts[0], accounts[2], balance, {'from': accounts[1]})\n\ntests/brownie/token/tests/test_transferFrom.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/brownie/token/tests/test_transferFrom.py:126: in test_no_approval\n    token.transferFrom(accounts[0], accounts[2], balance, {'from': accounts[1]})\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1693: in __call__\n    return self.transact(*args)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1566: in transact\n    return tx[\"from\"].transfer(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:642: in transfer\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:758: in _make_transaction\n    receipt = self._await_confirmation(receipt, required_confs, gas_strategy, gas_iter)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <LocalAccount '0x3684f60e10FF1c9f47dB71860709f3BC9380016D'>\nreceipt = <Transaction '\u001B[0;2;37m0xc6e019df0a6271726a340cc8f5cb835e55cba7fae6b8fb91d2407a6220c8e957\u001B[0;m'>\nrequired_confs = 1, gas_strategy = None, gas_iter = None\n\n    def _await_confirmation(\n        self,\n        receipt: TransactionReceipt,\n        required_confs: int,\n        gas_strategy: Optional[GasABC],\n        gas_iter: Optional[Iterator],\n    ) -> TransactionReceipt:\n        # add to TxHistory before waiting for confirmation, this way the tx\n        # object is available if the user exits blocking via keyboard interrupt\n        history._add_tx(receipt)\n    \n        if gas_strategy is not None:\n            gas_strategy.run(receipt, gas_iter)  # type: ignore\n    \n        if required_confs == 0:\n            # set 0-conf tx's as silent to hide the confirmation output\n            receipt._silent = True\n            return receipt\n    \n        try:\n            receipt._confirmed.wait()\n        except KeyboardInterrupt as exc:\n            # set related transactions as silent\n            receipt._silent = True\n            for receipt in history.filter(\n                sender=self, nonce=receipt.nonce, key=lambda k: k.status != -2\n            ):\n                receipt._silent = True\n            raise exc.with_traceback(None)\n    \n        if receipt.status != -2:\n            return receipt\n    \n        # if transaction was dropped (status -2), find and return the tx that confirmed\n        replacements = history.filter(\n            sender=self, nonce=receipt.nonce, key=lambda k: k.status != -2\n        )\n        while True:\n            if not replacements:\n>               raise TransactionError(f\"Tx dropped without known replacement: {receipt.txid}\")\nE               brownie.exceptions.TransactionError: Tx dropped without known replacement: 0xc6e019df0a6271726a340cc8f5cb835e55cba7fae6b8fb91d2407a6220c8e957\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:800: TransactionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1639739103162,
      "stop" : 1639739103162,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1639739104611,
      "stop" : 1639739124950,
      "duration" : 20339
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1639739130260,
      "stop" : 1639739130260,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1639739130261,
      "stop" : 1639739130579,
      "duration" : 318
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1639739173185,
      "stop" : 1639739182176,
      "duration" : 8991
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "brownie.exceptions.TransactionError: Tx dropped without known replacement: 0xc6e019df0a6271726a340cc8f5cb835e55cba7fae6b8fb91d2407a6220c8e957",
    "statusTrace" : "accounts = <brownie.network.account.Accounts object at 0x7f9c2ec0c700>\ntoken = <Token Contract '0xc06275FAcB5A82124D961b0573188A522b4a4b5E'>\n\n    def test_no_approval(accounts, token):\n        balance = token.balanceOf(accounts[0])\n    \n        with brownie.reverts():\n>           token.transferFrom(accounts[0], accounts[2], balance, {'from': accounts[1]})\n\ntests/brownie/token/tests/test_transferFrom.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/brownie/token/tests/test_transferFrom.py:126: in test_no_approval\n    token.transferFrom(accounts[0], accounts[2], balance, {'from': accounts[1]})\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1693: in __call__\n    return self.transact(*args)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1566: in transact\n    return tx[\"from\"].transfer(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:642: in transfer\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:758: in _make_transaction\n    receipt = self._await_confirmation(receipt, required_confs, gas_strategy, gas_iter)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <LocalAccount '0x3684f60e10FF1c9f47dB71860709f3BC9380016D'>\nreceipt = <Transaction '\u001B[0;2;37m0xc6e019df0a6271726a340cc8f5cb835e55cba7fae6b8fb91d2407a6220c8e957\u001B[0;m'>\nrequired_confs = 1, gas_strategy = None, gas_iter = None\n\n    def _await_confirmation(\n        self,\n        receipt: TransactionReceipt,\n        required_confs: int,\n        gas_strategy: Optional[GasABC],\n        gas_iter: Optional[Iterator],\n    ) -> TransactionReceipt:\n        # add to TxHistory before waiting for confirmation, this way the tx\n        # object is available if the user exits blocking via keyboard interrupt\n        history._add_tx(receipt)\n    \n        if gas_strategy is not None:\n            gas_strategy.run(receipt, gas_iter)  # type: ignore\n    \n        if required_confs == 0:\n            # set 0-conf tx's as silent to hide the confirmation output\n            receipt._silent = True\n            return receipt\n    \n        try:\n            receipt._confirmed.wait()\n        except KeyboardInterrupt as exc:\n            # set related transactions as silent\n            receipt._silent = True\n            for receipt in history.filter(\n                sender=self, nonce=receipt.nonce, key=lambda k: k.status != -2\n            ):\n                receipt._silent = True\n            raise exc.with_traceback(None)\n    \n        if receipt.status != -2:\n            return receipt\n    \n        # if transaction was dropped (status -2), find and return the tx that confirmed\n        replacements = history.filter(\n            sender=self, nonce=receipt.nonce, key=lambda k: k.status != -2\n        )\n        while True:\n            if not replacements:\n>               raise TransactionError(f\"Tx dropped without known replacement: {receipt.txid}\")\nE               brownie.exceptions.TransactionError: Tx dropped without known replacement: 0xc6e019df0a6271726a340cc8f5cb835e55cba7fae6b8fb91d2407a6220c8e957\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:800: TransactionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "87fbc52a2e6c768e",
      "name" : "stdout",
      "source" : "87fbc52a2e6c768e.txt",
      "type" : "text/plain",
      "size" : 280
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1639739564866,
      "stop" : 1639739564867,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_transferFrom"
  }, {
    "name" : "host",
    "value" : "fv-az39-454"
  }, {
    "name" : "thread",
    "value" : "4483-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_transferFrom"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 81,
        "broken" : 28,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 109
      },
      "items" : [ {
        "uid" : "46d3f3acab056fd7",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/253//#testresult/46d3f3acab056fd7",
        "status" : "broken",
        "statusDetails" : "brownie.exceptions.TransactionError: Tx dropped without known replacement: 0xbe88df5a1c9961aeeeb7e242fa0229e7df7d6a03cdc7b57c3f46d01185f3323e",
        "time" : {
          "start" : 1639724823054,
          "stop" : 1639724823054,
          "duration" : 0
        }
      }, {
        "uid" : "e6694ddf6f340ad3",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/251//#testresult/e6694ddf6f340ad3",
        "status" : "failed",
        "statusDetails" : "AssertionError: Transaction did not revert",
        "time" : {
          "start" : 1639710946277,
          "stop" : 1639710950379,
          "duration" : 4102
        }
      }, {
        "uid" : "f7c785756152b617",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/250//#testresult/f7c785756152b617",
        "status" : "failed",
        "statusDetails" : "AssertionError: Transaction did not revert",
        "time" : {
          "start" : 1639701442052,
          "stop" : 1639701444771,
          "duration" : 2719
        }
      }, {
        "uid" : "64e5a7a4a23d55cc",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/249//#testresult/64e5a7a4a23d55cc",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ChunkedEncodingError: (\"Connection broken: ConnectionResetError(104, 'Connection reset by peer')\", ConnectionResetError(104, 'Connection reset by peer'))",
        "time" : {
          "start" : 1639695099078,
          "stop" : 1639695099078,
          "duration" : 0
        }
      }, {
        "uid" : "fbfd21ba0a6e877",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/247//#testresult/fbfd21ba0a6e877",
        "status" : "failed",
        "statusDetails" : "AssertionError: Transaction did not revert",
        "time" : {
          "start" : 1639684920430,
          "stop" : 1639684924026,
          "duration" : 3596
        }
      }, {
        "uid" : "17b863b7dd197590",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/245//#testresult/17b863b7dd197590",
        "status" : "failed",
        "statusDetails" : "AssertionError: Transaction did not revert",
        "time" : {
          "start" : 1639674256240,
          "stop" : 1639674258842,
          "duration" : 2602
        }
      }, {
        "uid" : "715407f3ae421481",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/242//#testresult/715407f3ae421481",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Insufficient funds for fee'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639663143811,
          "stop" : 1639663143811,
          "duration" : 0
        }
      }, {
        "uid" : "dc96e72f329316fb",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/241//#testresult/dc96e72f329316fb",
        "status" : "failed",
        "statusDetails" : "AssertionError: Transaction did not revert",
        "time" : {
          "start" : 1639661422368,
          "stop" : 1639661425308,
          "duration" : 2940
        }
      }, {
        "uid" : "8d09a2561a50fea9",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/238//#testresult/8d09a2561a50fea9",
        "status" : "failed",
        "statusDetails" : "AssertionError: Transaction did not revert",
        "time" : {
          "start" : 1639651921054,
          "stop" : 1639651923829,
          "duration" : 2775
        }
      }, {
        "uid" : "d2df8e66251cada6",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/237//#testresult/d2df8e66251cada6",
        "status" : "failed",
        "statusDetails" : "AssertionError: Transaction did not revert",
        "time" : {
          "start" : 1639648372896,
          "stop" : 1639648375979,
          "duration" : 3083
        }
      }, {
        "uid" : "70de8fc117d29d7d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/236//#testresult/70de8fc117d29d7d",
        "status" : "failed",
        "statusDetails" : "AssertionError: Transaction did not revert",
        "time" : {
          "start" : 1639645715554,
          "stop" : 1639645718335,
          "duration" : 2781
        }
      }, {
        "uid" : "254c7f7b157eb7f1",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/235//#testresult/254c7f7b157eb7f1",
        "status" : "failed",
        "statusDetails" : "AssertionError: Transaction did not revert",
        "time" : {
          "start" : 1639643292884,
          "stop" : 1639643295711,
          "duration" : 2827
        }
      }, {
        "uid" : "896d55ae1495c38a",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/234//#testresult/896d55ae1495c38a",
        "status" : "failed",
        "statusDetails" : "AssertionError: Transaction did not revert",
        "time" : {
          "start" : 1639633006849,
          "stop" : 1639633009715,
          "duration" : 2866
        }
      }, {
        "uid" : "48bf3bb60a31b0c0",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/233//#testresult/48bf3bb60a31b0c0",
        "status" : "failed",
        "statusDetails" : "AssertionError: Transaction did not revert",
        "time" : {
          "start" : 1639624590190,
          "stop" : 1639624593267,
          "duration" : 3077
        }
      }, {
        "uid" : "ccf0cf2f7c495b21",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/232//#testresult/ccf0cf2f7c495b21",
        "status" : "failed",
        "statusDetails" : "AssertionError: Transaction did not revert",
        "time" : {
          "start" : 1639614792372,
          "stop" : 1639614795322,
          "duration" : 2950
        }
      }, {
        "uid" : "c4d711be3af87ce5",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/230//#testresult/c4d711be3af87ce5",
        "status" : "failed",
        "statusDetails" : "AssertionError: Transaction did not revert",
        "time" : {
          "start" : 1639591067012,
          "stop" : 1639591070620,
          "duration" : 3608
        }
      }, {
        "uid" : "fc56a479003be32b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/228//#testresult/fc56a479003be32b",
        "status" : "failed",
        "statusDetails" : "AssertionError: Transaction did not revert",
        "time" : {
          "start" : 1639580816364,
          "stop" : 1639580818369,
          "duration" : 2005
        }
      }, {
        "uid" : "9761d4855af74f51",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/227//#testresult/9761d4855af74f51",
        "status" : "failed",
        "statusDetails" : "AssertionError: Transaction did not revert",
        "time" : {
          "start" : 1639577882083,
          "stop" : 1639577886116,
          "duration" : 4033
        }
      }, {
        "uid" : "bb7052bf8e8734f0",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/226//#testresult/bb7052bf8e8734f0",
        "status" : "failed",
        "statusDetails" : "AssertionError: Transaction did not revert",
        "time" : {
          "start" : 1639575188575,
          "stop" : 1639575190838,
          "duration" : 2263
        }
      }, {
        "uid" : "80832c1346220e6b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/225//#testresult/80832c1346220e6b",
        "status" : "failed",
        "statusDetails" : "AssertionError: Transaction did not revert",
        "time" : {
          "start" : 1639574845833,
          "stop" : 1639574847239,
          "duration" : 1406
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "22ae79e45a3c9df5.json",
  "parameterValues" : [ ]
}