{
  "uid" : "a51570a98f45848",
  "name" : "test_transfer_full_balance",
  "fullName" : "tests.brownie.token.tests.test_transfer#test_transfer_full_balance",
  "historyId" : "fdfe8d8a432ab07c0523f25ca7b9a148",
  "time" : {
    "start" : 1639739172764,
    "stop" : 1639739172764,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "brownie.exceptions.TransactionError: Tx dropped without known replacement: 0x2a71eeb19d2bdcc50ab249edcc1b8db3ce6978d26421ca8887134b59a93452a0",
  "statusTrace" : "brownie_project = <Project 'TokenProject'>\naccounts = <brownie.network.account.Accounts object at 0x7f9c2ec0c700>\n\n    @pytest.fixture(scope=\"module\")\n    def token(brownie_project, accounts):\n>       return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n\ntests/brownie/token/tests/conftest.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:600: in __call__\n    return tx[\"from\"].deploy(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:508: in deploy\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:758: in _make_transaction\n    receipt = self._await_confirmation(receipt, required_confs, gas_strategy, gas_iter)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <LocalAccount '0x35D0b67BeB0e9a8147ACbA5883685d3cD601D682'>\nreceipt = <Transaction '\u001B[0;2;37m0x2a71eeb19d2bdcc50ab249edcc1b8db3ce6978d26421ca8887134b59a93452a0\u001B[0;m'>\nrequired_confs = 1, gas_strategy = None, gas_iter = None\n\n    def _await_confirmation(\n        self,\n        receipt: TransactionReceipt,\n        required_confs: int,\n        gas_strategy: Optional[GasABC],\n        gas_iter: Optional[Iterator],\n    ) -> TransactionReceipt:\n        # add to TxHistory before waiting for confirmation, this way the tx\n        # object is available if the user exits blocking via keyboard interrupt\n        history._add_tx(receipt)\n    \n        if gas_strategy is not None:\n            gas_strategy.run(receipt, gas_iter)  # type: ignore\n    \n        if required_confs == 0:\n            # set 0-conf tx's as silent to hide the confirmation output\n            receipt._silent = True\n            return receipt\n    \n        try:\n            receipt._confirmed.wait()\n        except KeyboardInterrupt as exc:\n            # set related transactions as silent\n            receipt._silent = True\n            for receipt in history.filter(\n                sender=self, nonce=receipt.nonce, key=lambda k: k.status != -2\n            ):\n                receipt._silent = True\n            raise exc.with_traceback(None)\n    \n        if receipt.status != -2:\n            return receipt\n    \n        # if transaction was dropped (status -2), find and return the tx that confirmed\n        replacements = history.filter(\n            sender=self, nonce=receipt.nonce, key=lambda k: k.status != -2\n        )\n        while True:\n            if not replacements:\n>               raise TransactionError(f\"Tx dropped without known replacement: {receipt.txid}\")\nE               brownie.exceptions.TransactionError: Tx dropped without known replacement: 0x2a71eeb19d2bdcc50ab249edcc1b8db3ce6978d26421ca8887134b59a93452a0\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:800: TransactionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : true,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1639739103162,
      "stop" : 1639739103162,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1639739104611,
      "stop" : 1639739124950,
      "duration" : 20339
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1639739130260,
      "stop" : 1639739130260,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1639739130261,
      "stop" : 1639739130579,
      "duration" : 318
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1639739167946,
      "stop" : 1639739172413,
      "duration" : 4467
    },
    "status" : "broken",
    "statusMessage" : "brownie.exceptions.TransactionError: Tx dropped without known replacement: 0x2a71eeb19d2bdcc50ab249edcc1b8db3ce6978d26421ca8887134b59a93452a0\n",
    "statusTrace" : "  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 932, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/neon-compatibility/neon-compatibility/tests/brownie/token/tests/conftest.py\", line 49, in token\n    return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py\", line 600, in __call__\n    return tx[\"from\"].deploy(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 508, in deploy\n    receipt, exc = self._make_transaction(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 758, in _make_transaction\n    receipt = self._await_confirmation(receipt, required_confs, gas_strategy, gas_iter)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 800, in _await_confirmation\n    raise TransactionError(f\"Tx dropped without known replacement: {receipt.txid}\")\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1639739564866,
      "stop" : 1639739564867,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_transfer"
  }, {
    "name" : "host",
    "value" : "fv-az39-454"
  }, {
    "name" : "thread",
    "value" : "4483-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_transfer"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 26,
        "skipped" : 0,
        "passed" : 84,
        "unknown" : 0,
        "total" : 110
      },
      "items" : [ {
        "uid" : "77395f4d075529e5",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/253//#testresult/77395f4d075529e5",
        "status" : "passed",
        "time" : {
          "start" : 1639724806006,
          "stop" : 1639724809504,
          "duration" : 3498
        }
      }, {
        "uid" : "2e5236f8aa1bfbc6",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/251//#testresult/2e5236f8aa1bfbc6",
        "status" : "passed",
        "time" : {
          "start" : 1639710826892,
          "stop" : 1639710831661,
          "duration" : 4769
        }
      }, {
        "uid" : "67f132cda81a1598",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/250//#testresult/67f132cda81a1598",
        "status" : "passed",
        "time" : {
          "start" : 1639701346371,
          "stop" : 1639701350645,
          "duration" : 4274
        }
      }, {
        "uid" : "fbf6457a668d76b2",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/249//#testresult/fbf6457a668d76b2",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ChunkedEncodingError: (\"Connection broken: ConnectionResetError(104, 'Connection reset by peer')\", ConnectionResetError(104, 'Connection reset by peer'))",
        "time" : {
          "start" : 1639695094069,
          "stop" : 1639695094069,
          "duration" : 0
        }
      }, {
        "uid" : "6f6a8382ae2fcfde",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/247//#testresult/6f6a8382ae2fcfde",
        "status" : "passed",
        "time" : {
          "start" : 1639684834370,
          "stop" : 1639684837581,
          "duration" : 3211
        }
      }, {
        "uid" : "22de87063a90910d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/245//#testresult/22de87063a90910d",
        "status" : "passed",
        "time" : {
          "start" : 1639674183169,
          "stop" : 1639674187233,
          "duration" : 4064
        }
      }, {
        "uid" : "c04e6ecf237a4081",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/242//#testresult/c04e6ecf237a4081",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Insufficient funds for fee'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639663141972,
          "stop" : 1639663141972,
          "duration" : 0
        }
      }, {
        "uid" : "b327336c084a227e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/241//#testresult/b327336c084a227e",
        "status" : "passed",
        "time" : {
          "start" : 1639661327367,
          "stop" : 1639661330881,
          "duration" : 3514
        }
      }, {
        "uid" : "d9ef166d01878ec4",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/238//#testresult/d9ef166d01878ec4",
        "status" : "passed",
        "time" : {
          "start" : 1639651828811,
          "stop" : 1639651833975,
          "duration" : 5164
        }
      }, {
        "uid" : "b048d8c353d3e5f9",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/237//#testresult/b048d8c353d3e5f9",
        "status" : "passed",
        "time" : {
          "start" : 1639648279539,
          "stop" : 1639648283804,
          "duration" : 4265
        }
      }, {
        "uid" : "590c2cc21f1aa10f",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/236//#testresult/590c2cc21f1aa10f",
        "status" : "passed",
        "time" : {
          "start" : 1639645624164,
          "stop" : 1639645628212,
          "duration" : 4048
        }
      }, {
        "uid" : "4ab21fce8ffdefee",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/235//#testresult/4ab21fce8ffdefee",
        "status" : "passed",
        "time" : {
          "start" : 1639643201038,
          "stop" : 1639643204100,
          "duration" : 3062
        }
      }, {
        "uid" : "d0c614414a450f1f",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/234//#testresult/d0c614414a450f1f",
        "status" : "passed",
        "time" : {
          "start" : 1639632944597,
          "stop" : 1639632947278,
          "duration" : 2681
        }
      }, {
        "uid" : "49e81e022c20b22c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/233//#testresult/49e81e022c20b22c",
        "status" : "passed",
        "time" : {
          "start" : 1639624499095,
          "stop" : 1639624505083,
          "duration" : 5988
        }
      }, {
        "uid" : "ebc56816abb83318",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/232//#testresult/ebc56816abb83318",
        "status" : "passed",
        "time" : {
          "start" : 1639614702088,
          "stop" : 1639614705400,
          "duration" : 3312
        }
      }, {
        "uid" : "a8df175870978f63",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/230//#testresult/a8df175870978f63",
        "status" : "passed",
        "time" : {
          "start" : 1639590981611,
          "stop" : 1639590984813,
          "duration" : 3202
        }
      }, {
        "uid" : "32911c63f1b239fc",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/228//#testresult/32911c63f1b239fc",
        "status" : "passed",
        "time" : {
          "start" : 1639580756909,
          "stop" : 1639580759488,
          "duration" : 2579
        }
      }, {
        "uid" : "b57feff9cbedd2b5",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/227//#testresult/b57feff9cbedd2b5",
        "status" : "passed",
        "time" : {
          "start" : 1639577809704,
          "stop" : 1639577813461,
          "duration" : 3757
        }
      }, {
        "uid" : "6960feb847a3347b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/226//#testresult/6960feb847a3347b",
        "status" : "passed",
        "time" : {
          "start" : 1639575114851,
          "stop" : 1639575117971,
          "duration" : 3120
        }
      }, {
        "uid" : "2717ecd0ed48ce37",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/225//#testresult/2717ecd0ed48ce37",
        "status" : "passed",
        "time" : {
          "start" : 1639574796629,
          "stop" : 1639574798842,
          "duration" : 2213
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "a51570a98f45848.json",
  "parameterValues" : [ ]
}