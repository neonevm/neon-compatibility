{
  "uid" : "2b1f8fe68dbb8b33",
  "name" : "test_transfer_zero_tokens",
  "fullName" : "tests.brownie.token.tests.test_transfer#test_transfer_zero_tokens",
  "historyId" : "11077ef1115b1ee4997c2c5409243af5",
  "time" : {
    "start" : 1639739172837,
    "stop" : 1639739172837,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "brownie.exceptions.TransactionError: Tx dropped without known replacement: 0x2a71eeb19d2bdcc50ab249edcc1b8db3ce6978d26421ca8887134b59a93452a0",
  "statusTrace" : "brownie_project = <Project 'TokenProject'>\naccounts = <brownie.network.account.Accounts object at 0x7f9c2ec0c700>\n\n    @pytest.fixture(scope=\"module\")\n    def token(brownie_project, accounts):\n>       return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n\ntests/brownie/token/tests/conftest.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:600: in __call__\n    return tx[\"from\"].deploy(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:508: in deploy\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:758: in _make_transaction\n    receipt = self._await_confirmation(receipt, required_confs, gas_strategy, gas_iter)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <LocalAccount '0x35D0b67BeB0e9a8147ACbA5883685d3cD601D682'>\nreceipt = <Transaction '\u001B[0;2;37m0x2a71eeb19d2bdcc50ab249edcc1b8db3ce6978d26421ca8887134b59a93452a0\u001B[0;m'>\nrequired_confs = 1, gas_strategy = None, gas_iter = None\n\n    def _await_confirmation(\n        self,\n        receipt: TransactionReceipt,\n        required_confs: int,\n        gas_strategy: Optional[GasABC],\n        gas_iter: Optional[Iterator],\n    ) -> TransactionReceipt:\n        # add to TxHistory before waiting for confirmation, this way the tx\n        # object is available if the user exits blocking via keyboard interrupt\n        history._add_tx(receipt)\n    \n        if gas_strategy is not None:\n            gas_strategy.run(receipt, gas_iter)  # type: ignore\n    \n        if required_confs == 0:\n            # set 0-conf tx's as silent to hide the confirmation output\n            receipt._silent = True\n            return receipt\n    \n        try:\n            receipt._confirmed.wait()\n        except KeyboardInterrupt as exc:\n            # set related transactions as silent\n            receipt._silent = True\n            for receipt in history.filter(\n                sender=self, nonce=receipt.nonce, key=lambda k: k.status != -2\n            ):\n                receipt._silent = True\n            raise exc.with_traceback(None)\n    \n        if receipt.status != -2:\n            return receipt\n    \n        # if transaction was dropped (status -2), find and return the tx that confirmed\n        replacements = history.filter(\n            sender=self, nonce=receipt.nonce, key=lambda k: k.status != -2\n        )\n        while True:\n            if not replacements:\n>               raise TransactionError(f\"Tx dropped without known replacement: {receipt.txid}\")\nE               brownie.exceptions.TransactionError: Tx dropped without known replacement: 0x2a71eeb19d2bdcc50ab249edcc1b8db3ce6978d26421ca8887134b59a93452a0\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:800: TransactionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : true,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1639739103162,
      "stop" : 1639739103162,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1639739104611,
      "stop" : 1639739124950,
      "duration" : 20339
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1639739130260,
      "stop" : 1639739130260,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1639739130261,
      "stop" : 1639739130579,
      "duration" : 318
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1639739167946,
      "stop" : 1639739172413,
      "duration" : 4467
    },
    "status" : "broken",
    "statusMessage" : "brownie.exceptions.TransactionError: Tx dropped without known replacement: 0x2a71eeb19d2bdcc50ab249edcc1b8db3ce6978d26421ca8887134b59a93452a0\n",
    "statusTrace" : "  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 932, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/neon-compatibility/neon-compatibility/tests/brownie/token/tests/conftest.py\", line 49, in token\n    return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py\", line 600, in __call__\n    return tx[\"from\"].deploy(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 508, in deploy\n    receipt, exc = self._make_transaction(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 758, in _make_transaction\n    receipt = self._await_confirmation(receipt, required_confs, gas_strategy, gas_iter)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 800, in _await_confirmation\n    raise TransactionError(f\"Tx dropped without known replacement: {receipt.txid}\")\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1639739564866,
      "stop" : 1639739564867,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_transfer"
  }, {
    "name" : "host",
    "value" : "fv-az39-454"
  }, {
    "name" : "thread",
    "value" : "4483-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_transfer"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 26,
        "skipped" : 0,
        "passed" : 84,
        "unknown" : 0,
        "total" : 110
      },
      "items" : [ {
        "uid" : "6a2d00dab87db6d2",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/253//#testresult/6a2d00dab87db6d2",
        "status" : "passed",
        "time" : {
          "start" : 1639724809506,
          "stop" : 1639724814010,
          "duration" : 4504
        }
      }, {
        "uid" : "e5b74857b272b5c2",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/251//#testresult/e5b74857b272b5c2",
        "status" : "passed",
        "time" : {
          "start" : 1639710831663,
          "stop" : 1639710836160,
          "duration" : 4497
        }
      }, {
        "uid" : "24f72221c8c35be8",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/250//#testresult/24f72221c8c35be8",
        "status" : "passed",
        "time" : {
          "start" : 1639701350647,
          "stop" : 1639701354873,
          "duration" : 4226
        }
      }, {
        "uid" : "cd7270da8d01255f",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/249//#testresult/cd7270da8d01255f",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ChunkedEncodingError: (\"Connection broken: ConnectionResetError(104, 'Connection reset by peer')\", ConnectionResetError(104, 'Connection reset by peer'))",
        "time" : {
          "start" : 1639695094364,
          "stop" : 1639695094364,
          "duration" : 0
        }
      }, {
        "uid" : "ee87e2dc51b758a4",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/247//#testresult/ee87e2dc51b758a4",
        "status" : "passed",
        "time" : {
          "start" : 1639684837583,
          "stop" : 1639684840990,
          "duration" : 3407
        }
      }, {
        "uid" : "d4a39b2be36de16c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/245//#testresult/d4a39b2be36de16c",
        "status" : "passed",
        "time" : {
          "start" : 1639674187235,
          "stop" : 1639674190524,
          "duration" : 3289
        }
      }, {
        "uid" : "797d79823304f122",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/242//#testresult/797d79823304f122",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Insufficient funds for fee'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639663142045,
          "stop" : 1639663142045,
          "duration" : 0
        }
      }, {
        "uid" : "c5ea60dba7f3c09",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/241//#testresult/c5ea60dba7f3c09",
        "status" : "passed",
        "time" : {
          "start" : 1639661330883,
          "stop" : 1639661335062,
          "duration" : 4179
        }
      }, {
        "uid" : "dd8ebec15eb56f04",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/238//#testresult/dd8ebec15eb56f04",
        "status" : "passed",
        "time" : {
          "start" : 1639651833978,
          "stop" : 1639651838537,
          "duration" : 4559
        }
      }, {
        "uid" : "17ab3a761df29380",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/237//#testresult/17ab3a761df29380",
        "status" : "passed",
        "time" : {
          "start" : 1639648283806,
          "stop" : 1639648287964,
          "duration" : 4158
        }
      }, {
        "uid" : "d332378bf4605c99",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/236//#testresult/d332378bf4605c99",
        "status" : "passed",
        "time" : {
          "start" : 1639645628215,
          "stop" : 1639645631893,
          "duration" : 3678
        }
      }, {
        "uid" : "e2a542127bee89fd",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/235//#testresult/e2a542127bee89fd",
        "status" : "passed",
        "time" : {
          "start" : 1639643204103,
          "stop" : 1639643209288,
          "duration" : 5185
        }
      }, {
        "uid" : "f07d472ed2e9486b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/234//#testresult/f07d472ed2e9486b",
        "status" : "passed",
        "time" : {
          "start" : 1639632947280,
          "stop" : 1639632949833,
          "duration" : 2553
        }
      }, {
        "uid" : "2760aef6f499c5b4",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/233//#testresult/2760aef6f499c5b4",
        "status" : "passed",
        "time" : {
          "start" : 1639624505085,
          "stop" : 1639624508672,
          "duration" : 3587
        }
      }, {
        "uid" : "76dd990c86012420",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/232//#testresult/76dd990c86012420",
        "status" : "passed",
        "time" : {
          "start" : 1639614705402,
          "stop" : 1639614709014,
          "duration" : 3612
        }
      }, {
        "uid" : "a374f328f974598b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/230//#testresult/a374f328f974598b",
        "status" : "passed",
        "time" : {
          "start" : 1639590984815,
          "stop" : 1639590988397,
          "duration" : 3582
        }
      }, {
        "uid" : "2a5d8f3aba5f4b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/228//#testresult/2a5d8f3aba5f4b",
        "status" : "passed",
        "time" : {
          "start" : 1639580759490,
          "stop" : 1639580761998,
          "duration" : 2508
        }
      }, {
        "uid" : "2b181aa7f27c8aa0",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/227//#testresult/2b181aa7f27c8aa0",
        "status" : "passed",
        "time" : {
          "start" : 1639577813465,
          "stop" : 1639577816038,
          "duration" : 2573
        }
      }, {
        "uid" : "d620ec0ec4821bda",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/226//#testresult/d620ec0ec4821bda",
        "status" : "passed",
        "time" : {
          "start" : 1639575117973,
          "stop" : 1639575121275,
          "duration" : 3302
        }
      }, {
        "uid" : "af68c9b9f1c9126",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/225//#testresult/af68c9b9f1c9126",
        "status" : "passed",
        "time" : {
          "start" : 1639574798844,
          "stop" : 1639574800842,
          "duration" : 1998
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "2b1f8fe68dbb8b33.json",
  "parameterValues" : [ ]
}