{
  "uid" : "a09f3a981b51eadb",
  "name" : "test_transfer_zero_tokens_without_approval",
  "fullName" : "tests.brownie.token.tests.test_transferFrom#test_transfer_zero_tokens_without_approval",
  "historyId" : "8dca4b5cc80f723e5acea8426c32b8c6",
  "time" : {
    "start" : 1639739238292,
    "stop" : 1639739243183,
    "duration" : 4891
  },
  "status" : "broken",
  "statusMessage" : "brownie.exceptions.TransactionError: Tx dropped without known replacement: 0xc9e4a2cffb513e0ba8206c122a93a602ceb60914c7eec855f84569d72753aaad",
  "statusTrace" : "accounts = <brownie.network.account.Accounts object at 0x7f9c2ec0c700>\ntoken = <Token Contract '0xc06275FAcB5A82124D961b0573188A522b4a4b5E'>\n\n    def test_transfer_zero_tokens_without_approval(accounts, token):\n        sender_balance = token.balanceOf(accounts[0])\n        receiver_balance = token.balanceOf(accounts[2])\n    \n>       token.transferFrom(accounts[0], accounts[2], 0, {'from': accounts[1]})\n\ntests/brownie/token/tests/test_transferFrom.py:100: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1693: in __call__\n    return self.transact(*args)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1566: in transact\n    return tx[\"from\"].transfer(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:642: in transfer\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:758: in _make_transaction\n    receipt = self._await_confirmation(receipt, required_confs, gas_strategy, gas_iter)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <LocalAccount '0x3684f60e10FF1c9f47dB71860709f3BC9380016D'>\nreceipt = <Transaction '\u001B[0;2;37m0xc9e4a2cffb513e0ba8206c122a93a602ceb60914c7eec855f84569d72753aaad\u001B[0;m'>\nrequired_confs = 1, gas_strategy = None, gas_iter = None\n\n    def _await_confirmation(\n        self,\n        receipt: TransactionReceipt,\n        required_confs: int,\n        gas_strategy: Optional[GasABC],\n        gas_iter: Optional[Iterator],\n    ) -> TransactionReceipt:\n        # add to TxHistory before waiting for confirmation, this way the tx\n        # object is available if the user exits blocking via keyboard interrupt\n        history._add_tx(receipt)\n    \n        if gas_strategy is not None:\n            gas_strategy.run(receipt, gas_iter)  # type: ignore\n    \n        if required_confs == 0:\n            # set 0-conf tx's as silent to hide the confirmation output\n            receipt._silent = True\n            return receipt\n    \n        try:\n            receipt._confirmed.wait()\n        except KeyboardInterrupt as exc:\n            # set related transactions as silent\n            receipt._silent = True\n            for receipt in history.filter(\n                sender=self, nonce=receipt.nonce, key=lambda k: k.status != -2\n            ):\n                receipt._silent = True\n            raise exc.with_traceback(None)\n    \n        if receipt.status != -2:\n            return receipt\n    \n        # if transaction was dropped (status -2), find and return the tx that confirmed\n        replacements = history.filter(\n            sender=self, nonce=receipt.nonce, key=lambda k: k.status != -2\n        )\n        while True:\n            if not replacements:\n>               raise TransactionError(f\"Tx dropped without known replacement: {receipt.txid}\")\nE               brownie.exceptions.TransactionError: Tx dropped without known replacement: 0xc9e4a2cffb513e0ba8206c122a93a602ceb60914c7eec855f84569d72753aaad\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:800: TransactionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1639739103162,
      "stop" : 1639739103162,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1639739104611,
      "stop" : 1639739124950,
      "duration" : 20339
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1639739130260,
      "stop" : 1639739130260,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1639739130261,
      "stop" : 1639739130579,
      "duration" : 318
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1639739173185,
      "stop" : 1639739182176,
      "duration" : 8991
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "brownie.exceptions.TransactionError: Tx dropped without known replacement: 0xc9e4a2cffb513e0ba8206c122a93a602ceb60914c7eec855f84569d72753aaad",
    "statusTrace" : "accounts = <brownie.network.account.Accounts object at 0x7f9c2ec0c700>\ntoken = <Token Contract '0xc06275FAcB5A82124D961b0573188A522b4a4b5E'>\n\n    def test_transfer_zero_tokens_without_approval(accounts, token):\n        sender_balance = token.balanceOf(accounts[0])\n        receiver_balance = token.balanceOf(accounts[2])\n    \n>       token.transferFrom(accounts[0], accounts[2], 0, {'from': accounts[1]})\n\ntests/brownie/token/tests/test_transferFrom.py:100: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1693: in __call__\n    return self.transact(*args)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1566: in transact\n    return tx[\"from\"].transfer(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:642: in transfer\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:758: in _make_transaction\n    receipt = self._await_confirmation(receipt, required_confs, gas_strategy, gas_iter)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <LocalAccount '0x3684f60e10FF1c9f47dB71860709f3BC9380016D'>\nreceipt = <Transaction '\u001B[0;2;37m0xc9e4a2cffb513e0ba8206c122a93a602ceb60914c7eec855f84569d72753aaad\u001B[0;m'>\nrequired_confs = 1, gas_strategy = None, gas_iter = None\n\n    def _await_confirmation(\n        self,\n        receipt: TransactionReceipt,\n        required_confs: int,\n        gas_strategy: Optional[GasABC],\n        gas_iter: Optional[Iterator],\n    ) -> TransactionReceipt:\n        # add to TxHistory before waiting for confirmation, this way the tx\n        # object is available if the user exits blocking via keyboard interrupt\n        history._add_tx(receipt)\n    \n        if gas_strategy is not None:\n            gas_strategy.run(receipt, gas_iter)  # type: ignore\n    \n        if required_confs == 0:\n            # set 0-conf tx's as silent to hide the confirmation output\n            receipt._silent = True\n            return receipt\n    \n        try:\n            receipt._confirmed.wait()\n        except KeyboardInterrupt as exc:\n            # set related transactions as silent\n            receipt._silent = True\n            for receipt in history.filter(\n                sender=self, nonce=receipt.nonce, key=lambda k: k.status != -2\n            ):\n                receipt._silent = True\n            raise exc.with_traceback(None)\n    \n        if receipt.status != -2:\n            return receipt\n    \n        # if transaction was dropped (status -2), find and return the tx that confirmed\n        replacements = history.filter(\n            sender=self, nonce=receipt.nonce, key=lambda k: k.status != -2\n        )\n        while True:\n            if not replacements:\n>               raise TransactionError(f\"Tx dropped without known replacement: {receipt.txid}\")\nE               brownie.exceptions.TransactionError: Tx dropped without known replacement: 0xc9e4a2cffb513e0ba8206c122a93a602ceb60914c7eec855f84569d72753aaad\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:800: TransactionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "9384a2bbff6ace9f",
      "name" : "stdout",
      "source" : "9384a2bbff6ace9f.txt",
      "type" : "text/plain",
      "size" : 280
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1639739564866,
      "stop" : 1639739564867,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_transferFrom"
  }, {
    "name" : "host",
    "value" : "fv-az39-454"
  }, {
    "name" : "thread",
    "value" : "4483-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_transferFrom"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 30,
        "skipped" : 0,
        "passed" : 80,
        "unknown" : 0,
        "total" : 110
      },
      "items" : [ {
        "uid" : "73e1b66344bad1f",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/253//#testresult/73e1b66344bad1f",
        "status" : "broken",
        "statusDetails" : "brownie.exceptions.TransactionError: Tx dropped without known replacement: 0xbe88df5a1c9961aeeeb7e242fa0229e7df7d6a03cdc7b57c3f46d01185f3323e",
        "time" : {
          "start" : 1639724822809,
          "stop" : 1639724822809,
          "duration" : 0
        }
      }, {
        "uid" : "73aa97488c4e9101",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/251//#testresult/73aa97488c4e9101",
        "status" : "passed",
        "time" : {
          "start" : 1639710936532,
          "stop" : 1639710941804,
          "duration" : 5272
        }
      }, {
        "uid" : "4caa43c7c12562a7",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/250//#testresult/4caa43c7c12562a7",
        "status" : "passed",
        "time" : {
          "start" : 1639701434483,
          "stop" : 1639701438103,
          "duration" : 3620
        }
      }, {
        "uid" : "aa5396678f3e9ed1",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/249//#testresult/aa5396678f3e9ed1",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ChunkedEncodingError: (\"Connection broken: ConnectionResetError(104, 'Connection reset by peer')\", ConnectionResetError(104, 'Connection reset by peer'))",
        "time" : {
          "start" : 1639695098128,
          "stop" : 1639695098128,
          "duration" : 0
        }
      }, {
        "uid" : "55d9124cb4be0326",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/247//#testresult/55d9124cb4be0326",
        "status" : "passed",
        "time" : {
          "start" : 1639684913627,
          "stop" : 1639684916771,
          "duration" : 3144
        }
      }, {
        "uid" : "546d406953e9f881",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/245//#testresult/546d406953e9f881",
        "status" : "passed",
        "time" : {
          "start" : 1639674250295,
          "stop" : 1639674253254,
          "duration" : 2959
        }
      }, {
        "uid" : "fd2ba2d191c821b1",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/242//#testresult/fd2ba2d191c821b1",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Insufficient funds for fee'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639663143559,
          "stop" : 1639663143559,
          "duration" : 0
        }
      }, {
        "uid" : "a3ebcda60ba2915e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/241//#testresult/a3ebcda60ba2915e",
        "status" : "passed",
        "time" : {
          "start" : 1639661414473,
          "stop" : 1639661418706,
          "duration" : 4233
        }
      }, {
        "uid" : "c4c62714e5321928",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/238//#testresult/c4c62714e5321928",
        "status" : "passed",
        "time" : {
          "start" : 1639651912722,
          "stop" : 1639651916641,
          "duration" : 3919
        }
      }, {
        "uid" : "504f1876ca9589e3",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/237//#testresult/504f1876ca9589e3",
        "status" : "passed",
        "time" : {
          "start" : 1639648364584,
          "stop" : 1639648368045,
          "duration" : 3461
        }
      }, {
        "uid" : "9efdd9f86885e263",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/236//#testresult/9efdd9f86885e263",
        "status" : "passed",
        "time" : {
          "start" : 1639645707471,
          "stop" : 1639645710601,
          "duration" : 3130
        }
      }, {
        "uid" : "5eebbd5609bb6e3d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/235//#testresult/5eebbd5609bb6e3d",
        "status" : "passed",
        "time" : {
          "start" : 1639643285255,
          "stop" : 1639643289398,
          "duration" : 4143
        }
      }, {
        "uid" : "c2053f96159e8be4",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/234//#testresult/c2053f96159e8be4",
        "status" : "passed",
        "time" : {
          "start" : 1639633001308,
          "stop" : 1639633003931,
          "duration" : 2623
        }
      }, {
        "uid" : "f58a40d6fa7281d6",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/233//#testresult/f58a40d6fa7281d6",
        "status" : "passed",
        "time" : {
          "start" : 1639624581745,
          "stop" : 1639624585956,
          "duration" : 4211
        }
      }, {
        "uid" : "ebb3c5cae6a1ba27",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/232//#testresult/ebb3c5cae6a1ba27",
        "status" : "passed",
        "time" : {
          "start" : 1639614784272,
          "stop" : 1639614788322,
          "duration" : 4050
        }
      }, {
        "uid" : "ae4dd36939c6670c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/230//#testresult/ae4dd36939c6670c",
        "status" : "passed",
        "time" : {
          "start" : 1639591058896,
          "stop" : 1639591062906,
          "duration" : 4010
        }
      }, {
        "uid" : "6b032f3426824abc",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/228//#testresult/6b032f3426824abc",
        "status" : "passed",
        "time" : {
          "start" : 1639580810567,
          "stop" : 1639580813540,
          "duration" : 2973
        }
      }, {
        "uid" : "642253d40f1892c9",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/227//#testresult/642253d40f1892c9",
        "status" : "passed",
        "time" : {
          "start" : 1639577875650,
          "stop" : 1639577878534,
          "duration" : 2884
        }
      }, {
        "uid" : "1d16f3cf4a119bbd",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/226//#testresult/1d16f3cf4a119bbd",
        "status" : "passed",
        "time" : {
          "start" : 1639575181914,
          "stop" : 1639575185226,
          "duration" : 3312
        }
      }, {
        "uid" : "2022b3977e8070a5",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/225//#testresult/2022b3977e8070a5",
        "status" : "passed",
        "time" : {
          "start" : 1639574841518,
          "stop" : 1639574843343,
          "duration" : 1825
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "a09f3a981b51eadb.json",
  "parameterValues" : [ ]
}