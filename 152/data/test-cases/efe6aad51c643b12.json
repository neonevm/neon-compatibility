{
  "uid" : "efe6aad51c643b12",
  "name" : "test_insufficient_balance",
  "fullName" : "tests.brownie.token.tests.test_transfer#test_insufficient_balance",
  "historyId" : "02f6dcce7a5f38efb9b84065f779b5a9",
  "time" : {
    "start" : 1638477657047,
    "stop" : 1638477657636,
    "duration" : 589
  },
  "status" : "broken",
  "statusMessage" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
  "statusTrace" : "accounts = <brownie.network.account.Accounts object at 0x7fed5eb9e0d0>\ntoken = <Token Contract '0xCf8C51d4174aff3AdCd300561f2034CccC22782E'>\n\n    def test_insufficient_balance(accounts, token):\n        balance = token.balanceOf(accounts[0])\n    \n        with brownie.reverts():\n>           token.transfer(accounts[1], balance + 1, {'from': accounts[0]})\n\ntests/brownie/token/tests/test_transfer.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/brownie/token/tests/test_transfer.py:72: in test_insufficient_balance\n    token.transfer(accounts[1], balance + 1, {'from': accounts[0]})\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1693: in __call__\n    return self.transact(*args)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1566: in transact\n    return tx[\"from\"].transfer(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:642: in transfer\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:725: in _make_transaction\n    raise VirtualMachineError(e) from None\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError(\"Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\"))\nexc = \"Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\"\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.message: str = exc[\"message\"].rstrip(\".\")\n    \n            if isinstance(exc[\"data\"], str):\n                # handle parity exceptions - this logic probably is not perfect\n                if \"0x08c379a0\" in exc[\"data\"]:\n                    revert_type, err_msg = [i.strip() for i in exc[\"data\"].split(\"0x08c379a0\", 1)]\n                    err_msg = eth_abi.decode_abi([\"string\"], HexBytes(err_msg))\n                    err_msg = f\"{revert_type} '{err_msg}'\"\n                elif exc[\"data\"].endswith(\"0x\"):\n                    err_msg = exc[\"data\"][:-2].strip()\n                else:\n                    err_msg = exc[\"data\"]\n                raise ValueError(f\"{self.message}: {err_msg}\") from None\n    \n            try:\n                txid, data = next((k, v) for k, v in exc[\"data\"].items() if k.startswith(\"0x\"))\n            except StopIteration:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.txid: str = txid\n            self.source: str = \"\"\n            self.revert_type: str = data[\"error\"]\n            self.pc: Optional[str] = data.get(\"program_counter\")\n            if self.pc and self.revert_type == \"revert\":\n                self.pc -= 1\n    \n            self.revert_msg: Optional[str] = data.get(\"reason\")\n            self.dev_revert_msg = brownie.project.build._get_dev_revert(self.pc)\n            if self.revert_msg is None and self.revert_type in (\"revert\", \"invalid opcode\"):\n                self.revert_msg = self.dev_revert_msg\n            elif self.revert_msg == \"Failed assertion\":\n                self.revert_msg = self.dev_revert_msg or self.revert_msg\n    \n        else:\n>           raise ValueError(str(exc)) from None\nE           ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:121: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1638477589809,
      "stop" : 1638477589810,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1638477592226,
      "stop" : 1638477603434,
      "duration" : 11208
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1638477608324,
      "stop" : 1638477608324,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1638477608324,
      "stop" : 1638477608590,
      "duration" : 266
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1638477633700,
      "stop" : 1638477638517,
      "duration" : 4817
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1638477736152,
      "stop" : 1638477736153,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_transfer"
  }, {
    "name" : "host",
    "value" : "fv-az128-985"
  }, {
    "name" : "thread",
    "value" : "3291-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_transfer"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 20,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 20
      },
      "items" : [ {
        "uid" : "4b0788278fa64c4d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/151//#testresult/4b0788278fa64c4d",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1638466547100,
          "stop" : 1638466547713,
          "duration" : 613
        }
      }, {
        "uid" : "442b78589caaf29f",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/150//#testresult/442b78589caaf29f",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1638453901266,
          "stop" : 1638453901814,
          "duration" : 548
        }
      }, {
        "uid" : "f9228c04ca9b3b54",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/149//#testresult/f9228c04ca9b3b54",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='test3-solana', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fbe4fe07c70>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1638414587974,
          "stop" : 1638414587974,
          "duration" : 0
        }
      }, {
        "uid" : "699309e237513bea",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/147//#testresult/699309e237513bea",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1638399314596,
          "stop" : 1638399315129,
          "duration" : 533
        }
      }, {
        "uid" : "d401642b03e7e8ff",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/2//#testresult/d401642b03e7e8ff",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1638375956528,
          "stop" : 1638375956919,
          "duration" : 391
        }
      }, {
        "uid" : "6164e48d3605e755",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/146//#testresult/6164e48d3605e755",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1638363605758,
          "stop" : 1638363606307,
          "duration" : 549
        }
      }, {
        "uid" : "6c50e01e97da1eb9",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/145//#testresult/6c50e01e97da1eb9",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1638328190797,
          "stop" : 1638328191210,
          "duration" : 413
        }
      }, {
        "uid" : "746a4200cb4fe4a2",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/143//#testresult/746a4200cb4fe4a2",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1638318644590,
          "stop" : 1638318645195,
          "duration" : 605
        }
      }, {
        "uid" : "919eda4d892a46",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/141//#testresult/919eda4d892a46",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1638285817124,
          "stop" : 1638285817685,
          "duration" : 561
        }
      }, {
        "uid" : "8d4c24f3fd5eaeda",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/137//#testresult/8d4c24f3fd5eaeda",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1638265757466,
          "stop" : 1638265758001,
          "duration" : 535
        }
      }, {
        "uid" : "21deef7c1102169d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/140//#testresult/21deef7c1102169d",
        "status" : "broken",
        "statusDetails" : "ValueError: Transaction simulation failed: Error processing Instruction 0: insufficient funds for instruction",
        "time" : {
          "start" : 1638269191809,
          "stop" : 1638269191809,
          "duration" : 0
        }
      }, {
        "uid" : "673e5dec0ad61bc3",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/138//#testresult/673e5dec0ad61bc3",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='test3-solana', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f4107a65ca0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1638265725704,
          "stop" : 1638265725704,
          "duration" : 0
        }
      }, {
        "uid" : "4b7c78cad2eca27d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/136//#testresult/4b7c78cad2eca27d",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1638246926080,
          "stop" : 1638246926080,
          "duration" : 0
        }
      }, {
        "uid" : "87001958e7267357",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/135//#testresult/87001958e7267357",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1638241787851,
          "stop" : 1638241788473,
          "duration" : 622
        }
      }, {
        "uid" : "575791b6db804e0b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/134//#testresult/575791b6db804e0b",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1638232147570,
          "stop" : 1638232148129,
          "duration" : 559
        }
      }, {
        "uid" : "8c30793b2f6c377b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/133//#testresult/8c30793b2f6c377b",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1638219635402,
          "stop" : 1638219635927,
          "duration" : 525
        }
      }, {
        "uid" : "4efb7fbfe72a9786",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/131//#testresult/4efb7fbfe72a9786",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1638203513447,
          "stop" : 1638203513862,
          "duration" : 415
        }
      }, {
        "uid" : "2260bd69688119c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/129//#testresult/2260bd69688119c",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1638200014862,
          "stop" : 1638200015428,
          "duration" : 566
        }
      }, {
        "uid" : "316d8ecab2a32381",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/128//#testresult/316d8ecab2a32381",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Error processing Instruction 1: invalid account data for instruction'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1638198571876,
          "stop" : 1638198571876,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "efe6aad51c643b12.json",
  "parameterValues" : [ ]
}