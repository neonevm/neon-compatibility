{
  "uid" : "7fc0f27212cb455d",
  "name" : "test_caller_approval_affected",
  "fullName" : "tests.brownie.token.tests.test_transferFrom#test_caller_approval_affected",
  "historyId" : "d5548e59afb70cb78e10802d517d851a",
  "time" : {
    "start" : 1639461404361,
    "stop" : 1639461404361,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='release-solana', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f2d32d908e0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
  "statusTrace" : "brownie_project = <Project 'TokenProject'>\naccounts = <brownie.network.account.Accounts object at 0x7f77b2d35370>\n\n    @pytest.fixture(scope=\"module\")\n    def token(brownie_project, accounts):\n>       return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n\ntests/brownie/token/tests/conftest.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:600: in __call__\n    return tx[\"from\"].deploy(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:508: in deploy\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:725: in _make_transaction\n    raise VirtualMachineError(e) from None\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError(\"Gas estimation failed: 'HTTPConnectionPool(host='release-solana', port=8899): Max retr... resolution'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\"))\nexc = \"Gas estimation failed: 'HTTPConnectionPool(host='release-solana', port=8899): Max retries exceeded with url: / (Cause...me resolution'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\"\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.message: str = exc[\"message\"].rstrip(\".\")\n    \n            if isinstance(exc[\"data\"], str):\n                # handle parity exceptions - this logic probably is not perfect\n                if \"0x08c379a0\" in exc[\"data\"]:\n                    revert_type, err_msg = [i.strip() for i in exc[\"data\"].split(\"0x08c379a0\", 1)]\n                    err_msg = eth_abi.decode_abi([\"string\"], HexBytes(err_msg))\n                    err_msg = f\"{revert_type} '{err_msg}'\"\n                elif exc[\"data\"].endswith(\"0x\"):\n                    err_msg = exc[\"data\"][:-2].strip()\n                else:\n                    err_msg = exc[\"data\"]\n                raise ValueError(f\"{self.message}: {err_msg}\") from None\n    \n            try:\n                txid, data = next((k, v) for k, v in exc[\"data\"].items() if k.startswith(\"0x\"))\n            except StopIteration:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.txid: str = txid\n            self.source: str = \"\"\n            self.revert_type: str = data[\"error\"]\n            self.pc: Optional[str] = data.get(\"program_counter\")\n            if self.pc and self.revert_type == \"revert\":\n                self.pc -= 1\n    \n            self.revert_msg: Optional[str] = data.get(\"reason\")\n            self.dev_revert_msg = brownie.project.build._get_dev_revert(self.pc)\n            if self.revert_msg is None and self.revert_type in (\"revert\", \"invalid opcode\"):\n                self.revert_msg = self.dev_revert_msg\n            elif self.revert_msg == \"Failed assertion\":\n                self.revert_msg = self.dev_revert_msg or self.revert_msg\n    \n        else:\n>           raise ValueError(str(exc)) from None\nE           ValueError: Gas estimation failed: 'HTTPConnectionPool(host='release-solana', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f2d32d908e0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:121: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : true,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1639461379228,
      "stop" : 1639461379228,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1639461380025,
      "stop" : 1639461400748,
      "duration" : 20723
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1639461401095,
      "stop" : 1639461401095,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1639461401095,
      "stop" : 1639461401435,
      "duration" : 340
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1639461403816,
      "stop" : 1639461404080,
      "duration" : 264
    },
    "status" : "broken",
    "statusMessage" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='release-solana', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f2d32d908e0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\n",
    "statusTrace" : "  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 932, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/neon-compatibility/neon-compatibility/tests/brownie/token/tests/conftest.py\", line 49, in token\n    return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py\", line 600, in __call__\n    return tx[\"from\"].deploy(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 508, in deploy\n    receipt, exc = self._make_transaction(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 725, in _make_transaction\n    raise VirtualMachineError(e) from None\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py\", line 121, in __init__\n    raise ValueError(str(exc)) from None\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1639461436995,
      "stop" : 1639461436995,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_transferFrom"
  }, {
    "name" : "host",
    "value" : "fv-az39-626"
  }, {
    "name" : "thread",
    "value" : "4489-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_transferFrom"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 24,
        "skipped" : 0,
        "passed" : 61,
        "unknown" : 0,
        "total" : 85
      },
      "items" : [ {
        "uid" : "ac6e0de3bc4dee4b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/219//#testresult/ac6e0de3bc4dee4b",
        "status" : "passed",
        "time" : {
          "start" : 1639451621114,
          "stop" : 1639451624858,
          "duration" : 3744
        }
      }, {
        "uid" : "6a4457c9e4328e65",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/218//#testresult/6a4457c9e4328e65",
        "status" : "passed",
        "time" : {
          "start" : 1639442050333,
          "stop" : 1639442053980,
          "duration" : 3647
        }
      }, {
        "uid" : "da8251c0e43693b0",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/217//#testresult/da8251c0e43693b0",
        "status" : "passed",
        "time" : {
          "start" : 1639441523706,
          "stop" : 1639441528353,
          "duration" : 4647
        }
      }, {
        "uid" : "1dab2ac4c3e6c880",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/216//#testresult/1dab2ac4c3e6c880",
        "status" : "passed",
        "time" : {
          "start" : 1639434608748,
          "stop" : 1639434630505,
          "duration" : 21757
        }
      }, {
        "uid" : "45c4af9d60bd6994",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/215//#testresult/45c4af9d60bd6994",
        "status" : "passed",
        "time" : {
          "start" : 1639434210246,
          "stop" : 1639434214092,
          "duration" : 3846
        }
      }, {
        "uid" : "8f53f847fbb967f6",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/214//#testresult/8f53f847fbb967f6",
        "status" : "broken",
        "statusDetails" : "ValueError: Transaction simulation failed: Blockhash not found",
        "time" : {
          "start" : 1639409579327,
          "stop" : 1639409579327,
          "duration" : 0
        }
      }, {
        "uid" : "45707ed2d4f1629",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/213//#testresult/45707ed2d4f1629",
        "status" : "passed",
        "time" : {
          "start" : 1639395256641,
          "stop" : 1639395284920,
          "duration" : 28279
        }
      }, {
        "uid" : "5f15db128ea1de8a",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/212//#testresult/5f15db128ea1de8a",
        "status" : "passed",
        "time" : {
          "start" : 1639394959682,
          "stop" : 1639394964457,
          "duration" : 4775
        }
      }, {
        "uid" : "b8b6cd6338e74822",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/211//#testresult/b8b6cd6338e74822",
        "status" : "passed",
        "time" : {
          "start" : 1639391283364,
          "stop" : 1639391287262,
          "duration" : 3898
        }
      }, {
        "uid" : "65d82a0f5dffeaca",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/210//#testresult/65d82a0f5dffeaca",
        "status" : "passed",
        "time" : {
          "start" : 1639365254601,
          "stop" : 1639365258821,
          "duration" : 4220
        }
      }, {
        "uid" : "3789dd5d7515b277",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/209//#testresult/3789dd5d7515b277",
        "status" : "passed",
        "time" : {
          "start" : 1639355617035,
          "stop" : 1639355621621,
          "duration" : 4586
        }
      }, {
        "uid" : "abf03d9554e8244f",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/208//#testresult/abf03d9554e8244f",
        "status" : "passed",
        "time" : {
          "start" : 1639327820501,
          "stop" : 1639327824371,
          "duration" : 3870
        }
      }, {
        "uid" : "7085b05ce3872c23",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/207//#testresult/7085b05ce3872c23",
        "status" : "passed",
        "time" : {
          "start" : 1639326364509,
          "stop" : 1639326369108,
          "duration" : 4599
        }
      }, {
        "uid" : "5069ab515854fddc",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/206//#testresult/5069ab515854fddc",
        "status" : "passed",
        "time" : {
          "start" : 1639326284830,
          "stop" : 1639326288667,
          "duration" : 3837
        }
      }, {
        "uid" : "7b856320f28adfeb",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/205//#testresult/7b856320f28adfeb",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1639278912639,
          "stop" : 1639278944234,
          "duration" : 31595
        }
      }, {
        "uid" : "cb83eb27aef7f443",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/204//#testresult/cb83eb27aef7f443",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://proxy.teststand2.neontest.xyz/solana",
        "time" : {
          "start" : 1639269430379,
          "stop" : 1639269430379,
          "duration" : 0
        }
      }, {
        "uid" : "dbc3e392d065338a",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/203//#testresult/dbc3e392d065338a",
        "status" : "passed",
        "time" : {
          "start" : 1639254275130,
          "stop" : 1639254285086,
          "duration" : 9956
        }
      }, {
        "uid" : "f919621a075bfb95",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/202//#testresult/f919621a075bfb95",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Blockhash not found'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639232343131,
          "stop" : 1639232343131,
          "duration" : 0
        }
      }, {
        "uid" : "9780c22a82d15cca",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/201//#testresult/9780c22a82d15cca",
        "status" : "broken",
        "statusDetails" : "ValueError: Transaction simulation failed: Error processing Instruction 2: custom program error: 0x1",
        "time" : {
          "start" : 1639231083028,
          "stop" : 1639231083028,
          "duration" : 0
        }
      }, {
        "uid" : "f1bf054d080f32c5",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/199//#testresult/f1bf054d080f32c5",
        "status" : "passed",
        "time" : {
          "start" : 1639223631325,
          "stop" : 1639223643210,
          "duration" : 11885
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "7fc0f27212cb455d.json",
  "parameterValues" : [ ]
}