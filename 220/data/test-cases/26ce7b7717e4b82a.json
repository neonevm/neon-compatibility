{
  "uid" : "26ce7b7717e4b82a",
  "name" : "test_initial_approval_is_zero[1]",
  "fullName" : "tests.brownie.token.tests.test_approve#test_initial_approval_is_zero",
  "historyId" : "ef6bb165912f8f1bbcdec75a57b32c85",
  "time" : {
    "start" : 1639461401836,
    "stop" : 1639461401836,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='release-solana', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f2d34f650a0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
  "statusTrace" : "brownie_project = <Project 'TokenProject'>\naccounts = <brownie.network.account.Accounts object at 0x7f77b2d35370>\n\n    @pytest.fixture(scope=\"module\")\n    def token(brownie_project, accounts):\n>       return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n\ntests/brownie/token/tests/conftest.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:600: in __call__\n    return tx[\"from\"].deploy(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:508: in deploy\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:725: in _make_transaction\n    raise VirtualMachineError(e) from None\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError(\"Gas estimation failed: 'HTTPConnectionPool(host='release-solana', port=8899): Max retr... resolution'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\"))\nexc = \"Gas estimation failed: 'HTTPConnectionPool(host='release-solana', port=8899): Max retries exceeded with url: / (Cause...me resolution'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\"\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.message: str = exc[\"message\"].rstrip(\".\")\n    \n            if isinstance(exc[\"data\"], str):\n                # handle parity exceptions - this logic probably is not perfect\n                if \"0x08c379a0\" in exc[\"data\"]:\n                    revert_type, err_msg = [i.strip() for i in exc[\"data\"].split(\"0x08c379a0\", 1)]\n                    err_msg = eth_abi.decode_abi([\"string\"], HexBytes(err_msg))\n                    err_msg = f\"{revert_type} '{err_msg}'\"\n                elif exc[\"data\"].endswith(\"0x\"):\n                    err_msg = exc[\"data\"][:-2].strip()\n                else:\n                    err_msg = exc[\"data\"]\n                raise ValueError(f\"{self.message}: {err_msg}\") from None\n    \n            try:\n                txid, data = next((k, v) for k, v in exc[\"data\"].items() if k.startswith(\"0x\"))\n            except StopIteration:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.txid: str = txid\n            self.source: str = \"\"\n            self.revert_type: str = data[\"error\"]\n            self.pc: Optional[str] = data.get(\"program_counter\")\n            if self.pc and self.revert_type == \"revert\":\n                self.pc -= 1\n    \n            self.revert_msg: Optional[str] = data.get(\"reason\")\n            self.dev_revert_msg = brownie.project.build._get_dev_revert(self.pc)\n            if self.revert_msg is None and self.revert_type in (\"revert\", \"invalid opcode\"):\n                self.revert_msg = self.dev_revert_msg\n            elif self.revert_msg == \"Failed assertion\":\n                self.revert_msg = self.dev_revert_msg or self.revert_msg\n    \n        else:\n>           raise ValueError(str(exc)) from None\nE           ValueError: Gas estimation failed: 'HTTPConnectionPool(host='release-solana', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f2d34f650a0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:121: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : true,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1639461379228,
      "stop" : 1639461379228,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1639461380025,
      "stop" : 1639461400748,
      "duration" : 20723
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1639461401095,
      "stop" : 1639461401095,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1639461401095,
      "stop" : 1639461401435,
      "duration" : 340
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1639461401435,
      "stop" : 1639461401697,
      "duration" : 262
    },
    "status" : "broken",
    "statusMessage" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='release-solana', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f2d34f650a0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\n",
    "statusTrace" : "  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 932, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/neon-compatibility/neon-compatibility/tests/brownie/token/tests/conftest.py\", line 49, in token\n    return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py\", line 600, in __call__\n    return tx[\"from\"].deploy(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 508, in deploy\n    receipt, exc = self._make_transaction(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 725, in _make_transaction\n    raise VirtualMachineError(e) from None\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py\", line 121, in __init__\n    raise ValueError(str(exc)) from None\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1639461436995,
      "stop" : 1639461436995,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_approve"
  }, {
    "name" : "host",
    "value" : "fv-az39-626"
  }, {
    "name" : "thread",
    "value" : "4489-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_approve"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "idx",
    "value" : "1"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 17,
        "skipped" : 0,
        "passed" : 68,
        "unknown" : 0,
        "total" : 85
      },
      "items" : [ {
        "uid" : "db4fda55f756665e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/219//#testresult/db4fda55f756665e",
        "status" : "passed",
        "time" : {
          "start" : 1639451561803,
          "stop" : 1639451561988,
          "duration" : 185
        }
      }, {
        "uid" : "3ebc2199667752a7",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/218//#testresult/3ebc2199667752a7",
        "status" : "passed",
        "time" : {
          "start" : 1639441990940,
          "stop" : 1639441991128,
          "duration" : 188
        }
      }, {
        "uid" : "62d77118f84f32fd",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/217//#testresult/62d77118f84f32fd",
        "status" : "passed",
        "time" : {
          "start" : 1639441460337,
          "stop" : 1639441460561,
          "duration" : 224
        }
      }, {
        "uid" : "8978735b7bd64360",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/216//#testresult/8978735b7bd64360",
        "status" : "passed",
        "time" : {
          "start" : 1639434250538,
          "stop" : 1639434251612,
          "duration" : 1074
        }
      }, {
        "uid" : "fc13d7e3b1c05379",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/215//#testresult/fc13d7e3b1c05379",
        "status" : "passed",
        "time" : {
          "start" : 1639434158075,
          "stop" : 1639434158245,
          "duration" : 170
        }
      }, {
        "uid" : "f5b2ce8fd8324d56",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/214//#testresult/f5b2ce8fd8324d56",
        "status" : "passed",
        "time" : {
          "start" : 1639409413269,
          "stop" : 1639409414325,
          "duration" : 1056
        }
      }, {
        "uid" : "7ebcf4b3a7150bee",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/213//#testresult/7ebcf4b3a7150bee",
        "status" : "passed",
        "time" : {
          "start" : 1639394912323,
          "stop" : 1639394913380,
          "duration" : 1057
        }
      }, {
        "uid" : "b38122d8a04c7bf1",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/212//#testresult/b38122d8a04c7bf1",
        "status" : "passed",
        "time" : {
          "start" : 1639394892011,
          "stop" : 1639394892250,
          "duration" : 239
        }
      }, {
        "uid" : "68923284786d37ed",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/211//#testresult/68923284786d37ed",
        "status" : "passed",
        "time" : {
          "start" : 1639391223401,
          "stop" : 1639391223594,
          "duration" : 193
        }
      }, {
        "uid" : "70962404f2b688e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/210//#testresult/70962404f2b688e",
        "status" : "passed",
        "time" : {
          "start" : 1639365193699,
          "stop" : 1639365193899,
          "duration" : 200
        }
      }, {
        "uid" : "e10a7f5d3c20fd22",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/209//#testresult/e10a7f5d3c20fd22",
        "status" : "passed",
        "time" : {
          "start" : 1639355554497,
          "stop" : 1639355554701,
          "duration" : 204
        }
      }, {
        "uid" : "99372a2b7d125494",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/208//#testresult/99372a2b7d125494",
        "status" : "passed",
        "time" : {
          "start" : 1639327770147,
          "stop" : 1639327770292,
          "duration" : 145
        }
      }, {
        "uid" : "9337d2607c581bb8",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/207//#testresult/9337d2607c581bb8",
        "status" : "passed",
        "time" : {
          "start" : 1639326301417,
          "stop" : 1639326301649,
          "duration" : 232
        }
      }, {
        "uid" : "ce8ccf4f986a4dfe",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/206//#testresult/ce8ccf4f986a4dfe",
        "status" : "passed",
        "time" : {
          "start" : 1639326226963,
          "stop" : 1639326227142,
          "duration" : 179
        }
      }, {
        "uid" : "bea37891781a465d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/205//#testresult/bea37891781a465d",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://proxy.teststand2.neontest.xyz/solana",
        "time" : {
          "start" : 1639278809281,
          "stop" : 1639278809281,
          "duration" : 0
        }
      }, {
        "uid" : "f88da1bfa34d69de",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/204//#testresult/f88da1bfa34d69de",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://proxy.teststand2.neontest.xyz/solana",
        "time" : {
          "start" : 1639269424964,
          "stop" : 1639269424964,
          "duration" : 0
        }
      }, {
        "uid" : "91dfaa82399f1323",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/203//#testresult/91dfaa82399f1323",
        "status" : "passed",
        "time" : {
          "start" : 1639254080874,
          "stop" : 1639254081192,
          "duration" : 318
        }
      }, {
        "uid" : "3ea7ebbe6ef7c64",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/202//#testresult/3ea7ebbe6ef7c64",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Blockhash not found'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639232340299,
          "stop" : 1639232340299,
          "duration" : 0
        }
      }, {
        "uid" : "fee86b8ca5e62a61",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/201//#testresult/fee86b8ca5e62a61",
        "status" : "passed",
        "time" : {
          "start" : 1639231009356,
          "stop" : 1639231009653,
          "duration" : 297
        }
      }, {
        "uid" : "a150d7d01d30b115",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/199//#testresult/a150d7d01d30b115",
        "status" : "passed",
        "time" : {
          "start" : 1639223472411,
          "stop" : 1639223472673,
          "duration" : 262
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "26ce7b7717e4b82a.json",
  "parameterValues" : [ "1" ]
}