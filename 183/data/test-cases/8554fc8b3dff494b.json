{
  "uid" : "8554fc8b3dff494b",
  "name" : "test_approve_self",
  "fullName" : "tests.brownie.token.tests.test_approve#test_approve_self",
  "historyId" : "8017177f8e70c50df0067f7080cf13df",
  "time" : {
    "start" : 1639010100864,
    "stop" : 1639010132488,
    "duration" : 31624
  },
  "status" : "broken",
  "statusMessage" : "requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://proxy.teststand2.neontest.xyz/solana",
  "statusTrace" : "token = <Token Contract '0xBCc9E36b26178A199D32acE5fc9691e97c98b740'>\naccounts = <brownie.network.account.Accounts object at 0x7f74ab5f7460>\n\n    def test_approve_self(token, accounts):\n>       token.approve(accounts[0], 10**19, {'from': accounts[0]})\n\ntests/brownie/token/tests/test_approve.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1693: in __call__\n    return self.transact(*args)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1566: in transact\n    return tx[\"from\"].transfer(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:642: in transfer\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:740: in _make_transaction\n    txid = self._transact(tx, allow_revert)  # type: ignore\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:927: in _transact\n    return web3.eth.send_raw_transaction(signed_tx)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/module.py:57: in caller\n    result = w3.manager.request_blocking(method_str,\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/manager.py:186: in request_blocking\n    response = self._make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/manager.py:147: in _make_request\n    return request_func(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:76: in apply_formatters\n    response = make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/gas_price_strategy.py:90: in middleware\n    return make_request(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:74: in apply_formatters\n    response = make_request(method, formatted_params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/attrdict.py:33: in middleware\n    response = make_request(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:76: in apply_formatters\n    response = make_request(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:76: in apply_formatters\n    response = make_request(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:74: in apply_formatters\n    response = make_request(method, formatted_params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/buffered_gas_estimate.py:40: in middleware\n    return make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/middlewares/catch_tx_revert.py:24: in process_request\n    result = make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/exception_retry_request.py:105: in middleware\n    return make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/providers/rpc.py:88: in make_request\n    raw_response = make_post_request(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/_utils/request.py:49: in make_post_request\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = ''\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode('utf-8')\n            except UnicodeDecodeError:\n                reason = self.reason.decode('iso-8859-1')\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = u'%s Client Error: %s for url: %s' % (self.status_code, reason, self.url)\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = u'%s Server Error: %s for url: %s' % (self.status_code, reason, self.url)\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://proxy.teststand2.neontest.xyz/solana\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/requests/models.py:953: HTTPError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : true,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "token",
    "time" : {
      "start" : 1639009910392,
      "stop" : 1639010034801,
      "duration" : 124409
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_approve"
  }, {
    "name" : "host",
    "value" : "fv-az135-383"
  }, {
    "name" : "thread",
    "value" : "4516-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_approve"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 11,
        "skipped" : 0,
        "passed" : 39,
        "unknown" : 0,
        "total" : 50
      },
      "items" : [ {
        "uid" : "36b16ad132a59e93",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/182//#testresult/36b16ad132a59e93",
        "status" : "passed",
        "time" : {
          "start" : 1638990632363,
          "stop" : 1638990634354,
          "duration" : 1991
        }
      }, {
        "uid" : "e93a751ff097e5ef",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/177//#testresult/e93a751ff097e5ef",
        "status" : "passed",
        "time" : {
          "start" : 1638969716148,
          "stop" : 1638969723358,
          "duration" : 7210
        }
      }, {
        "uid" : "3223a3517ca570b0",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/181//#testresult/3223a3517ca570b0",
        "status" : "passed",
        "time" : {
          "start" : 1638980829761,
          "stop" : 1638980831693,
          "duration" : 1932
        }
      }, {
        "uid" : "da6e10094c019de5",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/180//#testresult/da6e10094c019de5",
        "status" : "passed",
        "time" : {
          "start" : 1638975758017,
          "stop" : 1638975759731,
          "duration" : 1714
        }
      }, {
        "uid" : "1928fde86f810a96",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/179//#testresult/1928fde86f810a96",
        "status" : "passed",
        "time" : {
          "start" : 1638974611216,
          "stop" : 1638974613303,
          "duration" : 2087
        }
      }, {
        "uid" : "d74b2c44b27e74f6",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/178//#testresult/d74b2c44b27e74f6",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1638973498874,
          "stop" : 1638973498874,
          "duration" : 0
        }
      }, {
        "uid" : "d380aaf5301f83bf",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/176//#testresult/d380aaf5301f83bf",
        "status" : "passed",
        "time" : {
          "start" : 1638951100630,
          "stop" : 1638951106625,
          "duration" : 5995
        }
      }, {
        "uid" : "f723cf632c1f73e2",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/174//#testresult/f723cf632c1f73e2",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ConnectionError: HTTPSConnectionPool(host='proxy.teststand2.neontest.xyz', port=443): Max retries exceeded with url: /solana (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7fadbd1ce9d0>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1638932972140,
          "stop" : 1638932972140,
          "duration" : 0
        }
      }, {
        "uid" : "d1a59f82b8a68e5a",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/173//#testresult/d1a59f82b8a68e5a",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ConnectionError: HTTPSConnectionPool(host='proxy.teststand2.neontest.xyz', port=443): Max retries exceeded with url: /solana (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7fb8653e67f0>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1638923380707,
          "stop" : 1638923380707,
          "duration" : 0
        }
      }, {
        "uid" : "3064477ac78ac909",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/172//#testresult/3064477ac78ac909",
        "status" : "passed",
        "time" : {
          "start" : 1638913119914,
          "stop" : 1638913126731,
          "duration" : 6817
        }
      }, {
        "uid" : "10fc51b80649004a",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/171//#testresult/10fc51b80649004a",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ConnectionError: HTTPSConnectionPool(host='proxy.testnet.neonlabs.org', port=443): Max retries exceeded with url: /solana (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f2408313a30>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1638912574275,
          "stop" : 1638912574275,
          "duration" : 0
        }
      }, {
        "uid" : "23fad415f230d032",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/170//#testresult/23fad415f230d032",
        "status" : "passed",
        "time" : {
          "start" : 1638908505098,
          "stop" : 1638908511547,
          "duration" : 6449
        }
      }, {
        "uid" : "a3961027476beecf",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/169//#testresult/a3961027476beecf",
        "status" : "passed",
        "time" : {
          "start" : 1638892645033,
          "stop" : 1638892646777,
          "duration" : 1744
        }
      }, {
        "uid" : "44ae15e0a5e24d6f",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/168//#testresult/44ae15e0a5e24d6f",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Error processing Instruction 1: invalid account data for instruction'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1638891849628,
          "stop" : 1638891849628,
          "duration" : 0
        }
      }, {
        "uid" : "8ac7ef442bdfc5fa",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/167//#testresult/8ac7ef442bdfc5fa",
        "status" : "passed",
        "time" : {
          "start" : 1638863124361,
          "stop" : 1638863126374,
          "duration" : 2013
        }
      }, {
        "uid" : "ced146bceb99f55a",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/166//#testresult/ced146bceb99f55a",
        "status" : "passed",
        "time" : {
          "start" : 1638846647810,
          "stop" : 1638846649526,
          "duration" : 1716
        }
      }, {
        "uid" : "54353c9d04245785",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/165//#testresult/54353c9d04245785",
        "status" : "passed",
        "time" : {
          "start" : 1638837025110,
          "stop" : 1638837027609,
          "duration" : 2499
        }
      }, {
        "uid" : "ae010d1b5020a254",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/164//#testresult/ae010d1b5020a254",
        "status" : "passed",
        "time" : {
          "start" : 1638818154052,
          "stop" : 1638818163370,
          "duration" : 9318
        }
      }, {
        "uid" : "732318f6737ecb2c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/163//#testresult/732318f6737ecb2c",
        "status" : "passed",
        "time" : {
          "start" : 1638794701241,
          "stop" : 1638794708887,
          "duration" : 7646
        }
      }, {
        "uid" : "31db0ab89e5eefe7",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/162//#testresult/31db0ab89e5eefe7",
        "status" : "passed",
        "time" : {
          "start" : 1638760228419,
          "stop" : 1638760230571,
          "duration" : 2152
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "8554fc8b3dff494b.json",
  "parameterValues" : [ ]
}