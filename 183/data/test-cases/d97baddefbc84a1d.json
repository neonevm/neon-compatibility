{
  "uid" : "d97baddefbc84a1d",
  "name" : "test_brownie_deploy",
  "fullName" : "tests.brownie.test_brownie#test_brownie_deploy",
  "historyId" : "6e83a925951bfd8b9c39b6ea82974dc9",
  "time" : {
    "start" : 1639009846714,
    "stop" : 1639009909971,
    "duration" : 63257
  },
  "status" : "broken",
  "statusMessage" : "ValueError: Transaction simulation failed: Error processing Instruction 0: custom program error: 0x0",
  "statusTrace" : "brownie_project = <Project 'TokenProject'>\n\n    def test_brownie_deploy(brownie_project):\n>       deployed_contract = brownie_project.Token.deploy(\n            \"Test deploy\", \"TST\", 10, 10000000, {\"from\": accounts[0]}\n        )\n\ntests/brownie/test_brownie.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:600: in __call__\n    return tx[\"from\"].deploy(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:508: in deploy\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:743: in _make_transaction\n    exc = VirtualMachineError(e)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError({'code': -32002, 'message': 'Transaction simulation failed: Error processing Instructio...z1GF5UQKjVLCkAZih) } already in use', 'Program 11111111111111111111111111111111 failed: custom program error: 0x0']}}))\nexc = {'code': -32002, 'data': {'accounts': None, 'err': {'InstructionError': [0, {'Custom': 0}]}, 'logs': ['Program 1111111...m error: 0x0']}, 'message': 'Transaction simulation failed: Error processing Instruction 0: custom program error: 0x0'}\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.message: str = exc[\"message\"].rstrip(\".\")\n    \n            if isinstance(exc[\"data\"], str):\n                # handle parity exceptions - this logic probably is not perfect\n                if \"0x08c379a0\" in exc[\"data\"]:\n                    revert_type, err_msg = [i.strip() for i in exc[\"data\"].split(\"0x08c379a0\", 1)]\n                    err_msg = eth_abi.decode_abi([\"string\"], HexBytes(err_msg))\n                    err_msg = f\"{revert_type} '{err_msg}'\"\n                elif exc[\"data\"].endswith(\"0x\"):\n                    err_msg = exc[\"data\"][:-2].strip()\n                else:\n                    err_msg = exc[\"data\"]\n                raise ValueError(f\"{self.message}: {err_msg}\") from None\n    \n            try:\n                txid, data = next((k, v) for k, v in exc[\"data\"].items() if k.startswith(\"0x\"))\n            except StopIteration:\n>               raise ValueError(exc[\"message\"]) from None\nE               ValueError: Transaction simulation failed: Error processing Instruction 0: custom program error: 0x0\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:104: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : true,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "ValueError: Transaction simulation failed: Error processing Instruction 0: custom program error: 0x0",
    "statusTrace" : "brownie_project = <Project 'TokenProject'>\n\n    def test_brownie_deploy(brownie_project):\n>       deployed_contract = brownie_project.Token.deploy(\n            \"Test deploy\", \"TST\", 10, 10000000, {\"from\": accounts[0]}\n        )\n\ntests/brownie/test_brownie.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:600: in __call__\n    return tx[\"from\"].deploy(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:508: in deploy\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:743: in _make_transaction\n    exc = VirtualMachineError(e)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError({'code': -32002, 'message': 'Transaction simulation failed: Error processing Instructio...z1GF5UQKjVLCkAZih) } already in use', 'Program 11111111111111111111111111111111 failed: custom program error: 0x0']}}))\nexc = {'code': -32002, 'data': {'accounts': None, 'err': {'InstructionError': [0, {'Custom': 0}]}, 'logs': ['Program 1111111...m error: 0x0']}, 'message': 'Transaction simulation failed: Error processing Instruction 0: custom program error: 0x0'}\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.message: str = exc[\"message\"].rstrip(\".\")\n    \n            if isinstance(exc[\"data\"], str):\n                # handle parity exceptions - this logic probably is not perfect\n                if \"0x08c379a0\" in exc[\"data\"]:\n                    revert_type, err_msg = [i.strip() for i in exc[\"data\"].split(\"0x08c379a0\", 1)]\n                    err_msg = eth_abi.decode_abi([\"string\"], HexBytes(err_msg))\n                    err_msg = f\"{revert_type} '{err_msg}'\"\n                elif exc[\"data\"].endswith(\"0x\"):\n                    err_msg = exc[\"data\"][:-2].strip()\n                else:\n                    err_msg = exc[\"data\"]\n                raise ValueError(f\"{self.message}: {err_msg}\") from None\n    \n            try:\n                txid, data = next((k, v) for k, v in exc[\"data\"].items() if k.startswith(\"0x\"))\n            except StopIteration:\n>               raise ValueError(exc[\"message\"]) from None\nE               ValueError: Transaction simulation failed: Error processing Instruction 0: custom program error: 0x0\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:104: ValueError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f4e2311f8c2e3fd4",
      "name" : "log",
      "source" : "f4e2311f8c2e3fd4.txt",
      "type" : "text/plain",
      "size" : 287
    }, {
      "uid" : "a4ae5fd3ff775c",
      "name" : "stdout",
      "source" : "a4ae5fd3ff775c.txt",
      "type" : "text/plain",
      "size" : 252
    }, {
      "uid" : "e9bc4665228f56f5",
      "name" : "stderr",
      "source" : "e9bc4665228f56f5.txt",
      "type" : "text/plain",
      "size" : 5913
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie"
  }, {
    "name" : "suite",
    "value" : "test_brownie"
  }, {
    "name" : "host",
    "value" : "fv-az135-383"
  }, {
    "name" : "thread",
    "value" : "4516-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.test_brownie"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 10,
        "skipped" : 0,
        "passed" : 40,
        "unknown" : 0,
        "total" : 50
      },
      "items" : [ {
        "uid" : "7a62a797ead3ba",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/182//#testresult/7a62a797ead3ba",
        "status" : "passed",
        "time" : {
          "start" : 1638990612358,
          "stop" : 1638990616731,
          "duration" : 4373
        }
      }, {
        "uid" : "1cccda91ecdc18ec",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/177//#testresult/1cccda91ecdc18ec",
        "status" : "passed",
        "time" : {
          "start" : 1638969635578,
          "stop" : 1638969656560,
          "duration" : 20982
        }
      }, {
        "uid" : "21523f394fd17f28",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/181//#testresult/21523f394fd17f28",
        "status" : "passed",
        "time" : {
          "start" : 1638980692657,
          "stop" : 1638980727078,
          "duration" : 34421
        }
      }, {
        "uid" : "fd672b8f945e1b56",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/180//#testresult/fd672b8f945e1b56",
        "status" : "passed",
        "time" : {
          "start" : 1638975742599,
          "stop" : 1638975746312,
          "duration" : 3713
        }
      }, {
        "uid" : "281b71bcd1b686c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/179//#testresult/281b71bcd1b686c",
        "status" : "passed",
        "time" : {
          "start" : 1638974591306,
          "stop" : 1638974595694,
          "duration" : 4388
        }
      }, {
        "uid" : "6c02a4d68f69d85e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/178//#testresult/6c02a4d68f69d85e",
        "status" : "passed",
        "time" : {
          "start" : 1638973401875,
          "stop" : 1638973466382,
          "duration" : 64507
        }
      }, {
        "uid" : "8c7951df78e4f88e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/176//#testresult/8c7951df78e4f88e",
        "status" : "passed",
        "time" : {
          "start" : 1638951030689,
          "stop" : 1638951050962,
          "duration" : 20273
        }
      }, {
        "uid" : "559c931af888a6fa",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/174//#testresult/559c931af888a6fa",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ConnectionError: HTTPSConnectionPool(host='proxy.teststand2.neontest.xyz', port=443): Max retries exceeded with url: /solana (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7fadbd8ad520>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1638932968353,
          "stop" : 1638932969094,
          "duration" : 741
        }
      }, {
        "uid" : "dbd6299f4394979f",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/173//#testresult/dbd6299f4394979f",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ConnectionError: HTTPSConnectionPool(host='proxy.teststand2.neontest.xyz', port=443): Max retries exceeded with url: /solana (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7fb865ac1520>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1638923376600,
          "stop" : 1638923377424,
          "duration" : 824
        }
      }, {
        "uid" : "84b577725a56b3a5",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/172//#testresult/84b577725a56b3a5",
        "status" : "passed",
        "time" : {
          "start" : 1638913051992,
          "stop" : 1638913069778,
          "duration" : 17786
        }
      }, {
        "uid" : "a9a4436aff6eca06",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/171//#testresult/a9a4436aff6eca06",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ConnectionError: HTTPSConnectionPool(host='proxy.testnet.neonlabs.org', port=443): Max retries exceeded with url: /solana (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f24089ee520>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1638912570535,
          "stop" : 1638912571362,
          "duration" : 827
        }
      }, {
        "uid" : "fac03fe28b466e22",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/170//#testresult/fac03fe28b466e22",
        "status" : "passed",
        "time" : {
          "start" : 1638908429784,
          "stop" : 1638908450799,
          "duration" : 21015
        }
      }, {
        "uid" : "fe27894ff76372c8",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/169//#testresult/fe27894ff76372c8",
        "status" : "passed",
        "time" : {
          "start" : 1638892630149,
          "stop" : 1638892634054,
          "duration" : 3905
        }
      }, {
        "uid" : "5641f72f0e517a0d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/168//#testresult/5641f72f0e517a0d",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Error processing Instruction 1: invalid account data for instruction'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1638891847578,
          "stop" : 1638891848010,
          "duration" : 432
        }
      }, {
        "uid" : "b4b8c3cc744812a0",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/167//#testresult/b4b8c3cc744812a0",
        "status" : "passed",
        "time" : {
          "start" : 1638863103224,
          "stop" : 1638863107897,
          "duration" : 4673
        }
      }, {
        "uid" : "18cc1b005a2b0559",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/166//#testresult/18cc1b005a2b0559",
        "status" : "passed",
        "time" : {
          "start" : 1638846630191,
          "stop" : 1638846634890,
          "duration" : 4699
        }
      }, {
        "uid" : "705db6d4e436d927",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/165//#testresult/705db6d4e436d927",
        "status" : "passed",
        "time" : {
          "start" : 1638837001954,
          "stop" : 1638837008129,
          "duration" : 6175
        }
      }, {
        "uid" : "ee0fff162781a7a8",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/164//#testresult/ee0fff162781a7a8",
        "status" : "passed",
        "time" : {
          "start" : 1638818072520,
          "stop" : 1638818091498,
          "duration" : 18978
        }
      }, {
        "uid" : "53fa699340ebb3a3",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/163//#testresult/53fa699340ebb3a3",
        "status" : "passed",
        "time" : {
          "start" : 1638794620046,
          "stop" : 1638794638108,
          "duration" : 18062
        }
      }, {
        "uid" : "897e55d9f547c199",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/162//#testresult/897e55d9f547c199",
        "status" : "passed",
        "time" : {
          "start" : 1638760205905,
          "stop" : 1638760211427,
          "duration" : 5522
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "d97baddefbc84a1d.json",
  "parameterValues" : [ ]
}