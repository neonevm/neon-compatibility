{
  "uid" : "defd7887bebec2c1",
  "name" : "test_total_supply_not_affected",
  "fullName" : "tests.brownie.token.tests.test_transferFrom#test_total_supply_not_affected",
  "historyId" : "82a431454718fbb08ada4eae30b0a4d0",
  "time" : {
    "start" : 1639010447160,
    "stop" : 1639010480378,
    "duration" : 33218
  },
  "status" : "broken",
  "statusMessage" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
  "statusTrace" : "accounts = <brownie.network.account.Accounts object at 0x7f74ab5f7460>\ntoken = <Token Contract '0xBd678730636A2cC78FeC326272594B538427f454'>\n\n    def test_total_supply_not_affected(accounts, token):\n        total_supply = token.totalSupply()\n        amount = token.balanceOf(accounts[0])\n    \n        token.approve(accounts[1], amount, {'from': accounts[0]})\n>       token.transferFrom(accounts[0], accounts[2], amount, {'from': accounts[1]})\n\ntests/brownie/token/tests/test_transferFrom.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1693: in __call__\n    return self.transact(*args)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1566: in transact\n    return tx[\"from\"].transfer(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:642: in transfer\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:743: in _make_transaction\n    exc = VirtualMachineError(e)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError({'code': -32002, 'message': 'Verifying nonce before send transaction: Error processing ...invalid program argument', 'data': {'logs': ['/src/entrypoint.rs Invalid Ethereum transaction nonce: acc 5, trx 4']}}))\nexc = {'code': -32002, 'data': {'logs': ['/src/entrypoint.rs Invalid Ethereum transaction nonce: acc 5, trx 4']}, 'message': 'Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument'}\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.message: str = exc[\"message\"].rstrip(\".\")\n    \n            if isinstance(exc[\"data\"], str):\n                # handle parity exceptions - this logic probably is not perfect\n                if \"0x08c379a0\" in exc[\"data\"]:\n                    revert_type, err_msg = [i.strip() for i in exc[\"data\"].split(\"0x08c379a0\", 1)]\n                    err_msg = eth_abi.decode_abi([\"string\"], HexBytes(err_msg))\n                    err_msg = f\"{revert_type} '{err_msg}'\"\n                elif exc[\"data\"].endswith(\"0x\"):\n                    err_msg = exc[\"data\"][:-2].strip()\n                else:\n                    err_msg = exc[\"data\"]\n                raise ValueError(f\"{self.message}: {err_msg}\") from None\n    \n            try:\n                txid, data = next((k, v) for k, v in exc[\"data\"].items() if k.startswith(\"0x\"))\n            except StopIteration:\n>               raise ValueError(exc[\"message\"]) from None\nE               ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:104: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : true,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "token",
    "time" : {
      "start" : 1639010396336,
      "stop" : 1639010399737,
      "duration" : 3401
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
    "statusTrace" : "accounts = <brownie.network.account.Accounts object at 0x7f74ab5f7460>\ntoken = <Token Contract '0xBd678730636A2cC78FeC326272594B538427f454'>\n\n    def test_total_supply_not_affected(accounts, token):\n        total_supply = token.totalSupply()\n        amount = token.balanceOf(accounts[0])\n    \n        token.approve(accounts[1], amount, {'from': accounts[0]})\n>       token.transferFrom(accounts[0], accounts[2], amount, {'from': accounts[1]})\n\ntests/brownie/token/tests/test_transferFrom.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1693: in __call__\n    return self.transact(*args)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1566: in transact\n    return tx[\"from\"].transfer(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:642: in transfer\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:743: in _make_transaction\n    exc = VirtualMachineError(e)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError({'code': -32002, 'message': 'Verifying nonce before send transaction: Error processing ...invalid program argument', 'data': {'logs': ['/src/entrypoint.rs Invalid Ethereum transaction nonce: acc 5, trx 4']}}))\nexc = {'code': -32002, 'data': {'logs': ['/src/entrypoint.rs Invalid Ethereum transaction nonce: acc 5, trx 4']}, 'message': 'Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument'}\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.message: str = exc[\"message\"].rstrip(\".\")\n    \n            if isinstance(exc[\"data\"], str):\n                # handle parity exceptions - this logic probably is not perfect\n                if \"0x08c379a0\" in exc[\"data\"]:\n                    revert_type, err_msg = [i.strip() for i in exc[\"data\"].split(\"0x08c379a0\", 1)]\n                    err_msg = eth_abi.decode_abi([\"string\"], HexBytes(err_msg))\n                    err_msg = f\"{revert_type} '{err_msg}'\"\n                elif exc[\"data\"].endswith(\"0x\"):\n                    err_msg = exc[\"data\"][:-2].strip()\n                else:\n                    err_msg = exc[\"data\"]\n                raise ValueError(f\"{self.message}: {err_msg}\") from None\n    \n            try:\n                txid, data = next((k, v) for k, v in exc[\"data\"].items() if k.startswith(\"0x\"))\n            except StopIteration:\n>               raise ValueError(exc[\"message\"]) from None\nE               ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:104: ValueError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "bc51db5981f933d6",
      "name" : "stdout",
      "source" : "bc51db5981f933d6.txt",
      "type" : "text/plain",
      "size" : 308
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_transferFrom"
  }, {
    "name" : "host",
    "value" : "fv-az135-383"
  }, {
    "name" : "thread",
    "value" : "4516-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_transferFrom"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 12,
        "skipped" : 0,
        "passed" : 38,
        "unknown" : 0,
        "total" : 50
      },
      "items" : [ {
        "uid" : "be686440635b7c7c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/182//#testresult/be686440635b7c7c",
        "status" : "passed",
        "time" : {
          "start" : 1638990695593,
          "stop" : 1638990700220,
          "duration" : 4627
        }
      }, {
        "uid" : "50849b02313f964a",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/177//#testresult/50849b02313f964a",
        "status" : "passed",
        "time" : {
          "start" : 1638969945620,
          "stop" : 1638969961988,
          "duration" : 16368
        }
      }, {
        "uid" : "b5b66eeb3cb86c33",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/181//#testresult/b5b66eeb3cb86c33",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1638981046241,
          "stop" : 1638981046241,
          "duration" : 0
        }
      }, {
        "uid" : "c9204bfcba432fa0",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/180//#testresult/c9204bfcba432fa0",
        "status" : "broken",
        "statusDetails" : "ValueError: Verifying nonce before send transaction: Error processing Instruction 1: invalid program argument",
        "time" : {
          "start" : 1638975844576,
          "stop" : 1638975844576,
          "duration" : 0
        }
      }, {
        "uid" : "3a563e64f054023e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/179//#testresult/3a563e64f054023e",
        "status" : "passed",
        "time" : {
          "start" : 1638974673941,
          "stop" : 1638974678530,
          "duration" : 4589
        }
      }, {
        "uid" : "1e8e4a969532bc2c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/178//#testresult/1e8e4a969532bc2c",
        "status" : "passed",
        "time" : {
          "start" : 1638973589455,
          "stop" : 1638973594128,
          "duration" : 4673
        }
      }, {
        "uid" : "efd4a407a2b9312c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/176//#testresult/efd4a407a2b9312c",
        "status" : "passed",
        "time" : {
          "start" : 1638951281955,
          "stop" : 1638951295559,
          "duration" : 13604
        }
      }, {
        "uid" : "4113e3f0f1ec7af3",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/174//#testresult/4113e3f0f1ec7af3",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ConnectionError: HTTPSConnectionPool(host='proxy.teststand2.neontest.xyz', port=443): Max retries exceeded with url: /solana (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7fadbd81f0d0>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1638932977746,
          "stop" : 1638932977746,
          "duration" : 0
        }
      }, {
        "uid" : "53e45c4a58a1889e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/173//#testresult/53e45c4a58a1889e",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ConnectionError: HTTPSConnectionPool(host='proxy.teststand2.neontest.xyz', port=443): Max retries exceeded with url: /solana (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7fb865a3b130>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1638923386690,
          "stop" : 1638923386690,
          "duration" : 0
        }
      }, {
        "uid" : "b144e628d1a58821",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/172//#testresult/b144e628d1a58821",
        "status" : "passed",
        "time" : {
          "start" : 1638913317651,
          "stop" : 1638913331552,
          "duration" : 13901
        }
      }, {
        "uid" : "509d667729113232",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/171//#testresult/509d667729113232",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ConnectionError: HTTPSConnectionPool(host='proxy.testnet.neonlabs.org', port=443): Max retries exceeded with url: /solana (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x7f240840a520>: Failed to establish a new connection: [Errno 111] Connection refused'))",
        "time" : {
          "start" : 1638912579565,
          "stop" : 1638912579565,
          "duration" : 0
        }
      }, {
        "uid" : "e4b7b29cc296aeb0",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/170//#testresult/e4b7b29cc296aeb0",
        "status" : "passed",
        "time" : {
          "start" : 1638908700209,
          "stop" : 1638908718987,
          "duration" : 18778
        }
      }, {
        "uid" : "5c7b2dcb69c7e3b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/169//#testresult/5c7b2dcb69c7e3b",
        "status" : "passed",
        "time" : {
          "start" : 1638892692547,
          "stop" : 1638892696407,
          "duration" : 3860
        }
      }, {
        "uid" : "c4faf0b322ed0b91",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/168//#testresult/c4faf0b322ed0b91",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'Transaction simulation failed: Error processing Instruction 1: invalid account data for instruction'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1638891851739,
          "stop" : 1638891851739,
          "duration" : 0
        }
      }, {
        "uid" : "a1d95ce0a2ae142",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/167//#testresult/a1d95ce0a2ae142",
        "status" : "passed",
        "time" : {
          "start" : 1638863188410,
          "stop" : 1638863192640,
          "duration" : 4230
        }
      }, {
        "uid" : "89ef7758281aedbc",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/166//#testresult/89ef7758281aedbc",
        "status" : "passed",
        "time" : {
          "start" : 1638846695915,
          "stop" : 1638846699235,
          "duration" : 3320
        }
      }, {
        "uid" : "4ad537594d994739",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/165//#testresult/4ad537594d994739",
        "status" : "passed",
        "time" : {
          "start" : 1638837093007,
          "stop" : 1638837097970,
          "duration" : 4963
        }
      }, {
        "uid" : "9b2ce73f733376e6",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/164//#testresult/9b2ce73f733376e6",
        "status" : "passed",
        "time" : {
          "start" : 1638818399600,
          "stop" : 1638818417093,
          "duration" : 17493
        }
      }, {
        "uid" : "a62f141160e029e7",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/163//#testresult/a62f141160e029e7",
        "status" : "passed",
        "time" : {
          "start" : 1638794942501,
          "stop" : 1638794960239,
          "duration" : 17738
        }
      }, {
        "uid" : "fd3170a9d88605b4",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/162//#testresult/fd3170a9d88605b4",
        "status" : "passed",
        "time" : {
          "start" : 1638760295866,
          "stop" : 1638760300483,
          "duration" : 4617
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "defd7887bebec2c1.json",
  "parameterValues" : [ ]
}