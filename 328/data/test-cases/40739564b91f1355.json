{
  "uid" : "40739564b91f1355",
  "name" : "test_caller_balance_not_affected",
  "fullName" : "tests.brownie.token.tests.test_transferFrom#test_caller_balance_not_affected",
  "historyId" : "5da0d00473da0ab1e6482a13be5b4f69",
  "time" : {
    "start" : 1640306382901,
    "stop" : 1640306383699,
    "duration" : 798
  },
  "status" : "broken",
  "statusMessage" : "requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://proxy.teststand2.neontest.xyz/solana",
  "statusTrace" : "accounts = <brownie.network.account.Accounts object at 0x7f7f5f54c1c0>\ntoken = <Token Contract '0x968701E85bd02305064A304629C98ab9CBf06F49'>\n\n    def test_caller_balance_not_affected(accounts, token):\n>       caller_balance = token.balanceOf(accounts[1])\n\ntests/brownie/token/tests/test_transferFrom.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/multicall.py:115: in _proxy_call\n    result = ContractCall.__call__(*args, **kwargs)  # type: ignore\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1729: in __call__\n    return self.call(*args, block_identifier=block_identifier)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1531: in call\n    data = web3.eth.call({k: v for k, v in tx.items() if v}, block_identifier)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/module.py:57: in caller\n    result = w3.manager.request_blocking(method_str,\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/manager.py:186: in request_blocking\n    response = self._make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/manager.py:147: in _make_request\n    return request_func(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:76: in apply_formatters\n    response = make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/gas_price_strategy.py:90: in middleware\n    return make_request(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:74: in apply_formatters\n    response = make_request(method, formatted_params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/attrdict.py:33: in middleware\n    response = make_request(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:74: in apply_formatters\n    response = make_request(method, formatted_params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:74: in apply_formatters\n    response = make_request(method, formatted_params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:74: in apply_formatters\n    response = make_request(method, formatted_params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/buffered_gas_estimate.py:40: in middleware\n    return make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/middlewares/catch_tx_revert.py:24: in process_request\n    result = make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/exception_retry_request.py:105: in middleware\n    return make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/providers/rpc.py:88: in make_request\n    raw_response = make_post_request(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/_utils/request.py:49: in make_post_request\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = ''\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode('utf-8')\n            except UnicodeDecodeError:\n                reason = self.reason.decode('iso-8859-1')\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = u'%s Client Error: %s for url: %s' % (self.status_code, reason, self.url)\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = u'%s Server Error: %s for url: %s' % (self.status_code, reason, self.url)\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://proxy.teststand2.neontest.xyz/solana\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/requests/models.py:953: HTTPError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : true,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1640305908372,
      "stop" : 1640305908372,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1640305910129,
      "stop" : 1640305923264,
      "duration" : 13135
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1640305957574,
      "stop" : 1640305957834,
      "duration" : 260
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1640305957574,
      "stop" : 1640305957574,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1640306283641,
      "stop" : 1640306286826,
      "duration" : 3185
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1640306662860,
      "stop" : 1640306662860,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_transferFrom"
  }, {
    "name" : "host",
    "value" : "fv-az83-57"
  }, {
    "name" : "thread",
    "value" : "3641-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_transferFrom"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 31,
        "skipped" : 0,
        "passed" : 97,
        "unknown" : 0,
        "total" : 128
      },
      "items" : [ {
        "uid" : "2d2a63e80966ef4c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/325//#testresult/2d2a63e80966ef4c",
        "status" : "passed",
        "time" : {
          "start" : 1640285246615,
          "stop" : 1640285250818,
          "duration" : 4203
        }
      }, {
        "uid" : "8d209e9c286245fb",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/323//#testresult/8d209e9c286245fb",
        "status" : "broken",
        "statusDetails" : "ValueError: HTTPConnectionPool(host='10.2.0.2', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f17afd9cb80>: Failed to establish a new connection: [Errno 99] Cannot assign requested address'))",
        "time" : {
          "start" : 1640281194671,
          "stop" : 1640281194671,
          "duration" : 0
        }
      }, {
        "uid" : "ccf294f46f981691",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/301//#testresult/ccf294f46f981691",
        "status" : "passed",
        "time" : {
          "start" : 1640229251569,
          "stop" : 1640229256407,
          "duration" : 4838
        }
      }, {
        "uid" : "6cf13bd833b46f10",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/300//#testresult/6cf13bd833b46f10",
        "status" : "passed",
        "time" : {
          "start" : 1640219628370,
          "stop" : 1640219633473,
          "duration" : 5103
        }
      }, {
        "uid" : "80de219edf9b1db1",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/285//#testresult/80de219edf9b1db1",
        "status" : "passed",
        "time" : {
          "start" : 1640153723651,
          "stop" : 1640153728972,
          "duration" : 5321
        }
      }, {
        "uid" : "b236f7d8e2c3bb77",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/284//#testresult/b236f7d8e2c3bb77",
        "status" : "passed",
        "time" : {
          "start" : 1640142886069,
          "stop" : 1640142891862,
          "duration" : 5793
        }
      }, {
        "uid" : "c940ddc1443df6c6",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/283//#testresult/c940ddc1443df6c6",
        "status" : "passed",
        "time" : {
          "start" : 1640133333000,
          "stop" : 1640133338154,
          "duration" : 5154
        }
      }, {
        "uid" : "612d7474b1a8e2ce",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/279//#testresult/612d7474b1a8e2ce",
        "status" : "passed",
        "time" : {
          "start" : 1640056496412,
          "stop" : 1640056501512,
          "duration" : 5100
        }
      }, {
        "uid" : "ce8406787a61c58c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/278//#testresult/ce8406787a61c58c",
        "status" : "passed",
        "time" : {
          "start" : 1640046954990,
          "stop" : 1640046960954,
          "duration" : 5964
        }
      }, {
        "uid" : "eab4464fe37a818f",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/272//#testresult/eab4464fe37a818f",
        "status" : "passed",
        "time" : {
          "start" : 1639988683436,
          "stop" : 1639988689166,
          "duration" : 5730
        }
      }, {
        "uid" : "76e71301db679926",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/271//#testresult/76e71301db679926",
        "status" : "passed",
        "time" : {
          "start" : 1639970067238,
          "stop" : 1639970071377,
          "duration" : 4139
        }
      }, {
        "uid" : "fab8b8573c3f588e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/270//#testresult/fab8b8573c3f588e",
        "status" : "passed",
        "time" : {
          "start" : 1639960464449,
          "stop" : 1639960467347,
          "duration" : 2898
        }
      }, {
        "uid" : "272e4e91c084aeb0",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/267//#testresult/272e4e91c084aeb0",
        "status" : "passed",
        "time" : {
          "start" : 1639910714348,
          "stop" : 1639910718986,
          "duration" : 4638
        }
      }, {
        "uid" : "67ea14dc2482598d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/263//#testresult/67ea14dc2482598d",
        "status" : "passed",
        "time" : {
          "start" : 1639883676970,
          "stop" : 1639883683573,
          "duration" : 6603
        }
      }, {
        "uid" : "ffc14803a7064abb",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/262//#testresult/ffc14803a7064abb",
        "status" : "passed",
        "time" : {
          "start" : 1639874146157,
          "stop" : 1639874153370,
          "duration" : 7213
        }
      }, {
        "uid" : "a0008ae13fac5324",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/259//#testresult/a0008ae13fac5324",
        "status" : "passed",
        "time" : {
          "start" : 1639797326547,
          "stop" : 1639797331883,
          "duration" : 5336
        }
      }, {
        "uid" : "3de05dc42282e78",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/258//#testresult/3de05dc42282e78",
        "status" : "passed",
        "time" : {
          "start" : 1639787686657,
          "stop" : 1639787694079,
          "duration" : 7422
        }
      }, {
        "uid" : "b29b7aaa20ef1e25",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/255//#testresult/b29b7aaa20ef1e25",
        "status" : "broken",
        "statusDetails" : "brownie.exceptions.TransactionError: Tx dropped without known replacement: 0x8e8a842dea7af8d5061d29cf4fbdbfebf32a930c1bdb66462fb778457905aab5",
        "time" : {
          "start" : 1639739189762,
          "stop" : 1639739197010,
          "duration" : 7248
        }
      }, {
        "uid" : "b24bdee72d5996b1",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/253//#testresult/b24bdee72d5996b1",
        "status" : "broken",
        "statusDetails" : "brownie.exceptions.TransactionError: Tx dropped without known replacement: 0xbe88df5a1c9961aeeeb7e242fa0229e7df7d6a03cdc7b57c3f46d01185f3323e",
        "time" : {
          "start" : 1639724822251,
          "stop" : 1639724822251,
          "duration" : 0
        }
      }, {
        "uid" : "1dde38e05fcedbc8",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/251//#testresult/1dde38e05fcedbc8",
        "status" : "passed",
        "time" : {
          "start" : 1639710874526,
          "stop" : 1639710880529,
          "duration" : 6003
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "40739564b91f1355.json",
  "parameterValues" : [ ]
}