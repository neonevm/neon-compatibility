{
  "uid" : "b51deae6a7c7c74c",
  "name" : "test_transfer_full_balance",
  "fullName" : "tests.brownie.token.tests.test_transferFrom#test_transfer_full_balance",
  "historyId" : "03b73bec7c61d3e2f3dd72c77a034146",
  "time" : {
    "start" : 1640306387459,
    "stop" : 1640306388257,
    "duration" : 798
  },
  "status" : "broken",
  "statusMessage" : "requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://proxy.teststand2.neontest.xyz/solana",
  "statusTrace" : "accounts = <brownie.network.account.Accounts object at 0x7f7f5f54c1c0>\ntoken = <Token Contract '0x968701E85bd02305064A304629C98ab9CBf06F49'>\n\n    def test_transfer_full_balance(accounts, token):\n>       amount = token.balanceOf(accounts[0])\n\ntests/brownie/token/tests/test_transferFrom.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1729: in __call__\n    return self.call(*args, block_identifier=block_identifier)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1531: in call\n    data = web3.eth.call({k: v for k, v in tx.items() if v}, block_identifier)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/module.py:57: in caller\n    result = w3.manager.request_blocking(method_str,\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/manager.py:186: in request_blocking\n    response = self._make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/manager.py:147: in _make_request\n    return request_func(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:76: in apply_formatters\n    response = make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/gas_price_strategy.py:90: in middleware\n    return make_request(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:74: in apply_formatters\n    response = make_request(method, formatted_params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/attrdict.py:33: in middleware\n    response = make_request(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:74: in apply_formatters\n    response = make_request(method, formatted_params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:74: in apply_formatters\n    response = make_request(method, formatted_params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:74: in apply_formatters\n    response = make_request(method, formatted_params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/buffered_gas_estimate.py:40: in middleware\n    return make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/middlewares/catch_tx_revert.py:24: in process_request\n    result = make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/exception_retry_request.py:105: in middleware\n    return make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/providers/rpc.py:88: in make_request\n    raw_response = make_post_request(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/_utils/request.py:49: in make_post_request\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = ''\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode('utf-8')\n            except UnicodeDecodeError:\n                reason = self.reason.decode('iso-8859-1')\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = u'%s Client Error: %s for url: %s' % (self.status_code, reason, self.url)\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = u'%s Server Error: %s for url: %s' % (self.status_code, reason, self.url)\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://proxy.teststand2.neontest.xyz/solana\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/requests/models.py:953: HTTPError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : true,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1640305908372,
      "stop" : 1640305908372,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1640305910129,
      "stop" : 1640305923264,
      "duration" : 13135
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1640305957574,
      "stop" : 1640305957834,
      "duration" : 260
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1640305957574,
      "stop" : 1640305957574,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1640306283641,
      "stop" : 1640306286826,
      "duration" : 3185
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1640306662860,
      "stop" : 1640306662860,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_transferFrom"
  }, {
    "name" : "host",
    "value" : "fv-az83-57"
  }, {
    "name" : "thread",
    "value" : "3641-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_transferFrom"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 33,
        "skipped" : 0,
        "passed" : 95,
        "unknown" : 0,
        "total" : 128
      },
      "items" : [ {
        "uid" : "53c48d83a92ff9d4",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/325//#testresult/53c48d83a92ff9d4",
        "status" : "passed",
        "time" : {
          "start" : 1640285324235,
          "stop" : 1640285328658,
          "duration" : 4423
        }
      }, {
        "uid" : "2d79223080009439",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/323//#testresult/2d79223080009439",
        "status" : "broken",
        "statusDetails" : "ValueError: HTTPConnectionPool(host='10.2.0.2', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f17afd9cb80>: Failed to establish a new connection: [Errno 99] Cannot assign requested address'))",
        "time" : {
          "start" : 1640281195047,
          "stop" : 1640281195047,
          "duration" : 0
        }
      }, {
        "uid" : "eb96c345e49c00a8",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/301//#testresult/eb96c345e49c00a8",
        "status" : "passed",
        "time" : {
          "start" : 1640229278739,
          "stop" : 1640229283351,
          "duration" : 4612
        }
      }, {
        "uid" : "7df76c3f7d666bb5",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/300//#testresult/7df76c3f7d666bb5",
        "status" : "passed",
        "time" : {
          "start" : 1640219653757,
          "stop" : 1640219658534,
          "duration" : 4777
        }
      }, {
        "uid" : "b1b8f974b2ad474c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/285//#testresult/b1b8f974b2ad474c",
        "status" : "passed",
        "time" : {
          "start" : 1640153751940,
          "stop" : 1640153757045,
          "duration" : 5105
        }
      }, {
        "uid" : "383354f3b4b5e335",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/284//#testresult/383354f3b4b5e335",
        "status" : "passed",
        "time" : {
          "start" : 1640142913840,
          "stop" : 1640142920430,
          "duration" : 6590
        }
      }, {
        "uid" : "8c7ff1e3d7dfa144",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/283//#testresult/8c7ff1e3d7dfa144",
        "status" : "passed",
        "time" : {
          "start" : 1640133361279,
          "stop" : 1640133366603,
          "duration" : 5324
        }
      }, {
        "uid" : "40831bc1c10ecc77",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/279//#testresult/40831bc1c10ecc77",
        "status" : "passed",
        "time" : {
          "start" : 1640056527835,
          "stop" : 1640056534125,
          "duration" : 6290
        }
      }, {
        "uid" : "8c1dd7c03fea75f8",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/278//#testresult/8c1dd7c03fea75f8",
        "status" : "passed",
        "time" : {
          "start" : 1640046989166,
          "stop" : 1640046996974,
          "duration" : 7808
        }
      }, {
        "uid" : "2d7dea30b675dbe4",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/272//#testresult/2d7dea30b675dbe4",
        "status" : "passed",
        "time" : {
          "start" : 1639988723180,
          "stop" : 1639988728780,
          "duration" : 5600
        }
      }, {
        "uid" : "8dd844801137ff53",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/271//#testresult/8dd844801137ff53",
        "status" : "passed",
        "time" : {
          "start" : 1639970088992,
          "stop" : 1639970094389,
          "duration" : 5397
        }
      }, {
        "uid" : "e21e42eebdbc1824",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/270//#testresult/e21e42eebdbc1824",
        "status" : "passed",
        "time" : {
          "start" : 1639960482869,
          "stop" : 1639960486031,
          "duration" : 3162
        }
      }, {
        "uid" : "f24dfff37ce56e83",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/267//#testresult/f24dfff37ce56e83",
        "status" : "passed",
        "time" : {
          "start" : 1639910741874,
          "stop" : 1639910747041,
          "duration" : 5167
        }
      }, {
        "uid" : "2cdf30977c615adb",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/263//#testresult/2cdf30977c615adb",
        "status" : "passed",
        "time" : {
          "start" : 1639883711083,
          "stop" : 1639883716973,
          "duration" : 5890
        }
      }, {
        "uid" : "843e83ba5ee6bf1e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/262//#testresult/843e83ba5ee6bf1e",
        "status" : "passed",
        "time" : {
          "start" : 1639874182948,
          "stop" : 1639874190336,
          "duration" : 7388
        }
      }, {
        "uid" : "15296d08fdbf382c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/259//#testresult/15296d08fdbf382c",
        "status" : "passed",
        "time" : {
          "start" : 1639797357684,
          "stop" : 1639797365115,
          "duration" : 7431
        }
      }, {
        "uid" : "27b5d36809c5ca3d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/258//#testresult/27b5d36809c5ca3d",
        "status" : "passed",
        "time" : {
          "start" : 1639787722190,
          "stop" : 1639787730563,
          "duration" : 8373
        }
      }, {
        "uid" : "2c019329583351a3",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/255//#testresult/2c019329583351a3",
        "status" : "broken",
        "statusDetails" : "brownie.exceptions.TransactionError: Tx dropped without known replacement: 0x0992968a76b80a803058357a0fe74c7bdc60c1426acbf407c07315f2ec3030f8",
        "time" : {
          "start" : 1639739220983,
          "stop" : 1639739233701,
          "duration" : 12718
        }
      }, {
        "uid" : "cfd63b127b3c97ec",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/253//#testresult/cfd63b127b3c97ec",
        "status" : "broken",
        "statusDetails" : "brownie.exceptions.TransactionError: Tx dropped without known replacement: 0xbe88df5a1c9961aeeeb7e242fa0229e7df7d6a03cdc7b57c3f46d01185f3323e",
        "time" : {
          "start" : 1639724822683,
          "stop" : 1639724822683,
          "duration" : 0
        }
      }, {
        "uid" : "cc067db2f3319626",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/251//#testresult/cc067db2f3319626",
        "status" : "passed",
        "time" : {
          "start" : 1639710920353,
          "stop" : 1639710928582,
          "duration" : 8229
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "b51deae6a7c7c74c.json",
  "parameterValues" : [ ]
}