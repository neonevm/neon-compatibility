name: Python 3.8, Node.js 16, .NET 5.0, allure

on:
  push:
  workflow_dispatch:
    inputs:
      tags:
        description: 'Test scenario tags'
        required: false
      network:
        description: 'Network (devnet, testnet, internal.testnet, neonswap.live, aws, ropsten, rinkeby)'
        required: true
        default: 'devnet'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

  python:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/allure-prep
    - uses: ./.github/actions/switch-network
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        npm i
        # python -m pip install --upgrade pip
        pip install pipenv
        pipenv sync
        # pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pipenv run flake8 ./src
        pipenv run flake8 ./tests
    - name: Test with pytest
      if: always()
      run: |
        pwd
        pipenv run pytest --alluredir=report/allure-results

    - name: Look at Allure
      if: always()
      uses: ./.github/actions/allure-show

    # TODO: de-duplicate
    - name: Archive Allure results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: allure-results
        path: report/allure-results

  node-contracts:
    runs-on: macos-11
    timeout-minutes: 35
    needs: build
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/allure-prep
    - uses: ./.github/actions/switch-network
    - name: Use Node.js 16
      uses: actions/setup-node@v2
      if: always()
      with:
        node-version: 16.x
    - run: npm ci
    - run: npm run build --if-present
    - name: OpenZeppelin contracts
      timeout-minutes: 30
      run: |
        cd openzeppelin-contracts
        echo "folder:"
        pwd
        echo "folder content:"
        ls -la
        echo "============================================================================================="
        echo "====================================== single tests ========================================="
        echo "============================================================================================="
        chmod 555 run_tests.sh
        ./run_tests.sh
        # echo "============================================================================================="
        # echo "======================================== all tests =========================================="
        # echo "============================================================================================="
        # ../node_modules/.bin/truffle --network neonlabs test
        # echo "============================================================================================="
        # echo "============================================================================================="
        cd ..

    # TODO: de-duplicate
    - name: Archive Allure results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: allure-results
        path: report/allure-results

    # TODO: de-duplicate
    - name: Archive Allure results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: allure-results
        path: openzeppelin-contracts/allure-results
    # TODO: de-duplicate
    - name: Archive Allure results 2
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: allure-results
        path: openzeppelin-contracts/report/allure-results

  node:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/allure-prep
    - uses: ./.github/actions/switch-network
    - name: Use Node.js 16
      uses: actions/setup-node@v2
      if: always()
      with:
        node-version: 16.x
    - run: npm ci
    - run: npm run build --if-present
    - name: Mocha tests
      run: |
        npm run test
    - name: Look at Allure
      if: always()
      uses: ./.github/actions/allure-show

    # TODO: de-duplicate
    - name: Archive Allure results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: allure-results
        path: report/allure-results

  jdk:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/allure-prep
    - uses: ./.github/actions/switch-network
    - name: Set up JDK 16
      uses: actions/setup-java@v2
      if: always()
      with:
        java-version: '16'
        distribution: 'adopt'
    - name: Run check style
      uses: nikitasavinov/checkstyle-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        reporter: 'github-pr-check'
        tool_name: 'testtool'
    - name: Gradle wrapper
      if: always()
      run: gradle wrapper --gradle-version 7.2
    - name: Print Gradle version
      if: always()
      run: gradle --version
    - name: Grant execute permission for gradlew
      if: always()
      run: chmod +x gradlew
    - name: Test
      if: always()
      run: ./gradlew build --warning-mode all
    - name: Look at Allure
      if: always()
      uses: ./.github/actions/allure-show

    # TODO: de-duplicate
    - name: Archive Allure results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: allure-results
        path: report/allure-results

  dotnet:
    runs-on: ubuntu-latest
    needs:
      - build
      # - dotnet-format
    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/allure-prep
    - uses: ./.github/actions/switch-network
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      if: always()
      with:
        dotnet-version: 5.0.x
    - name: Print dotnet version
      if: always()
      run: dotnet --version
    - name: Restore dependencies
      if: always()
      run: dotnet restore
    # - name: dotnet - format check
    #   if: always()
    #   run: |
    #     run: dotnet tool update -g dotnet-format
    #     dotnet-format --check
    - name: Build
      if: always()
      run: dotnet build --no-restore
    - name: Test
      if: always()
      run: dotnet test --no-build --verbosity normal
    - name: Move report/*.json to report/allure-results/*.json
      if: always()
      run: mv ./report/*.json ./report/allure-results/
    - name: Look at Allure
      if: always()
      uses: ./.github/actions/allure-show

    # TODO: de-duplicate
    - name: Archive Allure results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: allure-results
        path: report/allure-results

  allure:
    runs-on: ubuntu-latest
    if: always()
    needs:
      - build
      - node-contracts
      - python
      - node
      - jdk
      - dotnet
    steps:

    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v2

    - name: Get Allure history
      uses: actions/checkout@v2
      if: always()
      continue-on-error: true
      with:
        ref: gh-pages
        path: gh-pages

    - name: Allure Report with history
      uses: simple-elf/allure-report-action@v1.5
      if: always()

    - name: Allure Report action from marketplace
      uses: simple-elf/allure-report-action@master
      if: always()
      with:
        allure_results: allure-results
        gh_pages: gh-pages
        allure_report: allure-report
        allure_history: allure-history
        keep_reports: 50

    - name: Deploy report to Github Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v2
      env:
        PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: allure-history
