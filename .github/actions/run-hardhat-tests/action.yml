name: Run Hardhat tests
description: Run all the tests from a subfolder of the test folder
inputs:
  folder-name:
    description: name of subfolder
    required: true
    default: ''
  jobsNumber:
    description: number of jobs runnign in parallel
    required: true
    default: '8'
runs:
  using: "composite"
  steps:
    - name: Display input parameters
      run: |
        echo "subfolder name = ${{ inputs.folder-name }}"
        echo "jobs number = ${{ inputs.jobsNumber }}"
      shell: bash
    - run: |
        cd openzeppelin-contracts
        # npx hardhat test
        # find "$(pwd)/test/${{ inputs.folder-name }}" | grep test.js | echo $_ | npx hardhat test $_
        # find "$(pwd)/test/${{ inputs.folder-name }}" | grep test.js | echo $_ | ../node_modules/.bin/hardhat test $_
        # the last working version
        # find "$(pwd)/test/${{ inputs.folder-name }}" | grep test.js | ../node_modules/.bin/hardhat test $_
        JOBS_NUMBER=${{ inputs.jobsNumber }}
        find "test/${{ inputs.folder-name }}" -name '*.js' | parallel --jobs $JOBS_NUMBER npx hardhat test {}

        #echo "echo \"\$(solcjs --version)\"" > 1.sh
        #echo "npx hardhat test \$1" >> 1.sh
        #chmod 555 1.sh
        #cat 1.sh

        echo "Running...."
        echo "find "test/${{ inputs.folder-name }}" -name '*.js' | parallel --jobs $JOBS_NUMBER ./1.sh {}"
        # ls /Users/runner/Library/Caches/hardhat-nodejs/compilers/macosx-amd64
        # ls /Users/runner/Library/Caches/hardhat-nodejs/compilers
        #ls -R /Users/runner/Library/Caches/hardhat-nodejs

        #find "test/${{ inputs.folder-name }}" -name '*.js' | parallel --jobs $JOBS_NUMBER ./1.sh {}
        echo "============================================================================================="
        echo "====================================== test results ========================================="
        echo "============================================================================================="
        echo "$ pwd"
        pwd
        echo "$ ls allure-results"
        ls allure-results
      shell: bash
