{
  "uid" : "d719c862bb635ced",
  "name" : "test_insufficient_balance",
  "fullName" : "tests.brownie.token.tests.test_transfer#test_insufficient_balance",
  "historyId" : "02f6dcce7a5f38efb9b84065f779b5a9",
  "time" : {
    "start" : 1643301893313,
    "stop" : 1643301893691,
    "duration" : 378
  },
  "status" : "broken",
  "statusMessage" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
  "statusTrace" : "accounts = <brownie.network.account.Accounts object at 0x7ff6cbdcb0d0>\ntoken = <Token Contract '0x1797BB8a0935Fd2837BEc0565f815C9C132f8F1A'>\n\n    def test_insufficient_balance(accounts, token):\n        balance = token.balanceOf(accounts[0])\n    \n        with brownie.reverts():\n>           token.transfer(accounts[1], balance + 1, {'from': accounts[0]})\n\ntests/brownie/token/tests/test_transfer.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/brownie/token/tests/test_transfer.py:72: in test_insufficient_balance\n    token.transfer(accounts[1], balance + 1, {'from': accounts[0]})\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1693: in __call__\n    return self.transact(*args)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1566: in transact\n    return tx[\"from\"].transfer(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:642: in transfer\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:725: in _make_transaction\n    raise VirtualMachineError(e) from None\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError(\"Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\"))\nexc = \"Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\"\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.message: str = exc[\"message\"].rstrip(\".\")\n    \n            if isinstance(exc[\"data\"], str):\n                # handle parity exceptions - this logic probably is not perfect\n                if \"0x08c379a0\" in exc[\"data\"]:\n                    revert_type, err_msg = [i.strip() for i in exc[\"data\"].split(\"0x08c379a0\", 1)]\n                    err_msg = eth_abi.decode_abi([\"string\"], HexBytes(err_msg))\n                    err_msg = f\"{revert_type} '{err_msg}'\"\n                elif exc[\"data\"].endswith(\"0x\"):\n                    err_msg = exc[\"data\"][:-2].strip()\n                else:\n                    err_msg = exc[\"data\"]\n                raise ValueError(f\"{self.message}: {err_msg}\") from None\n    \n            try:\n                txid, data = next((k, v) for k, v in exc[\"data\"].items() if k.startswith(\"0x\"))\n            except StopIteration:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.txid: str = txid\n            self.source: str = \"\"\n            self.revert_type: str = data[\"error\"]\n            self.pc: Optional[str] = data.get(\"program_counter\")\n            if self.pc and self.revert_type == \"revert\":\n                self.pc -= 1\n    \n            self.revert_msg: Optional[str] = data.get(\"reason\")\n            self.dev_revert_msg = brownie.project.build._get_dev_revert(self.pc)\n            if self.revert_msg is None and self.revert_type in (\"revert\", \"invalid opcode\"):\n                self.revert_msg = self.dev_revert_msg\n            elif self.revert_msg == \"Failed assertion\":\n                self.revert_msg = self.dev_revert_msg or self.revert_msg\n    \n        else:\n>           raise ValueError(str(exc)) from None\nE           ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:121: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1643301843809,
      "stop" : 1643301843810,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1643301844789,
      "stop" : 1643301860824,
      "duration" : 16035
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1643301863064,
      "stop" : 1643301863336,
      "duration" : 272
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1643301863064,
      "stop" : 1643301863064,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1643301879211,
      "stop" : 1643301881223,
      "duration" : 2012
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1643302085705,
      "stop" : 1643302085705,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_transfer"
  }, {
    "name" : "host",
    "value" : "fv-az39-998"
  }, {
    "name" : "thread",
    "value" : "3684-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_transfer"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 133,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 133
      },
      "items" : [ {
        "uid" : "b9a62d05f8420925",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/553//#testresult/b9a62d05f8420925",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1643295754603,
          "stop" : 1643295755165,
          "duration" : 562
        }
      }, {
        "uid" : "3dd83500d1c88143",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/552//#testresult/3dd83500d1c88143",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1643290899351,
          "stop" : 1643290899918,
          "duration" : 567
        }
      }, {
        "uid" : "e72887af347e917b",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/551//#testresult/e72887af347e917b",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1643287180415,
          "stop" : 1643287180779,
          "duration" : 364
        }
      }, {
        "uid" : "1d09306e83509c70",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/550//#testresult/1d09306e83509c70",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1643274644675,
          "stop" : 1643274645220,
          "duration" : 545
        }
      }, {
        "uid" : "a28573ee6e6c79fd",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/549//#testresult/a28573ee6e6c79fd",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: http://proxy.night.stand.neontest.xyz/solana",
        "time" : {
          "start" : 1643263614252,
          "stop" : 1643263614252,
          "duration" : 0
        }
      }, {
        "uid" : "b027f03b418922fd",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/548//#testresult/b027f03b418922fd",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: http://proxy.night.stand.neontest.xyz/solana",
        "time" : {
          "start" : 1643253719773,
          "stop" : 1643253719773,
          "duration" : 0
        }
      }, {
        "uid" : "ffd0989781c70449",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/547//#testresult/ffd0989781c70449",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ReadTimeout: HTTPConnectionPool(host='proxy.night.stand.neontest.xyz', port=80): Read timed out. (read timeout=30)",
        "time" : {
          "start" : 1643252813768,
          "stop" : 1643252813768,
          "duration" : 0
        }
      }, {
        "uid" : "a620859d45c35aeb",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/546//#testresult/a620859d45c35aeb",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1643243882695,
          "stop" : 1643243883103,
          "duration" : 408
        }
      }, {
        "uid" : "960a3712e3e404d0",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/544//#testresult/960a3712e3e404d0",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ReadTimeout: HTTPConnectionPool(host='proxy.night.stand.neontest.xyz', port=80): Read timed out. (read timeout=30)",
        "time" : {
          "start" : 1643200180244,
          "stop" : 1643200180244,
          "duration" : 0
        }
      }, {
        "uid" : "15e1846a29d14aee",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/542//#testresult/15e1846a29d14aee",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ReadTimeout: HTTPConnectionPool(host='proxy.night.stand.neontest.xyz', port=80): Read timed out. (read timeout=30)",
        "time" : {
          "start" : 1643198446695,
          "stop" : 1643198446695,
          "duration" : 0
        }
      }, {
        "uid" : "373af77567095e08",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/541//#testresult/373af77567095e08",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ReadTimeout: HTTPConnectionPool(host='proxy.night.stand.neontest.xyz', port=80): Read timed out. (read timeout=30)",
        "time" : {
          "start" : 1643190792347,
          "stop" : 1643190792347,
          "duration" : 0
        }
      }, {
        "uid" : "14b286041cfd39dc",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/530//#testresult/14b286041cfd39dc",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642776721962,
          "stop" : 1642776722566,
          "duration" : 604
        }
      }, {
        "uid" : "8ee2e89710d2882e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/529//#testresult/8ee2e89710d2882e",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642772155728,
          "stop" : 1642772156265,
          "duration" : 537
        }
      }, {
        "uid" : "5c752a25d1bda255",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/528//#testresult/5c752a25d1bda255",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642758218701,
          "stop" : 1642758219401,
          "duration" : 700
        }
      }, {
        "uid" : "a99b82dbce9d0422",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/526//#testresult/a99b82dbce9d0422",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642725119001,
          "stop" : 1642725119579,
          "duration" : 578
        }
      }, {
        "uid" : "2532f7fabd21d9a0",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/524//#testresult/2532f7fabd21d9a0",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642648329799,
          "stop" : 1642648330292,
          "duration" : 493
        }
      }, {
        "uid" : "66e583d35175d5e8",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/523//#testresult/66e583d35175d5e8",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642638989716,
          "stop" : 1642638990227,
          "duration" : 511
        }
      }, {
        "uid" : "a15a9d20cf5b0d81",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/522//#testresult/a15a9d20cf5b0d81",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642561980670,
          "stop" : 1642561981208,
          "duration" : 538
        }
      }, {
        "uid" : "3761246152fd04ff",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/521//#testresult/3761246152fd04ff",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642552254434,
          "stop" : 1642552254954,
          "duration" : 520
        }
      }, {
        "uid" : "ec7e96d5de9be301",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/520//#testresult/ec7e96d5de9be301",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642511188969,
          "stop" : 1642511189327,
          "duration" : 358
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "d719c862bb635ced.json",
  "parameterValues" : [ ]
}