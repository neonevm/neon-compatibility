{
  "contractName": "IERC1363Spender",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onApprovalReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onApprovalReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onApprovalReceived(address,uint256,bytes)\":{\"details\":\"Any ERC1363 smart contract calls this function on the recipient after an `approve`. This function MAY throw to revert and reject the approval. Return of other than the magic value MUST result in the transaction being reverted. Note: the token contract address is always the message sender.\",\"params\":{\"data\":\"bytes Additional data with no specified format\",\"owner\":\"address The address which called `approveAndCall` function\",\"value\":\"uint256 The amount of tokens to be spent\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onApprovalReceived(address,uint256,bytes)\\\"))`  unless throwing\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"onApprovalReceived(address,uint256,bytes)\":{\"notice\":\"Handle the approval of ERC1363 tokens\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/interfaces/IERC1363Spender.sol\":\"IERC1363Spender\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/interfaces/IERC1363Spender.sol\":{\"keccak256\":\"0xb5e4b08f5eda7dd6eff9e7c5d2d25cd5470a7b58df4a76a31fddc41c6a4bae40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f35403a8d4994c2c580798b232647895e45fdfdf8246809c1829516d6b2a62d3\",\"dweb:/ipfs/QmfKgioXETFd3jTe7zLJ7zBNXg5aY4zKMDjk7JgNrqd9vJ\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ninterface IERC1363Spender {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0x7b04a2d0.\n     * 0x7b04a2d0 === bytes4(keccak256(\"onApprovalReceived(address,uint256,bytes)\"))\n     */\n\n    /**\n     * @notice Handle the approval of ERC1363 tokens\n     * @dev Any ERC1363 smart contract calls this function on the recipient\n     * after an `approve`. This function MAY throw to revert and reject the\n     * approval. Return of other than the magic value MUST result in the\n     * transaction being reverted.\n     * Note: the token contract address is always the message sender.\n     * @param owner address The address which called `approveAndCall` function\n     * @param value uint256 The amount of tokens to be spent\n     * @param data bytes Additional data with no specified format\n     * @return `bytes4(keccak256(\"onApprovalReceived(address,uint256,bytes)\"))`\n     *  unless throwing\n     */\n    function onApprovalReceived(\n        address owner,\n        uint256 value,\n        bytes memory data\n    ) external returns (bytes4);\n}\n",
  "sourcePath": "/Users/alexanderpetrovskiy/work/neon/neon-uat/openzeppelin-contracts/contracts/interfaces/IERC1363Spender.sol",
  "ast": {
    "absolutePath": "project:/contracts/interfaces/IERC1363Spender.sol",
    "exportedSymbols": {
      "IERC1363Spender": [
        5366
      ]
    },
    "id": 5367,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5353,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:26"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 5366,
        "linearizedBaseContracts": [
          5366
        ],
        "name": "IERC1363Spender",
        "nameLocation": "68:15:26",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 5354,
              "nodeType": "StructuredDocumentation",
              "src": "261:704:26",
              "text": " @notice Handle the approval of ERC1363 tokens\n @dev Any ERC1363 smart contract calls this function on the recipient\n after an `approve`. This function MAY throw to revert and reject the\n approval. Return of other than the magic value MUST result in the\n transaction being reverted.\n Note: the token contract address is always the message sender.\n @param owner address The address which called `approveAndCall` function\n @param value uint256 The amount of tokens to be spent\n @param data bytes Additional data with no specified format\n @return `bytes4(keccak256(\"onApprovalReceived(address,uint256,bytes)\"))`\n  unless throwing"
            },
            "functionSelector": "7b04a2d0",
            "id": 5365,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onApprovalReceived",
            "nameLocation": "979:18:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5356,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1015:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5365,
                  "src": "1007:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1007:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5358,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1038:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5365,
                  "src": "1030:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5360,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1066:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5365,
                  "src": "1053:17:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5359,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1053:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "997:79:26"
            },
            "returnParameters": {
              "id": 5364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5363,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5365,
                  "src": "1095:6:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5362,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1095:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1094:8:26"
            },
            "scope": 5366,
            "src": "970:133:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 5367,
        "src": "58:1047:26",
        "usedErrors": []
      }
    ],
    "src": "33:1073:26"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/interfaces/IERC1363Spender.sol",
    "exportedSymbols": {
      "IERC1363Spender": [
        5366
      ]
    },
    "id": 5367,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5353,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:26"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 5366,
        "linearizedBaseContracts": [
          5366
        ],
        "name": "IERC1363Spender",
        "nameLocation": "68:15:26",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 5354,
              "nodeType": "StructuredDocumentation",
              "src": "261:704:26",
              "text": " @notice Handle the approval of ERC1363 tokens\n @dev Any ERC1363 smart contract calls this function on the recipient\n after an `approve`. This function MAY throw to revert and reject the\n approval. Return of other than the magic value MUST result in the\n transaction being reverted.\n Note: the token contract address is always the message sender.\n @param owner address The address which called `approveAndCall` function\n @param value uint256 The amount of tokens to be spent\n @param data bytes Additional data with no specified format\n @return `bytes4(keccak256(\"onApprovalReceived(address,uint256,bytes)\"))`\n  unless throwing"
            },
            "functionSelector": "7b04a2d0",
            "id": 5365,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onApprovalReceived",
            "nameLocation": "979:18:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5356,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1015:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5365,
                  "src": "1007:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1007:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5358,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1038:5:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5365,
                  "src": "1030:13:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5360,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1066:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5365,
                  "src": "1053:17:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5359,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1053:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "997:79:26"
            },
            "returnParameters": {
              "id": 5364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5363,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5365,
                  "src": "1095:6:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5362,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1095:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1094:8:26"
            },
            "scope": 5366,
            "src": "970:133:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 5367,
        "src": "58:1047:26",
        "usedErrors": []
      }
    ],
    "src": "33:1073:26"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-10-12T07:13:47.213Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "onApprovalReceived(address,uint256,bytes)": {
        "details": "Any ERC1363 smart contract calls this function on the recipient after an `approve`. This function MAY throw to revert and reject the approval. Return of other than the magic value MUST result in the transaction being reverted. Note: the token contract address is always the message sender.",
        "params": {
          "data": "bytes Additional data with no specified format",
          "owner": "address The address which called `approveAndCall` function",
          "value": "uint256 The amount of tokens to be spent"
        },
        "returns": {
          "_0": "`bytes4(keccak256(\"onApprovalReceived(address,uint256,bytes)\"))`  unless throwing"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "onApprovalReceived(address,uint256,bytes)": {
        "notice": "Handle the approval of ERC1363 tokens"
      }
    },
    "version": 1
  }
}