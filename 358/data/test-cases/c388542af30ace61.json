{
  "uid" : "c388542af30ace61",
  "name" : "test_transfer_event_fires",
  "fullName" : "tests.brownie.token.tests.test_transferFrom#test_transfer_event_fires",
  "historyId" : "928ffb81b12f37ad66f1eb91299aed9a",
  "time" : {
    "start" : 1640560324959,
    "stop" : 1640560328540,
    "duration" : 3581
  },
  "status" : "broken",
  "statusMessage" : "ValueError: Execution reverted during call: 'Command '['neon-cli', '--commitment=recent', '--url', 'http://10.2.0.2:8899', '--evm_loader=53DfF883gyixYNXnM7s5xhdeyV8mVk9T4i2hGV9vG9io', '-vvv', 'emulate', '--token_mint', 'HPsV9Deocecw3GeZv1FkAPNCBRfuVyfw9MMwjwRe1xaU', '0xE10D193E09231581460b88c7342778bBdc310a71', '0xCEA467516065dD2e4D7Bc235598C18FD7a33C59c', '0x23b872dd0000000000000000000000009d7642fcb9506328f6fe0ffd7c14b9a408a301740000000000000000000000002444d4a47c28bb3740e8a5b3bcd761f499484a250000000000000000000000000000000000000000000000000000000000000000', '']' returned non-zero exit status 101.'. This transaction will likely revert. If you wish to broadcast, include `allow_revert:True` as a transaction parameter.",
  "statusTrace" : "accounts = <brownie.network.account.Accounts object at 0x7ff9f12b7070>\ntoken = <Token Contract '0xCEA467516065dD2e4D7Bc235598C18FD7a33C59c'>\n\n    def test_transfer_event_fires(accounts, token):\n        amount = token.balanceOf(accounts[0])\n    \n        token.approve(accounts[1], amount, {'from': accounts[0]})\n>       tx = token.transferFrom(accounts[0], accounts[2], amount, {'from': accounts[1]})\n\ntests/brownie/token/tests/test_transferFrom.py:161: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1693: in __call__\n    return self.transact(*args)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1566: in transact\n    return tx[\"from\"].transfer(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:642: in transfer\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:743: in _make_transaction\n    exc = VirtualMachineError(e)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError(\"Execution reverted during call: 'Command '['neon-cli', '--commitment=recent', '--url',...is transaction will likely revert. If you wish to broadcast, include `allow_revert:True` as a transaction parameter.\"))\nexc = \"Execution reverted during call: 'Command '['neon-cli', '--commitment=recent', '--url', 'http://10.2.0.2:8899', '--evm...This transaction will likely revert. If you wish to broadcast, include `allow_revert:True` as a transaction parameter.\"\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.message: str = exc[\"message\"].rstrip(\".\")\n    \n            if isinstance(exc[\"data\"], str):\n                # handle parity exceptions - this logic probably is not perfect\n                if \"0x08c379a0\" in exc[\"data\"]:\n                    revert_type, err_msg = [i.strip() for i in exc[\"data\"].split(\"0x08c379a0\", 1)]\n                    err_msg = eth_abi.decode_abi([\"string\"], HexBytes(err_msg))\n                    err_msg = f\"{revert_type} '{err_msg}'\"\n                elif exc[\"data\"].endswith(\"0x\"):\n                    err_msg = exc[\"data\"][:-2].strip()\n                else:\n                    err_msg = exc[\"data\"]\n                raise ValueError(f\"{self.message}: {err_msg}\") from None\n    \n            try:\n                txid, data = next((k, v) for k, v in exc[\"data\"].items() if k.startswith(\"0x\"))\n            except StopIteration:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.txid: str = txid\n            self.source: str = \"\"\n            self.revert_type: str = data[\"error\"]\n            self.pc: Optional[str] = data.get(\"program_counter\")\n            if self.pc and self.revert_type == \"revert\":\n                self.pc -= 1\n    \n            self.revert_msg: Optional[str] = data.get(\"reason\")\n            self.dev_revert_msg = brownie.project.build._get_dev_revert(self.pc)\n            if self.revert_msg is None and self.revert_type in (\"revert\", \"invalid opcode\"):\n                self.revert_msg = self.dev_revert_msg\n            elif self.revert_msg == \"Failed assertion\":\n                self.revert_msg = self.dev_revert_msg or self.revert_msg\n    \n        else:\n>           raise ValueError(str(exc)) from None\nE           ValueError: Execution reverted during call: 'Command '['neon-cli', '--commitment=recent', '--url', 'http://10.2.0.2:8899', '--evm_loader=53DfF883gyixYNXnM7s5xhdeyV8mVk9T4i2hGV9vG9io', '-vvv', 'emulate', '--token_mint', 'HPsV9Deocecw3GeZv1FkAPNCBRfuVyfw9MMwjwRe1xaU', '0xE10D193E09231581460b88c7342778bBdc310a71', '0xCEA467516065dD2e4D7Bc235598C18FD7a33C59c', '0x23b872dd0000000000000000000000009d7642fcb9506328f6fe0ffd7c14b9a408a301740000000000000000000000002444d4a47c28bb3740e8a5b3bcd761f499484a250000000000000000000000000000000000000000000000000000000000000000', '']' returned non-zero exit status 101.'. This transaction will likely revert. If you wish to broadcast, include `allow_revert:True` as a transaction parameter.\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:121: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1640560198462,
      "stop" : 1640560198462,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1640560199988,
      "stop" : 1640560216143,
      "duration" : 16155
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1640560219647,
      "stop" : 1640560219647,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1640560219647,
      "stop" : 1640560219914,
      "duration" : 267
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1640560262422,
      "stop" : 1640560265362,
      "duration" : 2940
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "ValueError: Execution reverted during call: 'Command '['neon-cli', '--commitment=recent', '--url', 'http://10.2.0.2:8899', '--evm_loader=53DfF883gyixYNXnM7s5xhdeyV8mVk9T4i2hGV9vG9io', '-vvv', 'emulate', '--token_mint', 'HPsV9Deocecw3GeZv1FkAPNCBRfuVyfw9MMwjwRe1xaU', '0xE10D193E09231581460b88c7342778bBdc310a71', '0xCEA467516065dD2e4D7Bc235598C18FD7a33C59c', '0x23b872dd0000000000000000000000009d7642fcb9506328f6fe0ffd7c14b9a408a301740000000000000000000000002444d4a47c28bb3740e8a5b3bcd761f499484a250000000000000000000000000000000000000000000000000000000000000000', '']' returned non-zero exit status 101.'. This transaction will likely revert. If you wish to broadcast, include `allow_revert:True` as a transaction parameter.",
    "statusTrace" : "accounts = <brownie.network.account.Accounts object at 0x7ff9f12b7070>\ntoken = <Token Contract '0xCEA467516065dD2e4D7Bc235598C18FD7a33C59c'>\n\n    def test_transfer_event_fires(accounts, token):\n        amount = token.balanceOf(accounts[0])\n    \n        token.approve(accounts[1], amount, {'from': accounts[0]})\n>       tx = token.transferFrom(accounts[0], accounts[2], amount, {'from': accounts[1]})\n\ntests/brownie/token/tests/test_transferFrom.py:161: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1693: in __call__\n    return self.transact(*args)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1566: in transact\n    return tx[\"from\"].transfer(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:642: in transfer\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:743: in _make_transaction\n    exc = VirtualMachineError(e)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError(\"Execution reverted during call: 'Command '['neon-cli', '--commitment=recent', '--url',...is transaction will likely revert. If you wish to broadcast, include `allow_revert:True` as a transaction parameter.\"))\nexc = \"Execution reverted during call: 'Command '['neon-cli', '--commitment=recent', '--url', 'http://10.2.0.2:8899', '--evm...This transaction will likely revert. If you wish to broadcast, include `allow_revert:True` as a transaction parameter.\"\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.message: str = exc[\"message\"].rstrip(\".\")\n    \n            if isinstance(exc[\"data\"], str):\n                # handle parity exceptions - this logic probably is not perfect\n                if \"0x08c379a0\" in exc[\"data\"]:\n                    revert_type, err_msg = [i.strip() for i in exc[\"data\"].split(\"0x08c379a0\", 1)]\n                    err_msg = eth_abi.decode_abi([\"string\"], HexBytes(err_msg))\n                    err_msg = f\"{revert_type} '{err_msg}'\"\n                elif exc[\"data\"].endswith(\"0x\"):\n                    err_msg = exc[\"data\"][:-2].strip()\n                else:\n                    err_msg = exc[\"data\"]\n                raise ValueError(f\"{self.message}: {err_msg}\") from None\n    \n            try:\n                txid, data = next((k, v) for k, v in exc[\"data\"].items() if k.startswith(\"0x\"))\n            except StopIteration:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.txid: str = txid\n            self.source: str = \"\"\n            self.revert_type: str = data[\"error\"]\n            self.pc: Optional[str] = data.get(\"program_counter\")\n            if self.pc and self.revert_type == \"revert\":\n                self.pc -= 1\n    \n            self.revert_msg: Optional[str] = data.get(\"reason\")\n            self.dev_revert_msg = brownie.project.build._get_dev_revert(self.pc)\n            if self.revert_msg is None and self.revert_type in (\"revert\", \"invalid opcode\"):\n                self.revert_msg = self.dev_revert_msg\n            elif self.revert_msg == \"Failed assertion\":\n                self.revert_msg = self.dev_revert_msg or self.revert_msg\n    \n        else:\n>           raise ValueError(str(exc)) from None\nE           ValueError: Execution reverted during call: 'Command '['neon-cli', '--commitment=recent', '--url', 'http://10.2.0.2:8899', '--evm_loader=53DfF883gyixYNXnM7s5xhdeyV8mVk9T4i2hGV9vG9io', '-vvv', 'emulate', '--token_mint', 'HPsV9Deocecw3GeZv1FkAPNCBRfuVyfw9MMwjwRe1xaU', '0xE10D193E09231581460b88c7342778bBdc310a71', '0xCEA467516065dD2e4D7Bc235598C18FD7a33C59c', '0x23b872dd0000000000000000000000009d7642fcb9506328f6fe0ffd7c14b9a408a301740000000000000000000000002444d4a47c28bb3740e8a5b3bcd761f499484a250000000000000000000000000000000000000000000000000000000000000000', '']' returned non-zero exit status 101.'. This transaction will likely revert. If you wish to broadcast, include `allow_revert:True` as a transaction parameter.\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:121: ValueError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "546ff6684fa11e2c",
      "name" : "stdout",
      "source" : "546ff6684fa11e2c.txt",
      "type" : "text/plain",
      "size" : 306
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1640560442135,
      "stop" : 1640560442135,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_transferFrom"
  }, {
    "name" : "host",
    "value" : "fv-az123-753"
  }, {
    "name" : "thread",
    "value" : "3860-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_transferFrom"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 14,
        "unknown" : 0,
        "total" : 17
      },
      "items" : [ {
        "uid" : "494744bd4ce6b7b5",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/357//#testresult/494744bd4ce6b7b5",
        "status" : "broken",
        "statusDetails" : "ValueError: Transaction simulation failed: Error processing Instruction 0: custom program error: 0x1",
        "time" : {
          "start" : 1640559433402,
          "stop" : 1640559433402,
          "duration" : 0
        }
      }, {
        "uid" : "a2e4a3df21eb1b37",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/355//#testresult/a2e4a3df21eb1b37",
        "status" : "passed",
        "time" : {
          "start" : 1640546338130,
          "stop" : 1640546341128,
          "duration" : 2998
        }
      }, {
        "uid" : "243176399efaf8a0",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/353//#testresult/243176399efaf8a0",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://proxy.teststand2.neontest.xyz/solana",
        "time" : {
          "start" : 1640537571452,
          "stop" : 1640537571452,
          "duration" : 0
        }
      }, {
        "uid" : "c52c32619c2b382",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/352//#testresult/c52c32619c2b382",
        "status" : "passed",
        "time" : {
          "start" : 1640535522645,
          "stop" : 1640535526845,
          "duration" : 4200
        }
      }, {
        "uid" : "72dd13c0e44fb623",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/351//#testresult/72dd13c0e44fb623",
        "status" : "passed",
        "time" : {
          "start" : 1640534474331,
          "stop" : 1640534478510,
          "duration" : 4179
        }
      }, {
        "uid" : "da1d3890b3322db5",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/350//#testresult/da1d3890b3322db5",
        "status" : "passed",
        "time" : {
          "start" : 1640488585509,
          "stop" : 1640488590822,
          "duration" : 5313
        }
      }, {
        "uid" : "a2540c3e74708a0",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/349//#testresult/a2540c3e74708a0",
        "status" : "passed",
        "time" : {
          "start" : 1640478983586,
          "stop" : 1640478987765,
          "duration" : 4179
        }
      }, {
        "uid" : "fb94e61e61804c96",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/345//#testresult/fb94e61e61804c96",
        "status" : "passed",
        "time" : {
          "start" : 1640445004627,
          "stop" : 1640445008735,
          "duration" : 4108
        }
      }, {
        "uid" : "b3fd57d2ec896b21",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/343//#testresult/b3fd57d2ec896b21",
        "status" : "passed",
        "time" : {
          "start" : 1640402171668,
          "stop" : 1640402178766,
          "duration" : 7098
        }
      }, {
        "uid" : "47944ff6361cf78d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/342//#testresult/47944ff6361cf78d",
        "status" : "passed",
        "time" : {
          "start" : 1640392527798,
          "stop" : 1640392534146,
          "duration" : 6348
        }
      }, {
        "uid" : "88150234bb015f76",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/340//#testresult/88150234bb015f76",
        "status" : "passed",
        "time" : {
          "start" : 1640360530872,
          "stop" : 1640360535158,
          "duration" : 4286
        }
      }, {
        "uid" : "429d87a3f561c998",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/339//#testresult/429d87a3f561c998",
        "status" : "passed",
        "time" : {
          "start" : 1640360369898,
          "stop" : 1640360374809,
          "duration" : 4911
        }
      }, {
        "uid" : "7676705d4c5ba085",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/338//#testresult/7676705d4c5ba085",
        "status" : "passed",
        "time" : {
          "start" : 1640358926504,
          "stop" : 1640358929809,
          "duration" : 3305
        }
      }, {
        "uid" : "e03fc67413b11e14",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/337//#testresult/e03fc67413b11e14",
        "status" : "passed",
        "time" : {
          "start" : 1640355882093,
          "stop" : 1640355887183,
          "duration" : 5090
        }
      }, {
        "uid" : "3259ad39030e0e84",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/336//#testresult/3259ad39030e0e84",
        "status" : "passed",
        "time" : {
          "start" : 1640350149215,
          "stop" : 1640350154440,
          "duration" : 5225
        }
      }, {
        "uid" : "5eeba9e047d3bb28",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/332//#testresult/5eeba9e047d3bb28",
        "status" : "passed",
        "time" : {
          "start" : 1640321538111,
          "stop" : 1640321542253,
          "duration" : 4142
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "c388542af30ace61.json",
  "parameterValues" : [ ]
}