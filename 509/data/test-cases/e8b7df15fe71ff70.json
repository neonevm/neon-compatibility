{
  "uid" : "e8b7df15fe71ff70",
  "name" : "test_insufficient_balance",
  "fullName" : "tests.brownie.token.tests.test_transfer#test_insufficient_balance",
  "historyId" : "02f6dcce7a5f38efb9b84065f779b5a9",
  "time" : {
    "start" : 1642302981580,
    "stop" : 1642302982096,
    "duration" : 516
  },
  "status" : "broken",
  "statusMessage" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
  "statusTrace" : "accounts = <brownie.network.account.Accounts object at 0x7f2c896e1550>\ntoken = <Token Contract '0x8d5FfBF85f4f23ED6c2407925d1c724A0576A6Be'>\n\n    def test_insufficient_balance(accounts, token):\n        balance = token.balanceOf(accounts[0])\n    \n        with brownie.reverts():\n>           token.transfer(accounts[1], balance + 1, {'from': accounts[0]})\n\ntests/brownie/token/tests/test_transfer.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/brownie/token/tests/test_transfer.py:72: in test_insufficient_balance\n    token.transfer(accounts[1], balance + 1, {'from': accounts[0]})\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1693: in __call__\n    return self.transact(*args)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1566: in transact\n    return tx[\"from\"].transfer(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:642: in transfer\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:725: in _make_transaction\n    raise VirtualMachineError(e) from None\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError(\"Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\"))\nexc = \"Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\"\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.message: str = exc[\"message\"].rstrip(\".\")\n    \n            if isinstance(exc[\"data\"], str):\n                # handle parity exceptions - this logic probably is not perfect\n                if \"0x08c379a0\" in exc[\"data\"]:\n                    revert_type, err_msg = [i.strip() for i in exc[\"data\"].split(\"0x08c379a0\", 1)]\n                    err_msg = eth_abi.decode_abi([\"string\"], HexBytes(err_msg))\n                    err_msg = f\"{revert_type} '{err_msg}'\"\n                elif exc[\"data\"].endswith(\"0x\"):\n                    err_msg = exc[\"data\"][:-2].strip()\n                else:\n                    err_msg = exc[\"data\"]\n                raise ValueError(f\"{self.message}: {err_msg}\") from None\n    \n            try:\n                txid, data = next((k, v) for k, v in exc[\"data\"].items() if k.startswith(\"0x\"))\n            except StopIteration:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.txid: str = txid\n            self.source: str = \"\"\n            self.revert_type: str = data[\"error\"]\n            self.pc: Optional[str] = data.get(\"program_counter\")\n            if self.pc and self.revert_type == \"revert\":\n                self.pc -= 1\n    \n            self.revert_msg: Optional[str] = data.get(\"reason\")\n            self.dev_revert_msg = brownie.project.build._get_dev_revert(self.pc)\n            if self.revert_msg is None and self.revert_type in (\"revert\", \"invalid opcode\"):\n                self.revert_msg = self.dev_revert_msg\n            elif self.revert_msg == \"Failed assertion\":\n                self.revert_msg = self.dev_revert_msg or self.revert_msg\n    \n        else:\n>           raise ValueError(str(exc)) from None\nE           ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:121: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1642302918724,
      "stop" : 1642302918724,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1642302920037,
      "stop" : 1642302940424,
      "duration" : 20387
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1642302943792,
      "stop" : 1642302944067,
      "duration" : 275
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1642302943792,
      "stop" : 1642302943792,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1642302963831,
      "stop" : 1642302966356,
      "duration" : 2525
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1642303198194,
      "stop" : 1642303198194,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_transfer"
  }, {
    "name" : "host",
    "value" : "fv-az123-134"
  }, {
    "name" : "thread",
    "value" : "3583-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_transfer"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 107,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 107
      },
      "items" : [ {
        "uid" : "622be30c46151047",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/508//#testresult/622be30c46151047",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642293342960,
          "stop" : 1642293343480,
          "duration" : 520
        }
      }, {
        "uid" : "109ddeabd2a06b33",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/506//#testresult/109ddeabd2a06b33",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642216547121,
          "stop" : 1642216547649,
          "duration" : 528
        }
      }, {
        "uid" : "e4b05c360fa7c67e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/505//#testresult/e4b05c360fa7c67e",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642206814407,
          "stop" : 1642206814911,
          "duration" : 504
        }
      }, {
        "uid" : "17902ed130dfcfc1",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/494//#testresult/17902ed130dfcfc1",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642169273104,
          "stop" : 1642169273611,
          "duration" : 507
        }
      }, {
        "uid" : "6271e1209a8ab80c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/494//#testresult/6271e1209a8ab80c",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642158793311,
          "stop" : 1642158793866,
          "duration" : 555
        }
      }, {
        "uid" : "e679d82405ad954c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/493//#testresult/e679d82405ad954c",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642130145008,
          "stop" : 1642130145536,
          "duration" : 528
        }
      }, {
        "uid" : "63e2b916773da0fc",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/492//#testresult/63e2b916773da0fc",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642120576575,
          "stop" : 1642120577164,
          "duration" : 589
        }
      }, {
        "uid" : "fa202c9e70e91847",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/490//#testresult/fa202c9e70e91847",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642099307977,
          "stop" : 1642099308524,
          "duration" : 547
        }
      }, {
        "uid" : "8671487fbaa82452",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/488//#testresult/8671487fbaa82452",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642088335666,
          "stop" : 1642088336274,
          "duration" : 608
        }
      }, {
        "uid" : "c163f1be4847cd98",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/487//#testresult/c163f1be4847cd98",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642083102703,
          "stop" : 1642083103095,
          "duration" : 392
        }
      }, {
        "uid" : "32f90bd43ac0722a",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/485//#testresult/32f90bd43ac0722a",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642075628777,
          "stop" : 1642075629349,
          "duration" : 572
        }
      }, {
        "uid" : "c03af8835cf28ef1",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/484//#testresult/c03af8835cf28ef1",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='10.2.0.2', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f11669510d0>: Failed to establish a new connection: [Errno 111] Connection refused'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642074000692,
          "stop" : 1642074000692,
          "duration" : 0
        }
      }, {
        "uid" : "2b899c91f8f118a",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/483//#testresult/2b899c91f8f118a",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642059429215,
          "stop" : 1642059429790,
          "duration" : 575
        }
      }, {
        "uid" : "408cda49ce3d37e1",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/482//#testresult/408cda49ce3d37e1",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642043739919,
          "stop" : 1642043740311,
          "duration" : 392
        }
      }, {
        "uid" : "b86069c666845fda",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/481//#testresult/b86069c666845fda",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642034837184,
          "stop" : 1642034837748,
          "duration" : 564
        }
      }, {
        "uid" : "8b0e5136762a111f",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/479//#testresult/8b0e5136762a111f",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1642032999965,
          "stop" : 1642033000497,
          "duration" : 532
        }
      }, {
        "uid" : "c60c2382757d22f4",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/478//#testresult/c60c2382757d22f4",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: http://proxy.night.stand.neontest.xyz/solana",
        "time" : {
          "start" : 1642032073184,
          "stop" : 1642032073184,
          "duration" : 0
        }
      }, {
        "uid" : "9bb873303ea599d7",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/477//#testresult/9bb873303ea599d7",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1642031188285,
          "stop" : 1642031188285,
          "duration" : 0
        }
      }, {
        "uid" : "b692f3ea922cb534",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/476//#testresult/b692f3ea922cb534",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1642028350067,
          "stop" : 1642028350067,
          "duration" : 0
        }
      }, {
        "uid" : "65bd60f68530db9",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/474//#testresult/65bd60f68530db9",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1642025672288,
          "stop" : 1642025672288,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "e8b7df15fe71ff70.json",
  "parameterValues" : [ ]
}