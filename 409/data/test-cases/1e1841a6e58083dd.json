{
  "uid" : "1e1841a6e58083dd",
  "name" : "test_transfer_zero_tokens",
  "fullName" : "tests.brownie.token.tests.test_transferFrom#test_transfer_zero_tokens",
  "historyId" : "712015a3b92bfa1e855577e4791f38fb",
  "time" : {
    "start" : 1641231490578,
    "stop" : 1641231490578,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://proxy.teststand2.neontest.xyz/solana",
  "statusTrace" : "brownie_project = <Project 'TokenProject'>\naccounts = <brownie.network.account.Accounts object at 0x7f423b2a9880>\n\n    @pytest.fixture(scope=\"module\")\n    def token(brownie_project, accounts):\n>       return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n\ntests/brownie/token/tests/conftest.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:600: in __call__\n    return tx[\"from\"].deploy(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:508: in deploy\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:721: in _make_transaction\n    gas_limit = Wei(gas_limit) or self._gas_limit(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:427: in _gas_limit\n    gas_limit = self.estimate_gas(to, amount, 0, data or \"\")\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:593: in estimate_gas\n    return web3.eth.estimate_gas(tx)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/eth.py:728: in estimate_gas\n    return self._estimate_gas(transaction, block_identifier)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/module.py:57: in caller\n    result = w3.manager.request_blocking(method_str,\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/manager.py:186: in request_blocking\n    response = self._make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/manager.py:147: in _make_request\n    return request_func(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:76: in apply_formatters\n    response = make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/gas_price_strategy.py:90: in middleware\n    return make_request(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:74: in apply_formatters\n    response = make_request(method, formatted_params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/attrdict.py:33: in middleware\n    response = make_request(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:74: in apply_formatters\n    response = make_request(method, formatted_params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:74: in apply_formatters\n    response = make_request(method, formatted_params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:74: in apply_formatters\n    response = make_request(method, formatted_params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/buffered_gas_estimate.py:40: in middleware\n    return make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/exception_retry_request.py:105: in middleware\n    return make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/providers/rpc.py:88: in make_request\n    raw_response = make_post_request(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/_utils/request.py:49: in make_post_request\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = ''\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode('utf-8')\n            except UnicodeDecodeError:\n                reason = self.reason.decode('iso-8859-1')\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = u'%s Client Error: %s for url: %s' % (self.status_code, reason, self.url)\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = u'%s Server Error: %s for url: %s' % (self.status_code, reason, self.url)\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://proxy.teststand2.neontest.xyz/solana\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/requests/models.py:953: HTTPError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1641230864683,
      "stop" : 1641230864683,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1641230925721,
      "stop" : 1641230941523,
      "duration" : 15802
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1641231094248,
      "stop" : 1641231094248,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1641231094248,
      "stop" : 1641231094598,
      "duration" : 350
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1641231407422,
      "stop" : 1641231489159,
      "duration" : 81737
    },
    "status" : "broken",
    "statusMessage" : "requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://proxy.teststand2.neontest.xyz/solana\n",
    "statusTrace" : "  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 932, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/neon-compatibility/neon-compatibility/tests/brownie/token/tests/conftest.py\", line 49, in token\n    return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py\", line 600, in __call__\n    return tx[\"from\"].deploy(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 508, in deploy\n    receipt, exc = self._make_transaction(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 721, in _make_transaction\n    gas_limit = Wei(gas_limit) or self._gas_limit(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 427, in _gas_limit\n    gas_limit = self.estimate_gas(to, amount, 0, data or \"\")\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 593, in estimate_gas\n    return web3.eth.estimate_gas(tx)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/eth.py\", line 728, in estimate_gas\n    return self._estimate_gas(transaction, block_identifier)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/module.py\", line 57, in caller\n    result = w3.manager.request_blocking(method_str,\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/manager.py\", line 186, in request_blocking\n    response = self._make_request(method, params)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/manager.py\", line 147, in _make_request\n    return request_func(method, params)\n  File \"cytoolz/functoolz.pyx\", line 250, in cytoolz.functoolz.curry.__call__\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py\", line 76, in apply_formatters\n    response = make_request(method, params)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/gas_price_strategy.py\", line 90, in middleware\n    return make_request(method, params)\n  File \"cytoolz/functoolz.pyx\", line 250, in cytoolz.functoolz.curry.__call__\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py\", line 74, in apply_formatters\n    response = make_request(method, formatted_params)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/attrdict.py\", line 33, in middleware\n    response = make_request(method, params)\n  File \"cytoolz/functoolz.pyx\", line 250, in cytoolz.functoolz.curry.__call__\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py\", line 74, in apply_formatters\n    response = make_request(method, formatted_params)\n  File \"cytoolz/functoolz.pyx\", line 250, in cytoolz.functoolz.curry.__call__\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py\", line 74, in apply_formatters\n    response = make_request(method, formatted_params)\n  File \"cytoolz/functoolz.pyx\", line 250, in cytoolz.functoolz.curry.__call__\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py\", line 74, in apply_formatters\n    response = make_request(method, formatted_params)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/buffered_gas_estimate.py\", line 40, in middleware\n    return make_request(method, params)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/exception_retry_request.py\", line 105, in middleware\n    return make_request(method, params)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/providers/rpc.py\", line 88, in make_request\n    raw_response = make_post_request(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/_utils/request.py\", line 49, in make_post_request\n    response.raise_for_status()\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/requests/models.py\", line 953, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1641231541346,
      "stop" : 1641231541346,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_transferFrom"
  }, {
    "name" : "host",
    "value" : "fv-az83-57"
  }, {
    "name" : "thread",
    "value" : "3609-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_transferFrom"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 5,
        "skipped" : 0,
        "passed" : 41,
        "unknown" : 0,
        "total" : 46
      },
      "items" : [ {
        "uid" : "4cf5ec5c74a19026",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/408//#testresult/4cf5ec5c74a19026",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://proxy.teststand2.neontest.xyz/solana",
        "time" : {
          "start" : 1641225796522,
          "stop" : 1641225796522,
          "duration" : 0
        }
      }, {
        "uid" : "3e76aa01187e7fe7",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/405//#testresult/3e76aa01187e7fe7",
        "status" : "passed",
        "time" : {
          "start" : 1641179905041,
          "stop" : 1641179924233,
          "duration" : 19192
        }
      }, {
        "uid" : "103c0ea8815cae8f",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/404//#testresult/103c0ea8815cae8f",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1641170039003,
          "stop" : 1641170039003,
          "duration" : 0
        }
      }, {
        "uid" : "78c6d1359a647086",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/403//#testresult/78c6d1359a647086",
        "status" : "passed",
        "time" : {
          "start" : 1641093579881,
          "stop" : 1641093594568,
          "duration" : 14687
        }
      }, {
        "uid" : "8404f2b700dd4b76",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/402//#testresult/8404f2b700dd4b76",
        "status" : "passed",
        "time" : {
          "start" : 1641083939444,
          "stop" : 1641083954118,
          "duration" : 14674
        }
      }, {
        "uid" : "37dc8bbad23fc8bc",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/401//#testresult/37dc8bbad23fc8bc",
        "status" : "passed",
        "time" : {
          "start" : 1641007102013,
          "stop" : 1641007117870,
          "duration" : 15857
        }
      }, {
        "uid" : "9ae0e4190c373ad",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/400//#testresult/9ae0e4190c373ad",
        "status" : "passed",
        "time" : {
          "start" : 1640997521824,
          "stop" : 1640997526664,
          "duration" : 4840
        }
      }, {
        "uid" : "2e993e5510fb6dde",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/399//#testresult/2e993e5510fb6dde",
        "status" : "passed",
        "time" : {
          "start" : 1640920584094,
          "stop" : 1640920594215,
          "duration" : 10121
        }
      }, {
        "uid" : "14ae2ce1425acba8",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/398//#testresult/14ae2ce1425acba8",
        "status" : "passed",
        "time" : {
          "start" : 1640911060702,
          "stop" : 1640911066111,
          "duration" : 5409
        }
      }, {
        "uid" : "5d9b996f0b3d9c27",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/395//#testresult/5d9b996f0b3d9c27",
        "status" : "passed",
        "time" : {
          "start" : 1640865956431,
          "stop" : 1640865960469,
          "duration" : 4038
        }
      }, {
        "uid" : "f3cdb62cddf1730f",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/394//#testresult/f3cdb62cddf1730f",
        "status" : "passed",
        "time" : {
          "start" : 1640865612334,
          "stop" : 1640865616843,
          "duration" : 4509
        }
      }, {
        "uid" : "e21f31d5337bc763",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/391//#testresult/e21f31d5337bc763",
        "status" : "passed",
        "time" : {
          "start" : 1640834039603,
          "stop" : 1640834044027,
          "duration" : 4424
        }
      }, {
        "uid" : "c307381b80b7bb6",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/390//#testresult/c307381b80b7bb6",
        "status" : "passed",
        "time" : {
          "start" : 1640824458033,
          "stop" : 1640824461542,
          "duration" : 3509
        }
      }, {
        "uid" : "74d8d15c693b5c1a",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/384//#testresult/74d8d15c693b5c1a",
        "status" : "passed",
        "time" : {
          "start" : 1640747702888,
          "stop" : 1640747708249,
          "duration" : 5361
        }
      }, {
        "uid" : "d282ad798b57abe8",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/383//#testresult/d282ad798b57abe8",
        "status" : "passed",
        "time" : {
          "start" : 1640738059568,
          "stop" : 1640738064544,
          "duration" : 4976
        }
      }, {
        "uid" : "fde51989c2cd824e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/378//#testresult/fde51989c2cd824e",
        "status" : "passed",
        "time" : {
          "start" : 1640703774403,
          "stop" : 1640703778842,
          "duration" : 4439
        }
      }, {
        "uid" : "889b12ae4bc41961",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/377//#testresult/889b12ae4bc41961",
        "status" : "passed",
        "time" : {
          "start" : 1640701283136,
          "stop" : 1640701287053,
          "duration" : 3917
        }
      }, {
        "uid" : "5ac9844679e47d47",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/376//#testresult/5ac9844679e47d47",
        "status" : "passed",
        "time" : {
          "start" : 1640695495886,
          "stop" : 1640695500307,
          "duration" : 4421
        }
      }, {
        "uid" : "2f8449271f5b8cac",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/375//#testresult/2f8449271f5b8cac",
        "status" : "passed",
        "time" : {
          "start" : 1640684804479,
          "stop" : 1640684808627,
          "duration" : 4148
        }
      }, {
        "uid" : "5b1d3beb7ee44334",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/373//#testresult/5b1d3beb7ee44334",
        "status" : "passed",
        "time" : {
          "start" : 1640661263147,
          "stop" : 1640661267521,
          "duration" : 4374
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "1e1841a6e58083dd.json",
  "parameterValues" : [ ]
}