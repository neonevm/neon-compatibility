{
  "uid" : "dd401b683faa9f10",
  "name" : "test_caller_approval_affected",
  "fullName" : "tests.brownie.token.tests.test_transferFrom#test_caller_approval_affected",
  "historyId" : "d5548e59afb70cb78e10802d517d851a",
  "time" : {
    "start" : 1641231489691,
    "stop" : 1641231489691,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://proxy.teststand2.neontest.xyz/solana",
  "statusTrace" : "brownie_project = <Project 'TokenProject'>\naccounts = <brownie.network.account.Accounts object at 0x7f423b2a9880>\n\n    @pytest.fixture(scope=\"module\")\n    def token(brownie_project, accounts):\n>       return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n\ntests/brownie/token/tests/conftest.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:600: in __call__\n    return tx[\"from\"].deploy(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:508: in deploy\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:721: in _make_transaction\n    gas_limit = Wei(gas_limit) or self._gas_limit(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:427: in _gas_limit\n    gas_limit = self.estimate_gas(to, amount, 0, data or \"\")\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:593: in estimate_gas\n    return web3.eth.estimate_gas(tx)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/eth.py:728: in estimate_gas\n    return self._estimate_gas(transaction, block_identifier)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/module.py:57: in caller\n    result = w3.manager.request_blocking(method_str,\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/manager.py:186: in request_blocking\n    response = self._make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/manager.py:147: in _make_request\n    return request_func(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:76: in apply_formatters\n    response = make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/gas_price_strategy.py:90: in middleware\n    return make_request(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:74: in apply_formatters\n    response = make_request(method, formatted_params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/attrdict.py:33: in middleware\n    response = make_request(method, params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:74: in apply_formatters\n    response = make_request(method, formatted_params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:74: in apply_formatters\n    response = make_request(method, formatted_params)\ncytoolz/functoolz.pyx:250: in cytoolz.functoolz.curry.__call__\n    ???\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py:74: in apply_formatters\n    response = make_request(method, formatted_params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/buffered_gas_estimate.py:40: in middleware\n    return make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/exception_retry_request.py:105: in middleware\n    return make_request(method, params)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/providers/rpc.py:88: in make_request\n    raw_response = make_post_request(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/_utils/request.py:49: in make_post_request\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = ''\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode('utf-8')\n            except UnicodeDecodeError:\n                reason = self.reason.decode('iso-8859-1')\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = u'%s Client Error: %s for url: %s' % (self.status_code, reason, self.url)\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = u'%s Server Error: %s for url: %s' % (self.status_code, reason, self.url)\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://proxy.teststand2.neontest.xyz/solana\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/requests/models.py:953: HTTPError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1641230864683,
      "stop" : 1641230864683,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1641230925721,
      "stop" : 1641230941523,
      "duration" : 15802
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1641231094248,
      "stop" : 1641231094248,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1641231094248,
      "stop" : 1641231094598,
      "duration" : 350
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1641231407422,
      "stop" : 1641231489159,
      "duration" : 81737
    },
    "status" : "broken",
    "statusMessage" : "requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://proxy.teststand2.neontest.xyz/solana\n",
    "statusTrace" : "  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 932, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/neon-compatibility/neon-compatibility/tests/brownie/token/tests/conftest.py\", line 49, in token\n    return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py\", line 600, in __call__\n    return tx[\"from\"].deploy(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 508, in deploy\n    receipt, exc = self._make_transaction(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 721, in _make_transaction\n    gas_limit = Wei(gas_limit) or self._gas_limit(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 427, in _gas_limit\n    gas_limit = self.estimate_gas(to, amount, 0, data or \"\")\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 593, in estimate_gas\n    return web3.eth.estimate_gas(tx)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/eth.py\", line 728, in estimate_gas\n    return self._estimate_gas(transaction, block_identifier)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/module.py\", line 57, in caller\n    result = w3.manager.request_blocking(method_str,\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/manager.py\", line 186, in request_blocking\n    response = self._make_request(method, params)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/manager.py\", line 147, in _make_request\n    return request_func(method, params)\n  File \"cytoolz/functoolz.pyx\", line 250, in cytoolz.functoolz.curry.__call__\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py\", line 76, in apply_formatters\n    response = make_request(method, params)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/gas_price_strategy.py\", line 90, in middleware\n    return make_request(method, params)\n  File \"cytoolz/functoolz.pyx\", line 250, in cytoolz.functoolz.curry.__call__\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py\", line 74, in apply_formatters\n    response = make_request(method, formatted_params)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/attrdict.py\", line 33, in middleware\n    response = make_request(method, params)\n  File \"cytoolz/functoolz.pyx\", line 250, in cytoolz.functoolz.curry.__call__\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py\", line 74, in apply_formatters\n    response = make_request(method, formatted_params)\n  File \"cytoolz/functoolz.pyx\", line 250, in cytoolz.functoolz.curry.__call__\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py\", line 74, in apply_formatters\n    response = make_request(method, formatted_params)\n  File \"cytoolz/functoolz.pyx\", line 250, in cytoolz.functoolz.curry.__call__\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/formatting.py\", line 74, in apply_formatters\n    response = make_request(method, formatted_params)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/buffered_gas_estimate.py\", line 40, in middleware\n    return make_request(method, params)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/middleware/exception_retry_request.py\", line 105, in middleware\n    return make_request(method, params)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/providers/rpc.py\", line 88, in make_request\n    raw_response = make_post_request(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/web3/_utils/request.py\", line 49, in make_post_request\n    response.raise_for_status()\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/requests/models.py\", line 953, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1641231541346,
      "stop" : 1641231541346,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_transferFrom"
  }, {
    "name" : "host",
    "value" : "fv-az83-57"
  }, {
    "name" : "thread",
    "value" : "3609-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_transferFrom"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 5,
        "skipped" : 0,
        "passed" : 41,
        "unknown" : 0,
        "total" : 46
      },
      "items" : [ {
        "uid" : "91fa87c8863e990e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/408//#testresult/91fa87c8863e990e",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://proxy.teststand2.neontest.xyz/solana",
        "time" : {
          "start" : 1641225795573,
          "stop" : 1641225795573,
          "duration" : 0
        }
      }, {
        "uid" : "219f10e3dcbace23",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/405//#testresult/219f10e3dcbace23",
        "status" : "passed",
        "time" : {
          "start" : 1641179823674,
          "stop" : 1641179841299,
          "duration" : 17625
        }
      }, {
        "uid" : "8f9c2116c0240133",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/404//#testresult/8f9c2116c0240133",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1641170038536,
          "stop" : 1641170038536,
          "duration" : 0
        }
      }, {
        "uid" : "9299750c48236fdc",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/403//#testresult/9299750c48236fdc",
        "status" : "passed",
        "time" : {
          "start" : 1641093511535,
          "stop" : 1641093519324,
          "duration" : 7789
        }
      }, {
        "uid" : "f12facbfb6938819",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/402//#testresult/f12facbfb6938819",
        "status" : "passed",
        "time" : {
          "start" : 1641083872210,
          "stop" : 1641083886671,
          "duration" : 14461
        }
      }, {
        "uid" : "cb176ba7dc57b968",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/401//#testresult/cb176ba7dc57b968",
        "status" : "passed",
        "time" : {
          "start" : 1641007067681,
          "stop" : 1641007070579,
          "duration" : 2898
        }
      }, {
        "uid" : "638aabf7335fb40f",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/400//#testresult/638aabf7335fb40f",
        "status" : "passed",
        "time" : {
          "start" : 1640997434371,
          "stop" : 1640997446740,
          "duration" : 12369
        }
      }, {
        "uid" : "f2d217cf5812e2ee",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/399//#testresult/f2d217cf5812e2ee",
        "status" : "passed",
        "time" : {
          "start" : 1640920539921,
          "stop" : 1640920554249,
          "duration" : 14328
        }
      }, {
        "uid" : "f5991f828afe87f3",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/398//#testresult/f5991f828afe87f3",
        "status" : "passed",
        "time" : {
          "start" : 1640911018087,
          "stop" : 1640911022223,
          "duration" : 4136
        }
      }, {
        "uid" : "cf3c524d493cd4f",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/395//#testresult/cf3c524d493cd4f",
        "status" : "passed",
        "time" : {
          "start" : 1640865922239,
          "stop" : 1640865930773,
          "duration" : 8534
        }
      }, {
        "uid" : "8220f5ada71b48c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/394//#testresult/8220f5ada71b48c",
        "status" : "passed",
        "time" : {
          "start" : 1640865591303,
          "stop" : 1640865594956,
          "duration" : 3653
        }
      }, {
        "uid" : "ed2f6d07541e5728",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/391//#testresult/ed2f6d07541e5728",
        "status" : "passed",
        "time" : {
          "start" : 1640834004048,
          "stop" : 1640834007783,
          "duration" : 3735
        }
      }, {
        "uid" : "8d4a5aef5acdf608",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/390//#testresult/8d4a5aef5acdf608",
        "status" : "passed",
        "time" : {
          "start" : 1640824427894,
          "stop" : 1640824430796,
          "duration" : 2902
        }
      }, {
        "uid" : "ae3fe27e382ef0a6",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/384//#testresult/ae3fe27e382ef0a6",
        "status" : "passed",
        "time" : {
          "start" : 1640747677544,
          "stop" : 1640747681999,
          "duration" : 4455
        }
      }, {
        "uid" : "e5ba8ba6f451e037",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/383//#testresult/e5ba8ba6f451e037",
        "status" : "passed",
        "time" : {
          "start" : 1640738033796,
          "stop" : 1640738038328,
          "duration" : 4532
        }
      }, {
        "uid" : "2bd13b7294908dae",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/378//#testresult/2bd13b7294908dae",
        "status" : "passed",
        "time" : {
          "start" : 1640703752965,
          "stop" : 1640703756648,
          "duration" : 3683
        }
      }, {
        "uid" : "92850e26b613ee6f",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/377//#testresult/92850e26b613ee6f",
        "status" : "passed",
        "time" : {
          "start" : 1640701266561,
          "stop" : 1640701269371,
          "duration" : 2810
        }
      }, {
        "uid" : "412545fc92050d5c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/376//#testresult/412545fc92050d5c",
        "status" : "passed",
        "time" : {
          "start" : 1640695473820,
          "stop" : 1640695477648,
          "duration" : 3828
        }
      }, {
        "uid" : "61276a93925f81b0",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/375//#testresult/61276a93925f81b0",
        "status" : "passed",
        "time" : {
          "start" : 1640684783474,
          "stop" : 1640684787115,
          "duration" : 3641
        }
      }, {
        "uid" : "a2b9c3adb6edf41e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/373//#testresult/a2b9c3adb6edf41e",
        "status" : "passed",
        "time" : {
          "start" : 1640661241662,
          "stop" : 1640661245388,
          "duration" : 3726
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "dd401b683faa9f10.json",
  "parameterValues" : [ ]
}