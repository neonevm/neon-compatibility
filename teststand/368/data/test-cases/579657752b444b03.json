{
  "uid" : "579657752b444b03",
  "name" : "test_insufficient_balance",
  "fullName" : "tests.brownie.token.tests.test_transfer#test_insufficient_balance",
  "historyId" : "02f6dcce7a5f38efb9b84065f779b5a9",
  "time" : {
    "start" : 1640636736889,
    "stop" : 1640636737638,
    "duration" : 749
  },
  "status" : "broken",
  "statusMessage" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
  "statusTrace" : "accounts = <brownie.network.account.Accounts object at 0x7fbb357f42b0>\ntoken = <Token Contract '0x7aCdB90792F3029fb98d4a40c1BdEb845ab4C8eB'>\n\n    def test_insufficient_balance(accounts, token):\n        balance = token.balanceOf(accounts[0])\n    \n        with brownie.reverts():\n>           token.transfer(accounts[1], balance + 1, {'from': accounts[0]})\n\ntests/brownie/token/tests/test_transfer.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/brownie/token/tests/test_transfer.py:72: in test_insufficient_balance\n    token.transfer(accounts[1], balance + 1, {'from': accounts[0]})\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1693: in __call__\n    return self.transact(*args)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1566: in transact\n    return tx[\"from\"].transfer(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:642: in transfer\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:725: in _make_transaction\n    raise VirtualMachineError(e) from None\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError(\"Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\"))\nexc = \"Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\"\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.message: str = exc[\"message\"].rstrip(\".\")\n    \n            if isinstance(exc[\"data\"], str):\n                # handle parity exceptions - this logic probably is not perfect\n                if \"0x08c379a0\" in exc[\"data\"]:\n                    revert_type, err_msg = [i.strip() for i in exc[\"data\"].split(\"0x08c379a0\", 1)]\n                    err_msg = eth_abi.decode_abi([\"string\"], HexBytes(err_msg))\n                    err_msg = f\"{revert_type} '{err_msg}'\"\n                elif exc[\"data\"].endswith(\"0x\"):\n                    err_msg = exc[\"data\"][:-2].strip()\n                else:\n                    err_msg = exc[\"data\"]\n                raise ValueError(f\"{self.message}: {err_msg}\") from None\n    \n            try:\n                txid, data = next((k, v) for k, v in exc[\"data\"].items() if k.startswith(\"0x\"))\n            except StopIteration:\n                raise ValueError(exc[\"message\"]) from None\n    \n            self.txid: str = txid\n            self.source: str = \"\"\n            self.revert_type: str = data[\"error\"]\n            self.pc: Optional[str] = data.get(\"program_counter\")\n            if self.pc and self.revert_type == \"revert\":\n                self.pc -= 1\n    \n            self.revert_msg: Optional[str] = data.get(\"reason\")\n            self.dev_revert_msg = brownie.project.build._get_dev_revert(self.pc)\n            if self.revert_msg is None and self.revert_type in (\"revert\", \"invalid opcode\"):\n                self.revert_msg = self.dev_revert_msg\n            elif self.revert_msg == \"Failed assertion\":\n                self.revert_msg = self.dev_revert_msg or self.revert_msg\n    \n        else:\n>           raise ValueError(str(exc)) from None\nE           ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:121: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1640636664122,
      "stop" : 1640636664122,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1640636665305,
      "stop" : 1640636681004,
      "duration" : 15699
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1640636686184,
      "stop" : 1640636686184,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1640636686184,
      "stop" : 1640636686455,
      "duration" : 271
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1640636713212,
      "stop" : 1640636716709,
      "duration" : 3497
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1640636979281,
      "stop" : 1640636979281,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_transfer"
  }, {
    "name" : "host",
    "value" : "fv-az28-122"
  }, {
    "name" : "thread",
    "value" : "3622-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_transfer"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 11,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 11
      },
      "items" : [ {
        "uid" : "8b09c8a11cffdef3",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/teststand/367//#testresult/8b09c8a11cffdef3",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1640633755003,
          "stop" : 1640633755821,
          "duration" : 818
        }
      }, {
        "uid" : "bf206a9770b1613c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/teststand/308//#testresult/bf206a9770b1613c",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1640246604982,
          "stop" : 1640246605418,
          "duration" : 436
        }
      }, {
        "uid" : "9face156323bb06d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/teststand/298//#testresult/9face156323bb06d",
        "status" : "broken",
        "statusDetails" : "brownie.exceptions.TransactionError: Tx dropped without known replacement: 0x7e680c0222d6b28c54c453e801fcd66432d603e5b9f2e6ba62bcbb96131d5e0f",
        "time" : {
          "start" : 1640204900158,
          "stop" : 1640204900158,
          "duration" : 0
        }
      }, {
        "uid" : "700f05e064f159d8",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/teststand/294//#testresult/700f05e064f159d8",
        "status" : "broken",
        "statusDetails" : "brownie.exceptions.TransactionError: Tx dropped without known replacement: 0x93ee5cf1a027700f4f7ee54c25f99d28c5d118c2bc73fb74b33bfb07701e406e",
        "time" : {
          "start" : 1640183890460,
          "stop" : 1640183890460,
          "duration" : 0
        }
      }, {
        "uid" : "6e13c1eee2e6b292",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/teststand/286//#testresult/6e13c1eee2e6b292",
        "status" : "broken",
        "statusDetails" : "brownie.exceptions.TransactionError: Tx dropped without known replacement: 0x3338368c50249b6240e8d643fbdc5cb4254773fdc524274c6870a951dfe230e2",
        "time" : {
          "start" : 1640156360799,
          "stop" : 1640156360799,
          "duration" : 0
        }
      }, {
        "uid" : "dee0aef6a420c397",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/teststand/282//#testresult/dee0aef6a420c397",
        "status" : "broken",
        "statusDetails" : "brownie.exceptions.TransactionError: Tx dropped without known replacement: 0xcc17517ae38e86a20b496bb0d96683556ba2b103430d682335305e36b924b88b",
        "time" : {
          "start" : 1640116157434,
          "stop" : 1640116157434,
          "duration" : 0
        }
      }, {
        "uid" : "bd46ec10b30a07c5",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/teststand/281//#testresult/bd46ec10b30a07c5",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1640110349393,
          "stop" : 1640110350595,
          "duration" : 1202
        }
      }, {
        "uid" : "bdda956f0612ee60",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/teststand/280//#testresult/bdda956f0612ee60",
        "status" : "broken",
        "statusDetails" : "brownie.exceptions.TransactionError: Tx dropped without known replacement: 0x48c25b6fcdec94b2cdaea0eb19db67012d043f652bbfeab387f71abe5087141d",
        "time" : {
          "start" : 1640105883030,
          "stop" : 1640105883030,
          "duration" : 0
        }
      }, {
        "uid" : "2f86113b2140b6b4",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/teststand/266//#testresult/2f86113b2140b6b4",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1639910649925,
          "stop" : 1639910649925,
          "duration" : 0
        }
      }, {
        "uid" : "622d206bb3b9ffa6",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/teststand/257//#testresult/622d206bb3b9ffa6",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'execution reverted: Insufficient balance'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1639751359095,
          "stop" : 1639751359911,
          "duration" : 816
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "579657752b444b03.json",
  "parameterValues" : [ ]
}