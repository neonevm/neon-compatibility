{
  "uid" : "48f62ef993ce231e",
  "name" : "test_caller_balance_not_affected",
  "fullName" : "tests.brownie.token.tests.test_transferFrom#test_caller_balance_not_affected",
  "historyId" : "5da0d00473da0ab1e6482a13be5b4f69",
  "time" : {
    "start" : 1640156378241,
    "stop" : 1640156383681,
    "duration" : 5440
  },
  "status" : "broken",
  "statusMessage" : "brownie.exceptions.TransactionError: Tx dropped without known replacement: 0x8b35702dcc26316c21cddcbe5f49a2c6fb89be147c3ebc4c85c118fbb55ff26a",
  "statusTrace" : "accounts = <brownie.network.account.Accounts object at 0x7fd6b5cfc100>\ntoken = <Token Contract '0xFF88d8af4713AEc4b62C1258Deb538dAE1b6dbF9'>\n\n    def test_caller_balance_not_affected(accounts, token):\n        caller_balance = token.balanceOf(accounts[1])\n        amount = token.balanceOf(accounts[0])\n    \n        token.approve(accounts[1], amount, {'from': accounts[0]})\n>       token.transferFrom(accounts[0], accounts[2], amount, {'from': accounts[1]})\n\ntests/brownie/token/tests/test_transferFrom.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1693: in __call__\n    return self.transact(*args)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1566: in transact\n    return tx[\"from\"].transfer(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:642: in transfer\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:758: in _make_transaction\n    receipt = self._await_confirmation(receipt, required_confs, gas_strategy, gas_iter)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <LocalAccount '0x119B6f7391e014CB22eF59081c11F9A99251461a'>\nreceipt = <Transaction '\u001B[0;2;37m0x8b35702dcc26316c21cddcbe5f49a2c6fb89be147c3ebc4c85c118fbb55ff26a\u001B[0;m'>\nrequired_confs = 1, gas_strategy = None, gas_iter = None\n\n    def _await_confirmation(\n        self,\n        receipt: TransactionReceipt,\n        required_confs: int,\n        gas_strategy: Optional[GasABC],\n        gas_iter: Optional[Iterator],\n    ) -> TransactionReceipt:\n        # add to TxHistory before waiting for confirmation, this way the tx\n        # object is available if the user exits blocking via keyboard interrupt\n        history._add_tx(receipt)\n    \n        if gas_strategy is not None:\n            gas_strategy.run(receipt, gas_iter)  # type: ignore\n    \n        if required_confs == 0:\n            # set 0-conf tx's as silent to hide the confirmation output\n            receipt._silent = True\n            return receipt\n    \n        try:\n            receipt._confirmed.wait()\n        except KeyboardInterrupt as exc:\n            # set related transactions as silent\n            receipt._silent = True\n            for receipt in history.filter(\n                sender=self, nonce=receipt.nonce, key=lambda k: k.status != -2\n            ):\n                receipt._silent = True\n            raise exc.with_traceback(None)\n    \n        if receipt.status != -2:\n            return receipt\n    \n        # if transaction was dropped (status -2), find and return the tx that confirmed\n        replacements = history.filter(\n            sender=self, nonce=receipt.nonce, key=lambda k: k.status != -2\n        )\n        while True:\n            if not replacements:\n>               raise TransactionError(f\"Tx dropped without known replacement: {receipt.txid}\")\nE               brownie.exceptions.TransactionError: Tx dropped without known replacement: 0x8b35702dcc26316c21cddcbe5f49a2c6fb89be147c3ebc4c85c118fbb55ff26a\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:800: TransactionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1640156290916,
      "stop" : 1640156290916,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1640156292792,
      "stop" : 1640156309030,
      "duration" : 16238
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1640156314342,
      "stop" : 1640156314711,
      "duration" : 369
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1640156314342,
      "stop" : 1640156314342,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1640156361026,
      "stop" : 1640156369749,
      "duration" : 8723
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "brownie.exceptions.TransactionError: Tx dropped without known replacement: 0x8b35702dcc26316c21cddcbe5f49a2c6fb89be147c3ebc4c85c118fbb55ff26a",
    "statusTrace" : "accounts = <brownie.network.account.Accounts object at 0x7fd6b5cfc100>\ntoken = <Token Contract '0xFF88d8af4713AEc4b62C1258Deb538dAE1b6dbF9'>\n\n    def test_caller_balance_not_affected(accounts, token):\n        caller_balance = token.balanceOf(accounts[1])\n        amount = token.balanceOf(accounts[0])\n    \n        token.approve(accounts[1], amount, {'from': accounts[0]})\n>       token.transferFrom(accounts[0], accounts[2], amount, {'from': accounts[1]})\n\ntests/brownie/token/tests/test_transferFrom.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1693: in __call__\n    return self.transact(*args)\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:1566: in transact\n    return tx[\"from\"].transfer(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:642: in transfer\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:758: in _make_transaction\n    receipt = self._await_confirmation(receipt, required_confs, gas_strategy, gas_iter)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <LocalAccount '0x119B6f7391e014CB22eF59081c11F9A99251461a'>\nreceipt = <Transaction '\u001B[0;2;37m0x8b35702dcc26316c21cddcbe5f49a2c6fb89be147c3ebc4c85c118fbb55ff26a\u001B[0;m'>\nrequired_confs = 1, gas_strategy = None, gas_iter = None\n\n    def _await_confirmation(\n        self,\n        receipt: TransactionReceipt,\n        required_confs: int,\n        gas_strategy: Optional[GasABC],\n        gas_iter: Optional[Iterator],\n    ) -> TransactionReceipt:\n        # add to TxHistory before waiting for confirmation, this way the tx\n        # object is available if the user exits blocking via keyboard interrupt\n        history._add_tx(receipt)\n    \n        if gas_strategy is not None:\n            gas_strategy.run(receipt, gas_iter)  # type: ignore\n    \n        if required_confs == 0:\n            # set 0-conf tx's as silent to hide the confirmation output\n            receipt._silent = True\n            return receipt\n    \n        try:\n            receipt._confirmed.wait()\n        except KeyboardInterrupt as exc:\n            # set related transactions as silent\n            receipt._silent = True\n            for receipt in history.filter(\n                sender=self, nonce=receipt.nonce, key=lambda k: k.status != -2\n            ):\n                receipt._silent = True\n            raise exc.with_traceback(None)\n    \n        if receipt.status != -2:\n            return receipt\n    \n        # if transaction was dropped (status -2), find and return the tx that confirmed\n        replacements = history.filter(\n            sender=self, nonce=receipt.nonce, key=lambda k: k.status != -2\n        )\n        while True:\n            if not replacements:\n>               raise TransactionError(f\"Tx dropped without known replacement: {receipt.txid}\")\nE               brownie.exceptions.TransactionError: Tx dropped without known replacement: 0x8b35702dcc26316c21cddcbe5f49a2c6fb89be147c3ebc4c85c118fbb55ff26a\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:800: TransactionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "40b9af1fc39237f1",
      "name" : "stdout",
      "source" : "40b9af1fc39237f1.txt",
      "type" : "text/plain",
      "size" : 503
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1640156787421,
      "stop" : 1640156787421,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_transferFrom"
  }, {
    "name" : "host",
    "value" : "fv-az83-992"
  }, {
    "name" : "thread",
    "value" : "3684-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_transferFrom"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 6,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 6
      },
      "items" : [ {
        "uid" : "1084e6f2155a37fb",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/teststand/282//#testresult/1084e6f2155a37fb",
        "status" : "broken",
        "statusDetails" : "brownie.exceptions.TransactionError: Tx dropped without known replacement: 0xc34c1c14428d5f2819d833f38c2e2a10c709e377f7916bade52401f62b2c665a",
        "time" : {
          "start" : 1640116161963,
          "stop" : 1640116161963,
          "duration" : 0
        }
      }, {
        "uid" : "6899afb25c9c928a",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/teststand/281//#testresult/6899afb25c9c928a",
        "status" : "broken",
        "statusDetails" : "brownie.exceptions.TransactionError: Tx dropped without known replacement: 0xe68284491c719b4fa9c5ba326ec067d7ec059ed7ed6230e7e952eaf4fe1eb9e9",
        "time" : {
          "start" : 1640110361247,
          "stop" : 1640110361247,
          "duration" : 0
        }
      }, {
        "uid" : "c092f621432fb3a8",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/teststand/280//#testresult/c092f621432fb3a8",
        "status" : "broken",
        "statusDetails" : "brownie.exceptions.TransactionError: Tx dropped without known replacement: 0x1426600ab93577457cad11be4ff46a9766c9746bffe9b62f4ff1d4f81bedfeee",
        "time" : {
          "start" : 1640105907180,
          "stop" : 1640105915251,
          "duration" : 8071
        }
      }, {
        "uid" : "4b3cc7042ed822ce",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/teststand/266//#testresult/4b3cc7042ed822ce",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1639910650831,
          "stop" : 1639910650831,
          "duration" : 0
        }
      }, {
        "uid" : "133eaf3e25692ffd",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/teststand/257//#testresult/133eaf3e25692ffd",
        "status" : "broken",
        "statusDetails" : "brownie.exceptions.TransactionError: Tx dropped without known replacement: 0xa3487a6ff9d1159d6419b453c8430f64e96fe83957140c8323c2ae1ef535437d",
        "time" : {
          "start" : 1639751369934,
          "stop" : 1639751369934,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "48f62ef993ce231e.json",
  "parameterValues" : [ ]
}