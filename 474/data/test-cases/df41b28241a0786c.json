{
  "uid" : "df41b28241a0786c",
  "name" : "test_only_affects_target",
  "fullName" : "tests.brownie.token.tests.test_approve#test_only_affects_target",
  "historyId" : "35e636b401a70496879a6cd10541a94f",
  "time" : {
    "start" : 1642025671165,
    "stop" : 1642025671165,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "ValueError: connection already closed",
  "statusTrace" : "brownie_project = <Project 'TokenProject'>\naccounts = <brownie.network.account.Accounts object at 0x7f8c5f66dee0>\n\n    @pytest.fixture(scope=\"module\")\n    def token(brownie_project, accounts):\n>       return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n\ntests/brownie/token/tests/conftest.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py:600: in __call__\n    return tx[\"from\"].deploy(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:508: in deploy\n    receipt, exc = self._make_transaction(\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py:725: in _make_transaction\n    raise VirtualMachineError(e) from None\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = VirtualMachineError(ValueError({'code': -32000, 'message': 'connection already closed'}))\nexc = {'code': -32000, 'message': 'connection already closed'}\n\n    def __init__(self, exc: ValueError) -> None:\n        try:\n            exc = exc.args[0]\n        except Exception:\n            pass\n    \n        if isinstance(exc, dict) and \"message\" in exc:\n            if \"data\" not in exc:\n>               raise ValueError(exc[\"message\"]) from None\nE               ValueError: connection already closed\n\n../../../.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py:85: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "configure_neon_network",
    "time" : {
      "start" : 1642025653359,
      "stop" : 1642025653359,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "brownie_project",
    "time" : {
      "start" : 1642025654087,
      "stop" : 1642025669054,
      "duration" : 14967
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "accounts",
    "time" : {
      "start" : 1642025669821,
      "stop" : 1642025670091,
      "duration" : 270
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup_env",
    "time" : {
      "start" : 1642025669821,
      "stop" : 1642025669821,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "token",
    "time" : {
      "start" : 1642025670091,
      "stop" : 1642025670449,
      "duration" : 358
    },
    "status" : "broken",
    "statusMessage" : "ValueError: connection already closed\n",
    "statusTrace" : "  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/_pytest/fixtures.py\", line 932, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/neon-compatibility/neon-compatibility/tests/brownie/token/tests/conftest.py\", line 49, in token\n    return brownie_project.Token.deploy(\"Test Token\", \"TST\", 18, 1e21, {'from': accounts[0]})\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/contract.py\", line 600, in __call__\n    return tx[\"from\"].deploy(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 508, in deploy\n    receipt, exc = self._make_transaction(\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/network/account.py\", line 725, in _make_transaction\n    raise VirtualMachineError(e) from None\n  File \"/home/runner/.local/share/virtualenvs/neon-compatibility-g882AfFF/lib/python3.8/site-packages/brownie/exceptions.py\", line 85, in __init__\n    raise ValueError(exc[\"message\"]) from None\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "afterStages" : [ {
    "name" : "accounts::0",
    "time" : {
      "start" : 1642025701832,
      "stop" : 1642025701832,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Brownie"
  }, {
    "name" : "parentSuite",
    "value" : "tests.brownie.token.tests"
  }, {
    "name" : "suite",
    "value" : "test_approve"
  }, {
    "name" : "host",
    "value" : "fv-az28-122"
  }, {
    "name" : "thread",
    "value" : "3766-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.brownie.token.tests.test_approve"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 19,
        "skipped" : 0,
        "passed" : 68,
        "unknown" : 0,
        "total" : 87
      },
      "items" : [ {
        "uid" : "8325e6367628dcfe",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/472//#testresult/8325e6367628dcfe",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1642018235858,
          "stop" : 1642018235858,
          "duration" : 0
        }
      }, {
        "uid" : "22d5762d5df527b8",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/471//#testresult/22d5762d5df527b8",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1642015602962,
          "stop" : 1642015602962,
          "duration" : 0
        }
      }, {
        "uid" : "c4f512b7f0017aa5",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/470//#testresult/c4f512b7f0017aa5",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1642014228764,
          "stop" : 1642014228764,
          "duration" : 0
        }
      }, {
        "uid" : "2519b3e5fe454c20",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/469//#testresult/2519b3e5fe454c20",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1642012910432,
          "stop" : 1642012910432,
          "duration" : 0
        }
      }, {
        "uid" : "fff79071bc9539cb",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/468//#testresult/fff79071bc9539cb",
        "status" : "broken",
        "statusDetails" : "ValueError: connection already closed",
        "time" : {
          "start" : 1642011420522,
          "stop" : 1642011420522,
          "duration" : 0
        }
      }, {
        "uid" : "717d9efef7ff612e",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/466//#testresult/717d9efef7ff612e",
        "status" : "passed",
        "time" : {
          "start" : 1641997953923,
          "stop" : 1641997956151,
          "duration" : 2228
        }
      }, {
        "uid" : "b15cac0bb6fe5f5d",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/465//#testresult/b15cac0bb6fe5f5d",
        "status" : "passed",
        "time" : {
          "start" : 1641993716089,
          "stop" : 1641993718102,
          "duration" : 2013
        }
      }, {
        "uid" : "d5f696753f7c8688",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/464//#testresult/d5f696753f7c8688",
        "status" : "passed",
        "time" : {
          "start" : 1641990975930,
          "stop" : 1641990977988,
          "duration" : 2058
        }
      }, {
        "uid" : "ddf48b74768bb298",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/463//#testresult/ddf48b74768bb298",
        "status" : "passed",
        "time" : {
          "start" : 1641986337293,
          "stop" : 1641986338934,
          "duration" : 1641
        }
      }, {
        "uid" : "7a083c70016b76d6",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/461//#testresult/7a083c70016b76d6",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='10.2.0.2', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f18961e3b80>: Failed to establish a new connection: [Errno 111] Connection refused'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1641982477124,
          "stop" : 1641982477124,
          "duration" : 0
        }
      }, {
        "uid" : "f1ecbd16623ff46c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/460//#testresult/f1ecbd16623ff46c",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='10.2.0.2', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f189611ea30>: Failed to establish a new connection: [Errno 111] Connection refused'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1641980265985,
          "stop" : 1641980265985,
          "duration" : 0
        }
      }, {
        "uid" : "55699fc8fb8b8f1f",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/459//#testresult/55699fc8fb8b8f1f",
        "status" : "passed",
        "time" : {
          "start" : 1641975790578,
          "stop" : 1641975792627,
          "duration" : 2049
        }
      }, {
        "uid" : "3f31d479999d7d03",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/458//#testresult/3f31d479999d7d03",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='10.2.0.2', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f189611b8e0>: Failed to establish a new connection: [Errno 111] Connection refused'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1641974825968,
          "stop" : 1641974825968,
          "duration" : 0
        }
      }, {
        "uid" : "a802cc614a01ef53",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/457//#testresult/a802cc614a01ef53",
        "status" : "broken",
        "statusDetails" : "ValueError: Gas estimation failed: 'HTTPConnectionPool(host='10.2.0.2', port=8899): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f1895fcda90>: Failed to establish a new connection: [Errno 111] Connection refused'))'. This transaction will likely revert. If you wish to broadcast, you must set the gas limit manually.",
        "time" : {
          "start" : 1641974204479,
          "stop" : 1641974204479,
          "duration" : 0
        }
      }, {
        "uid" : "fae3e46aa100c6d7",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/456//#testresult/fae3e46aa100c6d7",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ReadTimeout: HTTPConnectionPool(host='proxy.night.stand.neontest.xyz', port=80): Read timed out. (read timeout=30)",
        "time" : {
          "start" : 1641957703550,
          "stop" : 1641957703550,
          "duration" : 0
        }
      }, {
        "uid" : "99e3576bac3b98d2",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/455//#testresult/99e3576bac3b98d2",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ReadTimeout: HTTPConnectionPool(host='proxy.night.stand.neontest.xyz', port=80): Read timed out. (read timeout=30)",
        "time" : {
          "start" : 1641951899916,
          "stop" : 1641951899916,
          "duration" : 0
        }
      }, {
        "uid" : "2de536436fa8f21",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/454//#testresult/2de536436fa8f21",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.ReadTimeout: HTTPConnectionPool(host='proxy.night.stand.neontest.xyz', port=80): Read timed out. (read timeout=30)",
        "time" : {
          "start" : 1641950378287,
          "stop" : 1641950378287,
          "duration" : 0
        }
      }, {
        "uid" : "67c09afc19bba2dd",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/453//#testresult/67c09afc19bba2dd",
        "status" : "passed",
        "time" : {
          "start" : 1641947693238,
          "stop" : 1641947694926,
          "duration" : 1688
        }
      }, {
        "uid" : "d62cf1ecfa8fed6c",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/452//#testresult/d62cf1ecfa8fed6c",
        "status" : "passed",
        "time" : {
          "start" : 1641870936480,
          "stop" : 1641870938140,
          "duration" : 1660
        }
      }, {
        "uid" : "1314ee6d5588151a",
        "reportUrl" : "https://neonlabsorg.github.io/neon-compatibility/451//#testresult/1314ee6d5588151a",
        "status" : "passed",
        "time" : {
          "start" : 1641861326207,
          "stop" : 1641861328234,
          "duration" : 2027
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "df41b28241a0786c.json",
  "parameterValues" : [ ]
}